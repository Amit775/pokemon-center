// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -------------------------------------------
// 1. Core "Clean" Tables (Data from CSVs)
// -------------------------------------------

model Pokemon {
  id        Int                @id @unique
  name      String             @unique
  slug      String             @unique
  // Relation Fields (not columns)
  types     PokemonToType[]
  moves     PokemonToMove[]
  abilities PokemonToAbility[]
  stats     PokemonToStat[]
}

model Type {
  id      Int             @id @unique
  name    String          @unique
  slug    String          @unique
  // Relation Fields (not columns)
  pokemon PokemonToType[]
  moves   Move[] // Allows querying for all moves of this type
}

model Move {
  id            Int           @id @unique
  name          String        @unique
  slug          String        @unique
  power         Int?
  accuracy      Int?
  pp            Int?
  priority      Int           @default(0)
  typeId        Int
  damageClassId Int
  type          Type          @relation(fields: [typeId], references: [id])
  damageClass   DamageClass   @relation(fields: [damageClassId], references: [id])
  // Relation Fields (not columns)
  pokemon       PokemonToMove[]
}

model Ability {
  id      Int                @id @unique
  name    String             @unique
  slug    String             @unique
  // Relation Fields (not columns)
  pokemon PokemonToAbility[]
}

model Item {
  id   Int    @id @unique
  name String @unique
  slug String @unique
}

model Stat {
  id      Int             @id @unique
  name    String          @unique
  slug    String          @unique
  // Relation Fields (not columns)
  pokemon PokemonToStat[]
}

model DamageClass {
  id    Int    @id @unique
  name  String @unique // e.g., "Physical", "Special", "Status"
  slug  String @unique
  moves Move[]
}


// -------------------------------------------
// 2. Relation (Junction) Tables
// -------------------------------------------

model PokemonToType {
  pokemonId Int
  typeId    Int
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  type      Type    @relation(fields: [typeId], references: [id])

  @@id([pokemonId, typeId])
}

model PokemonToMove {
  pokemonId Int
  moveId    Int
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  move      Move    @relation(fields: [moveId], references: [id])

  @@id([pokemonId, moveId])
}

model PokemonToAbility {
  pokemonId Int
  abilityId Int
  isHidden  Boolean @default(false)
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  ability   Ability @relation(fields: [abilityId], references: [id])

  @@id([pokemonId, abilityId])
}

model PokemonToStat {
  pokemonId Int
  statId    Int
  baseStat  Int
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  stat      Stat    @relation(fields: [statId], references: [id])

  @@id([pokemonId, statId])
}

