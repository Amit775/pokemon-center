import { ClassType } from "type-graphql";
import * as tslib from "tslib";
import * as crudResolvers from "./resolvers/crud/resolvers-crud.index";
import * as argsTypes from "./resolvers/crud/args.index";
import * as actionResolvers from "./resolvers/crud/resolvers-actions.index";
import * as relationResolvers from "./resolvers/relations/resolvers.index";
import * as models from "./models";
import * as outputTypes from "./resolvers/outputs";
import * as inputTypes from "./resolvers/inputs";

export type MethodDecoratorOverrideFn = (decorators: MethodDecorator[]) => MethodDecorator[];

const crudResolversMap = {
  Pokemon: crudResolvers.PokemonCrudResolver,
  PokemonSpecies: crudResolvers.PokemonSpeciesCrudResolver,
  PokemonForm: crudResolvers.PokemonFormCrudResolver,
  Move: crudResolvers.MoveCrudResolver,
  MoveEffect: crudResolvers.MoveEffectCrudResolver,
  MoveTarget: crudResolvers.MoveTargetCrudResolver,
  MoveDamageClass: crudResolvers.MoveDamageClassCrudResolver,
  Type: crudResolvers.TypeCrudResolver,
  Ability: crudResolvers.AbilityCrudResolver,
  Item: crudResolvers.ItemCrudResolver,
  ItemCategory: crudResolvers.ItemCategoryCrudResolver,
  ItemPocket: crudResolvers.ItemPocketCrudResolver,
  Stat: crudResolvers.StatCrudResolver,
  Generation: crudResolvers.GenerationCrudResolver,
  VersionGroup: crudResolvers.VersionGroupCrudResolver,
  Version: crudResolvers.VersionCrudResolver,
  Region: crudResolvers.RegionCrudResolver,
  Location: crudResolvers.LocationCrudResolver,
  LocationArea: crudResolvers.LocationAreaCrudResolver,
  Pokedex: crudResolvers.PokedexCrudResolver,
  EvolutionChain: crudResolvers.EvolutionChainCrudResolver,
  EvolutionTrigger: crudResolvers.EvolutionTriggerCrudResolver,
  PokemonEvolution: crudResolvers.PokemonEvolutionCrudResolver,
  GrowthRates: crudResolvers.GrowthRatesCrudResolver,
  Experience: crudResolvers.ExperienceCrudResolver,
  Gender: crudResolvers.GenderCrudResolver,
  Language: crudResolvers.LanguageCrudResolver,
  EggGroup: crudResolvers.EggGroupCrudResolver,
  Nature: crudResolvers.NatureCrudResolver,
  ContestType: crudResolvers.ContestTypeCrudResolver,
  ContestEffect: crudResolvers.ContestEffectCrudResolver,
  SuperContestEffect: crudResolvers.SuperContestEffectCrudResolver,
  Machine: crudResolvers.MachineCrudResolver,
  EncounterMethod: crudResolvers.EncounterMethodCrudResolver,
  EncounterSlot: crudResolvers.EncounterSlotCrudResolver,
  Encounter: crudResolvers.EncounterCrudResolver,
  EncounterCondition: crudResolvers.EncounterConditionCrudResolver,
  EncounterConditionValue: crudResolvers.EncounterConditionValueCrudResolver,
  EncounterConditionValueMap: crudResolvers.EncounterConditionValueMapCrudResolver,
  MoveMetaCategory: crudResolvers.MoveMetaCategoryCrudResolver,
  MoveMetaAilment: crudResolvers.MoveMetaAilmentCrudResolver,
  MoveMeta: crudResolvers.MoveMetaCrudResolver,
  MoveMetaStatChanges: crudResolvers.MoveMetaStatChangesCrudResolver,
  MoveFlag: crudResolvers.MoveFlagCrudResolver,
  MoveFlagMap: crudResolvers.MoveFlagMapCrudResolver,
  MoveBattleStyle: crudResolvers.MoveBattleStyleCrudResolver,
  ItemFlag: crudResolvers.ItemFlagCrudResolver,
  ItemFlagMap: crudResolvers.ItemFlagMapCrudResolver,
  ItemFlingEffect: crudResolvers.ItemFlingEffectCrudResolver,
  Berry: crudResolvers.BerryCrudResolver,
  BerryFirmness: crudResolvers.BerryFirmnessCrudResolver,
  BerryFlavor: crudResolvers.BerryFlavorCrudResolver,
  Characteristic: crudResolvers.CharacteristicCrudResolver,
  ContestCombo: crudResolvers.ContestComboCrudResolver,
  SuperContestCombo: crudResolvers.SuperContestComboCrudResolver,
  PokemonMoveMethod: crudResolvers.PokemonMoveMethodCrudResolver,
  VersionGroupPokemonMoveMethod: crudResolvers.VersionGroupPokemonMoveMethodCrudResolver,
  PokemonShape: crudResolvers.PokemonShapeCrudResolver,
  PokemonColor: crudResolvers.PokemonColorCrudResolver,
  PokemonHabitat: crudResolvers.PokemonHabitatCrudResolver,
  TypeEfficacy: crudResolvers.TypeEfficacyCrudResolver,
  VersionGroupRegion: crudResolvers.VersionGroupRegionCrudResolver,
  PokedexVersionGroup: crudResolvers.PokedexVersionGroupCrudResolver,
  PokemonAbility: crudResolvers.PokemonAbilityCrudResolver,
  PokemonMove: crudResolvers.PokemonMoveCrudResolver,
  PokemonStat: crudResolvers.PokemonStatCrudResolver,
  PokemonType: crudResolvers.PokemonTypeCrudResolver,
  PokemonEggGroup: crudResolvers.PokemonEggGroupCrudResolver,
  PokemonItem: crudResolvers.PokemonItemCrudResolver,
  PokemonGameIndex: crudResolvers.PokemonGameIndexCrudResolver,
  PokemonDexNumber: crudResolvers.PokemonDexNumberCrudResolver,
  PokemonFormGeneration: crudResolvers.PokemonFormGenerationCrudResolver,
  PokemonFormType: crudResolvers.PokemonFormTypeCrudResolver,
  TypeGameIndex: crudResolvers.TypeGameIndexCrudResolver,
  ItemGameIndex: crudResolvers.ItemGameIndexCrudResolver,
  LocationGameIndex: crudResolvers.LocationGameIndexCrudResolver,
  LocationAreaEncounterRate: crudResolvers.LocationAreaEncounterRateCrudResolver,
  NatureBattleStylePreference: crudResolvers.NatureBattleStylePreferenceCrudResolver
};
const actionResolversMap = {
  Pokemon: {
    aggregatePokemon: actionResolvers.AggregatePokemonResolver,
    findFirstPokemon: actionResolvers.FindFirstPokemonResolver,
    findFirstPokemonOrThrow: actionResolvers.FindFirstPokemonOrThrowResolver,
    findManyPokemon: actionResolvers.FindManyPokemonResolver,
    findUniquePokemon: actionResolvers.FindUniquePokemonResolver,
    findUniquePokemonOrThrow: actionResolvers.FindUniquePokemonOrThrowResolver,
    groupByPokemon: actionResolvers.GroupByPokemonResolver,
  },
  PokemonSpecies: {
    aggregatePokemonSpecies: actionResolvers.AggregatePokemonSpeciesResolver,
    findFirstPokemonSpecies: actionResolvers.FindFirstPokemonSpeciesResolver,
    findFirstPokemonSpeciesOrThrow: actionResolvers.FindFirstPokemonSpeciesOrThrowResolver,
    findManyPokemonSpecies: actionResolvers.FindManyPokemonSpeciesResolver,
    findUniquePokemonSpecies: actionResolvers.FindUniquePokemonSpeciesResolver,
    findUniquePokemonSpeciesOrThrow: actionResolvers.FindUniquePokemonSpeciesOrThrowResolver,
    groupByPokemonSpecies: actionResolvers.GroupByPokemonSpeciesResolver,
  },
  PokemonForm: {
    aggregatePokemonForm: actionResolvers.AggregatePokemonFormResolver,
    findFirstPokemonForm: actionResolvers.FindFirstPokemonFormResolver,
    findFirstPokemonFormOrThrow: actionResolvers.FindFirstPokemonFormOrThrowResolver,
    pokemonForms: actionResolvers.FindManyPokemonFormResolver,
    pokemonForm: actionResolvers.FindUniquePokemonFormResolver,
    getPokemonForm: actionResolvers.FindUniquePokemonFormOrThrowResolver,
    groupByPokemonForm: actionResolvers.GroupByPokemonFormResolver,
  },
  Move: {
    aggregateMove: actionResolvers.AggregateMoveResolver,
    findFirstMove: actionResolvers.FindFirstMoveResolver,
    findFirstMoveOrThrow: actionResolvers.FindFirstMoveOrThrowResolver,
    moves: actionResolvers.FindManyMoveResolver,
    move: actionResolvers.FindUniqueMoveResolver,
    getMove: actionResolvers.FindUniqueMoveOrThrowResolver,
    groupByMove: actionResolvers.GroupByMoveResolver,
  },
  MoveEffect: {
    aggregateMoveEffect: actionResolvers.AggregateMoveEffectResolver,
    findFirstMoveEffect: actionResolvers.FindFirstMoveEffectResolver,
    findFirstMoveEffectOrThrow: actionResolvers.FindFirstMoveEffectOrThrowResolver,
    moveEffects: actionResolvers.FindManyMoveEffectResolver,
    moveEffect: actionResolvers.FindUniqueMoveEffectResolver,
    getMoveEffect: actionResolvers.FindUniqueMoveEffectOrThrowResolver,
    groupByMoveEffect: actionResolvers.GroupByMoveEffectResolver,
  },
  MoveTarget: {
    aggregateMoveTarget: actionResolvers.AggregateMoveTargetResolver,
    findFirstMoveTarget: actionResolvers.FindFirstMoveTargetResolver,
    findFirstMoveTargetOrThrow: actionResolvers.FindFirstMoveTargetOrThrowResolver,
    moveTargets: actionResolvers.FindManyMoveTargetResolver,
    moveTarget: actionResolvers.FindUniqueMoveTargetResolver,
    getMoveTarget: actionResolvers.FindUniqueMoveTargetOrThrowResolver,
    groupByMoveTarget: actionResolvers.GroupByMoveTargetResolver,
  },
  MoveDamageClass: {
    aggregateMoveDamageClass: actionResolvers.AggregateMoveDamageClassResolver,
    findFirstMoveDamageClass: actionResolvers.FindFirstMoveDamageClassResolver,
    findFirstMoveDamageClassOrThrow: actionResolvers.FindFirstMoveDamageClassOrThrowResolver,
    moveDamageClasses: actionResolvers.FindManyMoveDamageClassResolver,
    moveDamageClass: actionResolvers.FindUniqueMoveDamageClassResolver,
    getMoveDamageClass: actionResolvers.FindUniqueMoveDamageClassOrThrowResolver,
    groupByMoveDamageClass: actionResolvers.GroupByMoveDamageClassResolver,
  },
  Type: {
    aggregateType: actionResolvers.AggregateTypeResolver,
    findFirstType: actionResolvers.FindFirstTypeResolver,
    findFirstTypeOrThrow: actionResolvers.FindFirstTypeOrThrowResolver,
    types: actionResolvers.FindManyTypeResolver,
    type: actionResolvers.FindUniqueTypeResolver,
    getType: actionResolvers.FindUniqueTypeOrThrowResolver,
    groupByType: actionResolvers.GroupByTypeResolver,
  },
  Ability: {
    aggregateAbility: actionResolvers.AggregateAbilityResolver,
    findFirstAbility: actionResolvers.FindFirstAbilityResolver,
    findFirstAbilityOrThrow: actionResolvers.FindFirstAbilityOrThrowResolver,
    abilities: actionResolvers.FindManyAbilityResolver,
    ability: actionResolvers.FindUniqueAbilityResolver,
    getAbility: actionResolvers.FindUniqueAbilityOrThrowResolver,
    groupByAbility: actionResolvers.GroupByAbilityResolver,
  },
  Item: {
    aggregateItem: actionResolvers.AggregateItemResolver,
    findFirstItem: actionResolvers.FindFirstItemResolver,
    findFirstItemOrThrow: actionResolvers.FindFirstItemOrThrowResolver,
    items: actionResolvers.FindManyItemResolver,
    item: actionResolvers.FindUniqueItemResolver,
    getItem: actionResolvers.FindUniqueItemOrThrowResolver,
    groupByItem: actionResolvers.GroupByItemResolver,
  },
  ItemCategory: {
    aggregateItemCategory: actionResolvers.AggregateItemCategoryResolver,
    findFirstItemCategory: actionResolvers.FindFirstItemCategoryResolver,
    findFirstItemCategoryOrThrow: actionResolvers.FindFirstItemCategoryOrThrowResolver,
    itemCategories: actionResolvers.FindManyItemCategoryResolver,
    itemCategory: actionResolvers.FindUniqueItemCategoryResolver,
    getItemCategory: actionResolvers.FindUniqueItemCategoryOrThrowResolver,
    groupByItemCategory: actionResolvers.GroupByItemCategoryResolver,
  },
  ItemPocket: {
    aggregateItemPocket: actionResolvers.AggregateItemPocketResolver,
    findFirstItemPocket: actionResolvers.FindFirstItemPocketResolver,
    findFirstItemPocketOrThrow: actionResolvers.FindFirstItemPocketOrThrowResolver,
    itemPockets: actionResolvers.FindManyItemPocketResolver,
    itemPocket: actionResolvers.FindUniqueItemPocketResolver,
    getItemPocket: actionResolvers.FindUniqueItemPocketOrThrowResolver,
    groupByItemPocket: actionResolvers.GroupByItemPocketResolver,
  },
  Stat: {
    aggregateStat: actionResolvers.AggregateStatResolver,
    findFirstStat: actionResolvers.FindFirstStatResolver,
    findFirstStatOrThrow: actionResolvers.FindFirstStatOrThrowResolver,
    stats: actionResolvers.FindManyStatResolver,
    stat: actionResolvers.FindUniqueStatResolver,
    getStat: actionResolvers.FindUniqueStatOrThrowResolver,
    groupByStat: actionResolvers.GroupByStatResolver,
  },
  Generation: {
    aggregateGeneration: actionResolvers.AggregateGenerationResolver,
    findFirstGeneration: actionResolvers.FindFirstGenerationResolver,
    findFirstGenerationOrThrow: actionResolvers.FindFirstGenerationOrThrowResolver,
    generations: actionResolvers.FindManyGenerationResolver,
    generation: actionResolvers.FindUniqueGenerationResolver,
    getGeneration: actionResolvers.FindUniqueGenerationOrThrowResolver,
    groupByGeneration: actionResolvers.GroupByGenerationResolver,
  },
  VersionGroup: {
    aggregateVersionGroup: actionResolvers.AggregateVersionGroupResolver,
    findFirstVersionGroup: actionResolvers.FindFirstVersionGroupResolver,
    findFirstVersionGroupOrThrow: actionResolvers.FindFirstVersionGroupOrThrowResolver,
    versionGroups: actionResolvers.FindManyVersionGroupResolver,
    versionGroup: actionResolvers.FindUniqueVersionGroupResolver,
    getVersionGroup: actionResolvers.FindUniqueVersionGroupOrThrowResolver,
    groupByVersionGroup: actionResolvers.GroupByVersionGroupResolver,
  },
  Version: {
    aggregateVersion: actionResolvers.AggregateVersionResolver,
    findFirstVersion: actionResolvers.FindFirstVersionResolver,
    findFirstVersionOrThrow: actionResolvers.FindFirstVersionOrThrowResolver,
    versions: actionResolvers.FindManyVersionResolver,
    version: actionResolvers.FindUniqueVersionResolver,
    getVersion: actionResolvers.FindUniqueVersionOrThrowResolver,
    groupByVersion: actionResolvers.GroupByVersionResolver,
  },
  Region: {
    aggregateRegion: actionResolvers.AggregateRegionResolver,
    findFirstRegion: actionResolvers.FindFirstRegionResolver,
    findFirstRegionOrThrow: actionResolvers.FindFirstRegionOrThrowResolver,
    regions: actionResolvers.FindManyRegionResolver,
    region: actionResolvers.FindUniqueRegionResolver,
    getRegion: actionResolvers.FindUniqueRegionOrThrowResolver,
    groupByRegion: actionResolvers.GroupByRegionResolver,
  },
  Location: {
    aggregateLocation: actionResolvers.AggregateLocationResolver,
    findFirstLocation: actionResolvers.FindFirstLocationResolver,
    findFirstLocationOrThrow: actionResolvers.FindFirstLocationOrThrowResolver,
    locations: actionResolvers.FindManyLocationResolver,
    location: actionResolvers.FindUniqueLocationResolver,
    getLocation: actionResolvers.FindUniqueLocationOrThrowResolver,
    groupByLocation: actionResolvers.GroupByLocationResolver,
  },
  LocationArea: {
    aggregateLocationArea: actionResolvers.AggregateLocationAreaResolver,
    findFirstLocationArea: actionResolvers.FindFirstLocationAreaResolver,
    findFirstLocationAreaOrThrow: actionResolvers.FindFirstLocationAreaOrThrowResolver,
    locationAreas: actionResolvers.FindManyLocationAreaResolver,
    locationArea: actionResolvers.FindUniqueLocationAreaResolver,
    getLocationArea: actionResolvers.FindUniqueLocationAreaOrThrowResolver,
    groupByLocationArea: actionResolvers.GroupByLocationAreaResolver,
  },
  Pokedex: {
    aggregatePokedex: actionResolvers.AggregatePokedexResolver,
    findFirstPokedex: actionResolvers.FindFirstPokedexResolver,
    findFirstPokedexOrThrow: actionResolvers.FindFirstPokedexOrThrowResolver,
    pokedexes: actionResolvers.FindManyPokedexResolver,
    pokedex: actionResolvers.FindUniquePokedexResolver,
    getPokedex: actionResolvers.FindUniquePokedexOrThrowResolver,
    groupByPokedex: actionResolvers.GroupByPokedexResolver,
  },
  EvolutionChain: {
    aggregateEvolutionChain: actionResolvers.AggregateEvolutionChainResolver,
    findFirstEvolutionChain: actionResolvers.FindFirstEvolutionChainResolver,
    findFirstEvolutionChainOrThrow: actionResolvers.FindFirstEvolutionChainOrThrowResolver,
    evolutionChains: actionResolvers.FindManyEvolutionChainResolver,
    evolutionChain: actionResolvers.FindUniqueEvolutionChainResolver,
    getEvolutionChain: actionResolvers.FindUniqueEvolutionChainOrThrowResolver,
    groupByEvolutionChain: actionResolvers.GroupByEvolutionChainResolver,
  },
  EvolutionTrigger: {
    aggregateEvolutionTrigger: actionResolvers.AggregateEvolutionTriggerResolver,
    findFirstEvolutionTrigger: actionResolvers.FindFirstEvolutionTriggerResolver,
    findFirstEvolutionTriggerOrThrow: actionResolvers.FindFirstEvolutionTriggerOrThrowResolver,
    evolutionTriggers: actionResolvers.FindManyEvolutionTriggerResolver,
    evolutionTrigger: actionResolvers.FindUniqueEvolutionTriggerResolver,
    getEvolutionTrigger: actionResolvers.FindUniqueEvolutionTriggerOrThrowResolver,
    groupByEvolutionTrigger: actionResolvers.GroupByEvolutionTriggerResolver,
  },
  PokemonEvolution: {
    aggregatePokemonEvolution: actionResolvers.AggregatePokemonEvolutionResolver,
    findFirstPokemonEvolution: actionResolvers.FindFirstPokemonEvolutionResolver,
    findFirstPokemonEvolutionOrThrow: actionResolvers.FindFirstPokemonEvolutionOrThrowResolver,
    pokemonEvolutions: actionResolvers.FindManyPokemonEvolutionResolver,
    pokemonEvolution: actionResolvers.FindUniquePokemonEvolutionResolver,
    getPokemonEvolution: actionResolvers.FindUniquePokemonEvolutionOrThrowResolver,
    groupByPokemonEvolution: actionResolvers.GroupByPokemonEvolutionResolver,
  },
  GrowthRates: {
    aggregateGrowthRates: actionResolvers.AggregateGrowthRatesResolver,
    findFirstGrowthRates: actionResolvers.FindFirstGrowthRatesResolver,
    findFirstGrowthRatesOrThrow: actionResolvers.FindFirstGrowthRatesOrThrowResolver,
    findManyGrowthRates: actionResolvers.FindManyGrowthRatesResolver,
    findUniqueGrowthRates: actionResolvers.FindUniqueGrowthRatesResolver,
    findUniqueGrowthRatesOrThrow: actionResolvers.FindUniqueGrowthRatesOrThrowResolver,
    groupByGrowthRates: actionResolvers.GroupByGrowthRatesResolver,
  },
  Experience: {
    aggregateExperience: actionResolvers.AggregateExperienceResolver,
    findFirstExperience: actionResolvers.FindFirstExperienceResolver,
    findFirstExperienceOrThrow: actionResolvers.FindFirstExperienceOrThrowResolver,
    experiences: actionResolvers.FindManyExperienceResolver,
    experience: actionResolvers.FindUniqueExperienceResolver,
    getExperience: actionResolvers.FindUniqueExperienceOrThrowResolver,
    groupByExperience: actionResolvers.GroupByExperienceResolver,
  },
  Gender: {
    aggregateGender: actionResolvers.AggregateGenderResolver,
    findFirstGender: actionResolvers.FindFirstGenderResolver,
    findFirstGenderOrThrow: actionResolvers.FindFirstGenderOrThrowResolver,
    genders: actionResolvers.FindManyGenderResolver,
    gender: actionResolvers.FindUniqueGenderResolver,
    getGender: actionResolvers.FindUniqueGenderOrThrowResolver,
    groupByGender: actionResolvers.GroupByGenderResolver,
  },
  Language: {
    aggregateLanguage: actionResolvers.AggregateLanguageResolver,
    findFirstLanguage: actionResolvers.FindFirstLanguageResolver,
    findFirstLanguageOrThrow: actionResolvers.FindFirstLanguageOrThrowResolver,
    languages: actionResolvers.FindManyLanguageResolver,
    language: actionResolvers.FindUniqueLanguageResolver,
    getLanguage: actionResolvers.FindUniqueLanguageOrThrowResolver,
    groupByLanguage: actionResolvers.GroupByLanguageResolver,
  },
  EggGroup: {
    aggregateEggGroup: actionResolvers.AggregateEggGroupResolver,
    findFirstEggGroup: actionResolvers.FindFirstEggGroupResolver,
    findFirstEggGroupOrThrow: actionResolvers.FindFirstEggGroupOrThrowResolver,
    eggGroups: actionResolvers.FindManyEggGroupResolver,
    eggGroup: actionResolvers.FindUniqueEggGroupResolver,
    getEggGroup: actionResolvers.FindUniqueEggGroupOrThrowResolver,
    groupByEggGroup: actionResolvers.GroupByEggGroupResolver,
  },
  Nature: {
    aggregateNature: actionResolvers.AggregateNatureResolver,
    findFirstNature: actionResolvers.FindFirstNatureResolver,
    findFirstNatureOrThrow: actionResolvers.FindFirstNatureOrThrowResolver,
    natures: actionResolvers.FindManyNatureResolver,
    nature: actionResolvers.FindUniqueNatureResolver,
    getNature: actionResolvers.FindUniqueNatureOrThrowResolver,
    groupByNature: actionResolvers.GroupByNatureResolver,
  },
  ContestType: {
    aggregateContestType: actionResolvers.AggregateContestTypeResolver,
    findFirstContestType: actionResolvers.FindFirstContestTypeResolver,
    findFirstContestTypeOrThrow: actionResolvers.FindFirstContestTypeOrThrowResolver,
    contestTypes: actionResolvers.FindManyContestTypeResolver,
    contestType: actionResolvers.FindUniqueContestTypeResolver,
    getContestType: actionResolvers.FindUniqueContestTypeOrThrowResolver,
    groupByContestType: actionResolvers.GroupByContestTypeResolver,
  },
  ContestEffect: {
    aggregateContestEffect: actionResolvers.AggregateContestEffectResolver,
    findFirstContestEffect: actionResolvers.FindFirstContestEffectResolver,
    findFirstContestEffectOrThrow: actionResolvers.FindFirstContestEffectOrThrowResolver,
    contestEffects: actionResolvers.FindManyContestEffectResolver,
    contestEffect: actionResolvers.FindUniqueContestEffectResolver,
    getContestEffect: actionResolvers.FindUniqueContestEffectOrThrowResolver,
    groupByContestEffect: actionResolvers.GroupByContestEffectResolver,
  },
  SuperContestEffect: {
    aggregateSuperContestEffect: actionResolvers.AggregateSuperContestEffectResolver,
    findFirstSuperContestEffect: actionResolvers.FindFirstSuperContestEffectResolver,
    findFirstSuperContestEffectOrThrow: actionResolvers.FindFirstSuperContestEffectOrThrowResolver,
    superContestEffects: actionResolvers.FindManySuperContestEffectResolver,
    superContestEffect: actionResolvers.FindUniqueSuperContestEffectResolver,
    getSuperContestEffect: actionResolvers.FindUniqueSuperContestEffectOrThrowResolver,
    groupBySuperContestEffect: actionResolvers.GroupBySuperContestEffectResolver,
  },
  Machine: {
    aggregateMachine: actionResolvers.AggregateMachineResolver,
    findFirstMachine: actionResolvers.FindFirstMachineResolver,
    findFirstMachineOrThrow: actionResolvers.FindFirstMachineOrThrowResolver,
    machines: actionResolvers.FindManyMachineResolver,
    machine: actionResolvers.FindUniqueMachineResolver,
    getMachine: actionResolvers.FindUniqueMachineOrThrowResolver,
    groupByMachine: actionResolvers.GroupByMachineResolver,
  },
  EncounterMethod: {
    aggregateEncounterMethod: actionResolvers.AggregateEncounterMethodResolver,
    findFirstEncounterMethod: actionResolvers.FindFirstEncounterMethodResolver,
    findFirstEncounterMethodOrThrow: actionResolvers.FindFirstEncounterMethodOrThrowResolver,
    encounterMethods: actionResolvers.FindManyEncounterMethodResolver,
    encounterMethod: actionResolvers.FindUniqueEncounterMethodResolver,
    getEncounterMethod: actionResolvers.FindUniqueEncounterMethodOrThrowResolver,
    groupByEncounterMethod: actionResolvers.GroupByEncounterMethodResolver,
  },
  EncounterSlot: {
    aggregateEncounterSlot: actionResolvers.AggregateEncounterSlotResolver,
    findFirstEncounterSlot: actionResolvers.FindFirstEncounterSlotResolver,
    findFirstEncounterSlotOrThrow: actionResolvers.FindFirstEncounterSlotOrThrowResolver,
    encounterSlots: actionResolvers.FindManyEncounterSlotResolver,
    encounterSlot: actionResolvers.FindUniqueEncounterSlotResolver,
    getEncounterSlot: actionResolvers.FindUniqueEncounterSlotOrThrowResolver,
    groupByEncounterSlot: actionResolvers.GroupByEncounterSlotResolver,
  },
  Encounter: {
    aggregateEncounter: actionResolvers.AggregateEncounterResolver,
    findFirstEncounter: actionResolvers.FindFirstEncounterResolver,
    findFirstEncounterOrThrow: actionResolvers.FindFirstEncounterOrThrowResolver,
    encounters: actionResolvers.FindManyEncounterResolver,
    encounter: actionResolvers.FindUniqueEncounterResolver,
    getEncounter: actionResolvers.FindUniqueEncounterOrThrowResolver,
    groupByEncounter: actionResolvers.GroupByEncounterResolver,
  },
  EncounterCondition: {
    aggregateEncounterCondition: actionResolvers.AggregateEncounterConditionResolver,
    findFirstEncounterCondition: actionResolvers.FindFirstEncounterConditionResolver,
    findFirstEncounterConditionOrThrow: actionResolvers.FindFirstEncounterConditionOrThrowResolver,
    encounterConditions: actionResolvers.FindManyEncounterConditionResolver,
    encounterCondition: actionResolvers.FindUniqueEncounterConditionResolver,
    getEncounterCondition: actionResolvers.FindUniqueEncounterConditionOrThrowResolver,
    groupByEncounterCondition: actionResolvers.GroupByEncounterConditionResolver,
  },
  EncounterConditionValue: {
    aggregateEncounterConditionValue: actionResolvers.AggregateEncounterConditionValueResolver,
    findFirstEncounterConditionValue: actionResolvers.FindFirstEncounterConditionValueResolver,
    findFirstEncounterConditionValueOrThrow: actionResolvers.FindFirstEncounterConditionValueOrThrowResolver,
    encounterConditionValues: actionResolvers.FindManyEncounterConditionValueResolver,
    encounterConditionValue: actionResolvers.FindUniqueEncounterConditionValueResolver,
    getEncounterConditionValue: actionResolvers.FindUniqueEncounterConditionValueOrThrowResolver,
    groupByEncounterConditionValue: actionResolvers.GroupByEncounterConditionValueResolver,
  },
  EncounterConditionValueMap: {
    aggregateEncounterConditionValueMap: actionResolvers.AggregateEncounterConditionValueMapResolver,
    findFirstEncounterConditionValueMap: actionResolvers.FindFirstEncounterConditionValueMapResolver,
    findFirstEncounterConditionValueMapOrThrow: actionResolvers.FindFirstEncounterConditionValueMapOrThrowResolver,
    encounterConditionValueMaps: actionResolvers.FindManyEncounterConditionValueMapResolver,
    encounterConditionValueMap: actionResolvers.FindUniqueEncounterConditionValueMapResolver,
    getEncounterConditionValueMap: actionResolvers.FindUniqueEncounterConditionValueMapOrThrowResolver,
    groupByEncounterConditionValueMap: actionResolvers.GroupByEncounterConditionValueMapResolver,
  },
  MoveMetaCategory: {
    aggregateMoveMetaCategory: actionResolvers.AggregateMoveMetaCategoryResolver,
    findFirstMoveMetaCategory: actionResolvers.FindFirstMoveMetaCategoryResolver,
    findFirstMoveMetaCategoryOrThrow: actionResolvers.FindFirstMoveMetaCategoryOrThrowResolver,
    moveMetaCategories: actionResolvers.FindManyMoveMetaCategoryResolver,
    moveMetaCategory: actionResolvers.FindUniqueMoveMetaCategoryResolver,
    getMoveMetaCategory: actionResolvers.FindUniqueMoveMetaCategoryOrThrowResolver,
    groupByMoveMetaCategory: actionResolvers.GroupByMoveMetaCategoryResolver,
  },
  MoveMetaAilment: {
    aggregateMoveMetaAilment: actionResolvers.AggregateMoveMetaAilmentResolver,
    findFirstMoveMetaAilment: actionResolvers.FindFirstMoveMetaAilmentResolver,
    findFirstMoveMetaAilmentOrThrow: actionResolvers.FindFirstMoveMetaAilmentOrThrowResolver,
    moveMetaAilments: actionResolvers.FindManyMoveMetaAilmentResolver,
    moveMetaAilment: actionResolvers.FindUniqueMoveMetaAilmentResolver,
    getMoveMetaAilment: actionResolvers.FindUniqueMoveMetaAilmentOrThrowResolver,
    groupByMoveMetaAilment: actionResolvers.GroupByMoveMetaAilmentResolver,
  },
  MoveMeta: {
    aggregateMoveMeta: actionResolvers.AggregateMoveMetaResolver,
    findFirstMoveMeta: actionResolvers.FindFirstMoveMetaResolver,
    findFirstMoveMetaOrThrow: actionResolvers.FindFirstMoveMetaOrThrowResolver,
    moveMetas: actionResolvers.FindManyMoveMetaResolver,
    moveMeta: actionResolvers.FindUniqueMoveMetaResolver,
    getMoveMeta: actionResolvers.FindUniqueMoveMetaOrThrowResolver,
    groupByMoveMeta: actionResolvers.GroupByMoveMetaResolver,
  },
  MoveMetaStatChanges: {
    aggregateMoveMetaStatChanges: actionResolvers.AggregateMoveMetaStatChangesResolver,
    findFirstMoveMetaStatChanges: actionResolvers.FindFirstMoveMetaStatChangesResolver,
    findFirstMoveMetaStatChangesOrThrow: actionResolvers.FindFirstMoveMetaStatChangesOrThrowResolver,
    findManyMoveMetaStatChanges: actionResolvers.FindManyMoveMetaStatChangesResolver,
    findUniqueMoveMetaStatChanges: actionResolvers.FindUniqueMoveMetaStatChangesResolver,
    findUniqueMoveMetaStatChangesOrThrow: actionResolvers.FindUniqueMoveMetaStatChangesOrThrowResolver,
    groupByMoveMetaStatChanges: actionResolvers.GroupByMoveMetaStatChangesResolver,
  },
  MoveFlag: {
    aggregateMoveFlag: actionResolvers.AggregateMoveFlagResolver,
    findFirstMoveFlag: actionResolvers.FindFirstMoveFlagResolver,
    findFirstMoveFlagOrThrow: actionResolvers.FindFirstMoveFlagOrThrowResolver,
    moveFlags: actionResolvers.FindManyMoveFlagResolver,
    moveFlag: actionResolvers.FindUniqueMoveFlagResolver,
    getMoveFlag: actionResolvers.FindUniqueMoveFlagOrThrowResolver,
    groupByMoveFlag: actionResolvers.GroupByMoveFlagResolver,
  },
  MoveFlagMap: {
    aggregateMoveFlagMap: actionResolvers.AggregateMoveFlagMapResolver,
    findFirstMoveFlagMap: actionResolvers.FindFirstMoveFlagMapResolver,
    findFirstMoveFlagMapOrThrow: actionResolvers.FindFirstMoveFlagMapOrThrowResolver,
    moveFlagMaps: actionResolvers.FindManyMoveFlagMapResolver,
    moveFlagMap: actionResolvers.FindUniqueMoveFlagMapResolver,
    getMoveFlagMap: actionResolvers.FindUniqueMoveFlagMapOrThrowResolver,
    groupByMoveFlagMap: actionResolvers.GroupByMoveFlagMapResolver,
  },
  MoveBattleStyle: {
    aggregateMoveBattleStyle: actionResolvers.AggregateMoveBattleStyleResolver,
    findFirstMoveBattleStyle: actionResolvers.FindFirstMoveBattleStyleResolver,
    findFirstMoveBattleStyleOrThrow: actionResolvers.FindFirstMoveBattleStyleOrThrowResolver,
    moveBattleStyles: actionResolvers.FindManyMoveBattleStyleResolver,
    moveBattleStyle: actionResolvers.FindUniqueMoveBattleStyleResolver,
    getMoveBattleStyle: actionResolvers.FindUniqueMoveBattleStyleOrThrowResolver,
    groupByMoveBattleStyle: actionResolvers.GroupByMoveBattleStyleResolver,
  },
  ItemFlag: {
    aggregateItemFlag: actionResolvers.AggregateItemFlagResolver,
    findFirstItemFlag: actionResolvers.FindFirstItemFlagResolver,
    findFirstItemFlagOrThrow: actionResolvers.FindFirstItemFlagOrThrowResolver,
    itemFlags: actionResolvers.FindManyItemFlagResolver,
    itemFlag: actionResolvers.FindUniqueItemFlagResolver,
    getItemFlag: actionResolvers.FindUniqueItemFlagOrThrowResolver,
    groupByItemFlag: actionResolvers.GroupByItemFlagResolver,
  },
  ItemFlagMap: {
    aggregateItemFlagMap: actionResolvers.AggregateItemFlagMapResolver,
    findFirstItemFlagMap: actionResolvers.FindFirstItemFlagMapResolver,
    findFirstItemFlagMapOrThrow: actionResolvers.FindFirstItemFlagMapOrThrowResolver,
    itemFlagMaps: actionResolvers.FindManyItemFlagMapResolver,
    itemFlagMap: actionResolvers.FindUniqueItemFlagMapResolver,
    getItemFlagMap: actionResolvers.FindUniqueItemFlagMapOrThrowResolver,
    groupByItemFlagMap: actionResolvers.GroupByItemFlagMapResolver,
  },
  ItemFlingEffect: {
    aggregateItemFlingEffect: actionResolvers.AggregateItemFlingEffectResolver,
    findFirstItemFlingEffect: actionResolvers.FindFirstItemFlingEffectResolver,
    findFirstItemFlingEffectOrThrow: actionResolvers.FindFirstItemFlingEffectOrThrowResolver,
    itemFlingEffects: actionResolvers.FindManyItemFlingEffectResolver,
    itemFlingEffect: actionResolvers.FindUniqueItemFlingEffectResolver,
    getItemFlingEffect: actionResolvers.FindUniqueItemFlingEffectOrThrowResolver,
    groupByItemFlingEffect: actionResolvers.GroupByItemFlingEffectResolver,
  },
  Berry: {
    aggregateBerry: actionResolvers.AggregateBerryResolver,
    findFirstBerry: actionResolvers.FindFirstBerryResolver,
    findFirstBerryOrThrow: actionResolvers.FindFirstBerryOrThrowResolver,
    berries: actionResolvers.FindManyBerryResolver,
    berry: actionResolvers.FindUniqueBerryResolver,
    getBerry: actionResolvers.FindUniqueBerryOrThrowResolver,
    groupByBerry: actionResolvers.GroupByBerryResolver,
  },
  BerryFirmness: {
    aggregateBerryFirmness: actionResolvers.AggregateBerryFirmnessResolver,
    findFirstBerryFirmness: actionResolvers.FindFirstBerryFirmnessResolver,
    findFirstBerryFirmnessOrThrow: actionResolvers.FindFirstBerryFirmnessOrThrowResolver,
    berryFirmnesses: actionResolvers.FindManyBerryFirmnessResolver,
    berryFirmness: actionResolvers.FindUniqueBerryFirmnessResolver,
    getBerryFirmness: actionResolvers.FindUniqueBerryFirmnessOrThrowResolver,
    groupByBerryFirmness: actionResolvers.GroupByBerryFirmnessResolver,
  },
  BerryFlavor: {
    aggregateBerryFlavor: actionResolvers.AggregateBerryFlavorResolver,
    findFirstBerryFlavor: actionResolvers.FindFirstBerryFlavorResolver,
    findFirstBerryFlavorOrThrow: actionResolvers.FindFirstBerryFlavorOrThrowResolver,
    berryFlavors: actionResolvers.FindManyBerryFlavorResolver,
    berryFlavor: actionResolvers.FindUniqueBerryFlavorResolver,
    getBerryFlavor: actionResolvers.FindUniqueBerryFlavorOrThrowResolver,
    groupByBerryFlavor: actionResolvers.GroupByBerryFlavorResolver,
  },
  Characteristic: {
    aggregateCharacteristic: actionResolvers.AggregateCharacteristicResolver,
    findFirstCharacteristic: actionResolvers.FindFirstCharacteristicResolver,
    findFirstCharacteristicOrThrow: actionResolvers.FindFirstCharacteristicOrThrowResolver,
    characteristics: actionResolvers.FindManyCharacteristicResolver,
    characteristic: actionResolvers.FindUniqueCharacteristicResolver,
    getCharacteristic: actionResolvers.FindUniqueCharacteristicOrThrowResolver,
    groupByCharacteristic: actionResolvers.GroupByCharacteristicResolver,
  },
  ContestCombo: {
    aggregateContestCombo: actionResolvers.AggregateContestComboResolver,
    findFirstContestCombo: actionResolvers.FindFirstContestComboResolver,
    findFirstContestComboOrThrow: actionResolvers.FindFirstContestComboOrThrowResolver,
    contestCombos: actionResolvers.FindManyContestComboResolver,
    contestCombo: actionResolvers.FindUniqueContestComboResolver,
    getContestCombo: actionResolvers.FindUniqueContestComboOrThrowResolver,
    groupByContestCombo: actionResolvers.GroupByContestComboResolver,
  },
  SuperContestCombo: {
    aggregateSuperContestCombo: actionResolvers.AggregateSuperContestComboResolver,
    findFirstSuperContestCombo: actionResolvers.FindFirstSuperContestComboResolver,
    findFirstSuperContestComboOrThrow: actionResolvers.FindFirstSuperContestComboOrThrowResolver,
    superContestCombos: actionResolvers.FindManySuperContestComboResolver,
    superContestCombo: actionResolvers.FindUniqueSuperContestComboResolver,
    getSuperContestCombo: actionResolvers.FindUniqueSuperContestComboOrThrowResolver,
    groupBySuperContestCombo: actionResolvers.GroupBySuperContestComboResolver,
  },
  PokemonMoveMethod: {
    aggregatePokemonMoveMethod: actionResolvers.AggregatePokemonMoveMethodResolver,
    findFirstPokemonMoveMethod: actionResolvers.FindFirstPokemonMoveMethodResolver,
    findFirstPokemonMoveMethodOrThrow: actionResolvers.FindFirstPokemonMoveMethodOrThrowResolver,
    pokemonMoveMethods: actionResolvers.FindManyPokemonMoveMethodResolver,
    pokemonMoveMethod: actionResolvers.FindUniquePokemonMoveMethodResolver,
    getPokemonMoveMethod: actionResolvers.FindUniquePokemonMoveMethodOrThrowResolver,
    groupByPokemonMoveMethod: actionResolvers.GroupByPokemonMoveMethodResolver,
  },
  VersionGroupPokemonMoveMethod: {
    aggregateVersionGroupPokemonMoveMethod: actionResolvers.AggregateVersionGroupPokemonMoveMethodResolver,
    findFirstVersionGroupPokemonMoveMethod: actionResolvers.FindFirstVersionGroupPokemonMoveMethodResolver,
    findFirstVersionGroupPokemonMoveMethodOrThrow: actionResolvers.FindFirstVersionGroupPokemonMoveMethodOrThrowResolver,
    versionGroupPokemonMoveMethods: actionResolvers.FindManyVersionGroupPokemonMoveMethodResolver,
    versionGroupPokemonMoveMethod: actionResolvers.FindUniqueVersionGroupPokemonMoveMethodResolver,
    getVersionGroupPokemonMoveMethod: actionResolvers.FindUniqueVersionGroupPokemonMoveMethodOrThrowResolver,
    groupByVersionGroupPokemonMoveMethod: actionResolvers.GroupByVersionGroupPokemonMoveMethodResolver,
  },
  PokemonShape: {
    aggregatePokemonShape: actionResolvers.AggregatePokemonShapeResolver,
    findFirstPokemonShape: actionResolvers.FindFirstPokemonShapeResolver,
    findFirstPokemonShapeOrThrow: actionResolvers.FindFirstPokemonShapeOrThrowResolver,
    pokemonShapes: actionResolvers.FindManyPokemonShapeResolver,
    pokemonShape: actionResolvers.FindUniquePokemonShapeResolver,
    getPokemonShape: actionResolvers.FindUniquePokemonShapeOrThrowResolver,
    groupByPokemonShape: actionResolvers.GroupByPokemonShapeResolver,
  },
  PokemonColor: {
    aggregatePokemonColor: actionResolvers.AggregatePokemonColorResolver,
    findFirstPokemonColor: actionResolvers.FindFirstPokemonColorResolver,
    findFirstPokemonColorOrThrow: actionResolvers.FindFirstPokemonColorOrThrowResolver,
    pokemonColors: actionResolvers.FindManyPokemonColorResolver,
    pokemonColor: actionResolvers.FindUniquePokemonColorResolver,
    getPokemonColor: actionResolvers.FindUniquePokemonColorOrThrowResolver,
    groupByPokemonColor: actionResolvers.GroupByPokemonColorResolver,
  },
  PokemonHabitat: {
    aggregatePokemonHabitat: actionResolvers.AggregatePokemonHabitatResolver,
    findFirstPokemonHabitat: actionResolvers.FindFirstPokemonHabitatResolver,
    findFirstPokemonHabitatOrThrow: actionResolvers.FindFirstPokemonHabitatOrThrowResolver,
    pokemonHabitats: actionResolvers.FindManyPokemonHabitatResolver,
    pokemonHabitat: actionResolvers.FindUniquePokemonHabitatResolver,
    getPokemonHabitat: actionResolvers.FindUniquePokemonHabitatOrThrowResolver,
    groupByPokemonHabitat: actionResolvers.GroupByPokemonHabitatResolver,
  },
  TypeEfficacy: {
    aggregateTypeEfficacy: actionResolvers.AggregateTypeEfficacyResolver,
    findFirstTypeEfficacy: actionResolvers.FindFirstTypeEfficacyResolver,
    findFirstTypeEfficacyOrThrow: actionResolvers.FindFirstTypeEfficacyOrThrowResolver,
    typeEfficacies: actionResolvers.FindManyTypeEfficacyResolver,
    typeEfficacy: actionResolvers.FindUniqueTypeEfficacyResolver,
    getTypeEfficacy: actionResolvers.FindUniqueTypeEfficacyOrThrowResolver,
    groupByTypeEfficacy: actionResolvers.GroupByTypeEfficacyResolver,
  },
  VersionGroupRegion: {
    aggregateVersionGroupRegion: actionResolvers.AggregateVersionGroupRegionResolver,
    findFirstVersionGroupRegion: actionResolvers.FindFirstVersionGroupRegionResolver,
    findFirstVersionGroupRegionOrThrow: actionResolvers.FindFirstVersionGroupRegionOrThrowResolver,
    versionGroupRegions: actionResolvers.FindManyVersionGroupRegionResolver,
    versionGroupRegion: actionResolvers.FindUniqueVersionGroupRegionResolver,
    getVersionGroupRegion: actionResolvers.FindUniqueVersionGroupRegionOrThrowResolver,
    groupByVersionGroupRegion: actionResolvers.GroupByVersionGroupRegionResolver,
  },
  PokedexVersionGroup: {
    aggregatePokedexVersionGroup: actionResolvers.AggregatePokedexVersionGroupResolver,
    findFirstPokedexVersionGroup: actionResolvers.FindFirstPokedexVersionGroupResolver,
    findFirstPokedexVersionGroupOrThrow: actionResolvers.FindFirstPokedexVersionGroupOrThrowResolver,
    pokedexVersionGroups: actionResolvers.FindManyPokedexVersionGroupResolver,
    pokedexVersionGroup: actionResolvers.FindUniquePokedexVersionGroupResolver,
    getPokedexVersionGroup: actionResolvers.FindUniquePokedexVersionGroupOrThrowResolver,
    groupByPokedexVersionGroup: actionResolvers.GroupByPokedexVersionGroupResolver,
  },
  PokemonAbility: {
    aggregatePokemonAbility: actionResolvers.AggregatePokemonAbilityResolver,
    findFirstPokemonAbility: actionResolvers.FindFirstPokemonAbilityResolver,
    findFirstPokemonAbilityOrThrow: actionResolvers.FindFirstPokemonAbilityOrThrowResolver,
    pokemonAbilities: actionResolvers.FindManyPokemonAbilityResolver,
    pokemonAbility: actionResolvers.FindUniquePokemonAbilityResolver,
    getPokemonAbility: actionResolvers.FindUniquePokemonAbilityOrThrowResolver,
    groupByPokemonAbility: actionResolvers.GroupByPokemonAbilityResolver,
  },
  PokemonMove: {
    aggregatePokemonMove: actionResolvers.AggregatePokemonMoveResolver,
    findFirstPokemonMove: actionResolvers.FindFirstPokemonMoveResolver,
    findFirstPokemonMoveOrThrow: actionResolvers.FindFirstPokemonMoveOrThrowResolver,
    pokemonMoves: actionResolvers.FindManyPokemonMoveResolver,
    pokemonMove: actionResolvers.FindUniquePokemonMoveResolver,
    getPokemonMove: actionResolvers.FindUniquePokemonMoveOrThrowResolver,
    groupByPokemonMove: actionResolvers.GroupByPokemonMoveResolver,
  },
  PokemonStat: {
    aggregatePokemonStat: actionResolvers.AggregatePokemonStatResolver,
    findFirstPokemonStat: actionResolvers.FindFirstPokemonStatResolver,
    findFirstPokemonStatOrThrow: actionResolvers.FindFirstPokemonStatOrThrowResolver,
    pokemonStats: actionResolvers.FindManyPokemonStatResolver,
    pokemonStat: actionResolvers.FindUniquePokemonStatResolver,
    getPokemonStat: actionResolvers.FindUniquePokemonStatOrThrowResolver,
    groupByPokemonStat: actionResolvers.GroupByPokemonStatResolver,
  },
  PokemonType: {
    aggregatePokemonType: actionResolvers.AggregatePokemonTypeResolver,
    findFirstPokemonType: actionResolvers.FindFirstPokemonTypeResolver,
    findFirstPokemonTypeOrThrow: actionResolvers.FindFirstPokemonTypeOrThrowResolver,
    pokemonTypes: actionResolvers.FindManyPokemonTypeResolver,
    pokemonType: actionResolvers.FindUniquePokemonTypeResolver,
    getPokemonType: actionResolvers.FindUniquePokemonTypeOrThrowResolver,
    groupByPokemonType: actionResolvers.GroupByPokemonTypeResolver,
  },
  PokemonEggGroup: {
    aggregatePokemonEggGroup: actionResolvers.AggregatePokemonEggGroupResolver,
    findFirstPokemonEggGroup: actionResolvers.FindFirstPokemonEggGroupResolver,
    findFirstPokemonEggGroupOrThrow: actionResolvers.FindFirstPokemonEggGroupOrThrowResolver,
    pokemonEggGroups: actionResolvers.FindManyPokemonEggGroupResolver,
    pokemonEggGroup: actionResolvers.FindUniquePokemonEggGroupResolver,
    getPokemonEggGroup: actionResolvers.FindUniquePokemonEggGroupOrThrowResolver,
    groupByPokemonEggGroup: actionResolvers.GroupByPokemonEggGroupResolver,
  },
  PokemonItem: {
    aggregatePokemonItem: actionResolvers.AggregatePokemonItemResolver,
    findFirstPokemonItem: actionResolvers.FindFirstPokemonItemResolver,
    findFirstPokemonItemOrThrow: actionResolvers.FindFirstPokemonItemOrThrowResolver,
    pokemonItems: actionResolvers.FindManyPokemonItemResolver,
    pokemonItem: actionResolvers.FindUniquePokemonItemResolver,
    getPokemonItem: actionResolvers.FindUniquePokemonItemOrThrowResolver,
    groupByPokemonItem: actionResolvers.GroupByPokemonItemResolver,
  },
  PokemonGameIndex: {
    aggregatePokemonGameIndex: actionResolvers.AggregatePokemonGameIndexResolver,
    findFirstPokemonGameIndex: actionResolvers.FindFirstPokemonGameIndexResolver,
    findFirstPokemonGameIndexOrThrow: actionResolvers.FindFirstPokemonGameIndexOrThrowResolver,
    pokemonGameIndices: actionResolvers.FindManyPokemonGameIndexResolver,
    pokemonGameIndex: actionResolvers.FindUniquePokemonGameIndexResolver,
    getPokemonGameIndex: actionResolvers.FindUniquePokemonGameIndexOrThrowResolver,
    groupByPokemonGameIndex: actionResolvers.GroupByPokemonGameIndexResolver,
  },
  PokemonDexNumber: {
    aggregatePokemonDexNumber: actionResolvers.AggregatePokemonDexNumberResolver,
    findFirstPokemonDexNumber: actionResolvers.FindFirstPokemonDexNumberResolver,
    findFirstPokemonDexNumberOrThrow: actionResolvers.FindFirstPokemonDexNumberOrThrowResolver,
    pokemonDexNumbers: actionResolvers.FindManyPokemonDexNumberResolver,
    pokemonDexNumber: actionResolvers.FindUniquePokemonDexNumberResolver,
    getPokemonDexNumber: actionResolvers.FindUniquePokemonDexNumberOrThrowResolver,
    groupByPokemonDexNumber: actionResolvers.GroupByPokemonDexNumberResolver,
  },
  PokemonFormGeneration: {
    aggregatePokemonFormGeneration: actionResolvers.AggregatePokemonFormGenerationResolver,
    findFirstPokemonFormGeneration: actionResolvers.FindFirstPokemonFormGenerationResolver,
    findFirstPokemonFormGenerationOrThrow: actionResolvers.FindFirstPokemonFormGenerationOrThrowResolver,
    pokemonFormGenerations: actionResolvers.FindManyPokemonFormGenerationResolver,
    pokemonFormGeneration: actionResolvers.FindUniquePokemonFormGenerationResolver,
    getPokemonFormGeneration: actionResolvers.FindUniquePokemonFormGenerationOrThrowResolver,
    groupByPokemonFormGeneration: actionResolvers.GroupByPokemonFormGenerationResolver,
  },
  PokemonFormType: {
    aggregatePokemonFormType: actionResolvers.AggregatePokemonFormTypeResolver,
    findFirstPokemonFormType: actionResolvers.FindFirstPokemonFormTypeResolver,
    findFirstPokemonFormTypeOrThrow: actionResolvers.FindFirstPokemonFormTypeOrThrowResolver,
    pokemonFormTypes: actionResolvers.FindManyPokemonFormTypeResolver,
    pokemonFormType: actionResolvers.FindUniquePokemonFormTypeResolver,
    getPokemonFormType: actionResolvers.FindUniquePokemonFormTypeOrThrowResolver,
    groupByPokemonFormType: actionResolvers.GroupByPokemonFormTypeResolver,
  },
  TypeGameIndex: {
    aggregateTypeGameIndex: actionResolvers.AggregateTypeGameIndexResolver,
    findFirstTypeGameIndex: actionResolvers.FindFirstTypeGameIndexResolver,
    findFirstTypeGameIndexOrThrow: actionResolvers.FindFirstTypeGameIndexOrThrowResolver,
    typeGameIndices: actionResolvers.FindManyTypeGameIndexResolver,
    typeGameIndex: actionResolvers.FindUniqueTypeGameIndexResolver,
    getTypeGameIndex: actionResolvers.FindUniqueTypeGameIndexOrThrowResolver,
    groupByTypeGameIndex: actionResolvers.GroupByTypeGameIndexResolver,
  },
  ItemGameIndex: {
    aggregateItemGameIndex: actionResolvers.AggregateItemGameIndexResolver,
    findFirstItemGameIndex: actionResolvers.FindFirstItemGameIndexResolver,
    findFirstItemGameIndexOrThrow: actionResolvers.FindFirstItemGameIndexOrThrowResolver,
    itemGameIndices: actionResolvers.FindManyItemGameIndexResolver,
    itemGameIndex: actionResolvers.FindUniqueItemGameIndexResolver,
    getItemGameIndex: actionResolvers.FindUniqueItemGameIndexOrThrowResolver,
    groupByItemGameIndex: actionResolvers.GroupByItemGameIndexResolver,
  },
  LocationGameIndex: {
    aggregateLocationGameIndex: actionResolvers.AggregateLocationGameIndexResolver,
    findFirstLocationGameIndex: actionResolvers.FindFirstLocationGameIndexResolver,
    findFirstLocationGameIndexOrThrow: actionResolvers.FindFirstLocationGameIndexOrThrowResolver,
    locationGameIndices: actionResolvers.FindManyLocationGameIndexResolver,
    locationGameIndex: actionResolvers.FindUniqueLocationGameIndexResolver,
    getLocationGameIndex: actionResolvers.FindUniqueLocationGameIndexOrThrowResolver,
    groupByLocationGameIndex: actionResolvers.GroupByLocationGameIndexResolver,
  },
  LocationAreaEncounterRate: {
    aggregateLocationAreaEncounterRate: actionResolvers.AggregateLocationAreaEncounterRateResolver,
    findFirstLocationAreaEncounterRate: actionResolvers.FindFirstLocationAreaEncounterRateResolver,
    findFirstLocationAreaEncounterRateOrThrow: actionResolvers.FindFirstLocationAreaEncounterRateOrThrowResolver,
    locationAreaEncounterRates: actionResolvers.FindManyLocationAreaEncounterRateResolver,
    locationAreaEncounterRate: actionResolvers.FindUniqueLocationAreaEncounterRateResolver,
    getLocationAreaEncounterRate: actionResolvers.FindUniqueLocationAreaEncounterRateOrThrowResolver,
    groupByLocationAreaEncounterRate: actionResolvers.GroupByLocationAreaEncounterRateResolver,
  },
  NatureBattleStylePreference: {
    aggregateNatureBattleStylePreference: actionResolvers.AggregateNatureBattleStylePreferenceResolver,
    findFirstNatureBattleStylePreference: actionResolvers.FindFirstNatureBattleStylePreferenceResolver,
    findFirstNatureBattleStylePreferenceOrThrow: actionResolvers.FindFirstNatureBattleStylePreferenceOrThrowResolver,
    natureBattleStylePreferences: actionResolvers.FindManyNatureBattleStylePreferenceResolver,
    natureBattleStylePreference: actionResolvers.FindUniqueNatureBattleStylePreferenceResolver,
    getNatureBattleStylePreference: actionResolvers.FindUniqueNatureBattleStylePreferenceOrThrowResolver,
    groupByNatureBattleStylePreference: actionResolvers.GroupByNatureBattleStylePreferenceResolver,
  }
};
const crudResolversInfo = {
  Pokemon: ["aggregatePokemon", "createManyPokemon", "createManyAndReturnPokemon", "createOnePokemon", "deleteManyPokemon", "deleteOnePokemon", "findFirstPokemon", "findFirstPokemonOrThrow", "findManyPokemon", "findUniquePokemon", "findUniquePokemonOrThrow", "groupByPokemon", "updateManyPokemon", "updateOnePokemon", "upsertOnePokemon"],
  PokemonSpecies: ["aggregatePokemonSpecies", "createManyPokemonSpecies", "createManyAndReturnPokemonSpecies", "createOnePokemonSpecies", "deleteManyPokemonSpecies", "deleteOnePokemonSpecies", "findFirstPokemonSpecies", "findFirstPokemonSpeciesOrThrow", "findManyPokemonSpecies", "findUniquePokemonSpecies", "findUniquePokemonSpeciesOrThrow", "groupByPokemonSpecies", "updateManyPokemonSpecies", "updateOnePokemonSpecies", "upsertOnePokemonSpecies"],
  PokemonForm: ["aggregatePokemonForm", "createManyPokemonForm", "createManyAndReturnPokemonForm", "createOnePokemonForm", "deleteManyPokemonForm", "deleteOnePokemonForm", "findFirstPokemonForm", "findFirstPokemonFormOrThrow", "pokemonForms", "pokemonForm", "getPokemonForm", "groupByPokemonForm", "updateManyPokemonForm", "updateOnePokemonForm", "upsertOnePokemonForm"],
  Move: ["aggregateMove", "createManyMove", "createManyAndReturnMove", "createOneMove", "deleteManyMove", "deleteOneMove", "findFirstMove", "findFirstMoveOrThrow", "moves", "move", "getMove", "groupByMove", "updateManyMove", "updateOneMove", "upsertOneMove"],
  MoveEffect: ["aggregateMoveEffect", "createManyMoveEffect", "createManyAndReturnMoveEffect", "createOneMoveEffect", "deleteManyMoveEffect", "deleteOneMoveEffect", "findFirstMoveEffect", "findFirstMoveEffectOrThrow", "moveEffects", "moveEffect", "getMoveEffect", "groupByMoveEffect", "updateManyMoveEffect", "updateOneMoveEffect", "upsertOneMoveEffect"],
  MoveTarget: ["aggregateMoveTarget", "createManyMoveTarget", "createManyAndReturnMoveTarget", "createOneMoveTarget", "deleteManyMoveTarget", "deleteOneMoveTarget", "findFirstMoveTarget", "findFirstMoveTargetOrThrow", "moveTargets", "moveTarget", "getMoveTarget", "groupByMoveTarget", "updateManyMoveTarget", "updateOneMoveTarget", "upsertOneMoveTarget"],
  MoveDamageClass: ["aggregateMoveDamageClass", "createManyMoveDamageClass", "createManyAndReturnMoveDamageClass", "createOneMoveDamageClass", "deleteManyMoveDamageClass", "deleteOneMoveDamageClass", "findFirstMoveDamageClass", "findFirstMoveDamageClassOrThrow", "moveDamageClasses", "moveDamageClass", "getMoveDamageClass", "groupByMoveDamageClass", "updateManyMoveDamageClass", "updateOneMoveDamageClass", "upsertOneMoveDamageClass"],
  Type: ["aggregateType", "createManyType", "createManyAndReturnType", "createOneType", "deleteManyType", "deleteOneType", "findFirstType", "findFirstTypeOrThrow", "types", "type", "getType", "groupByType", "updateManyType", "updateOneType", "upsertOneType"],
  Ability: ["aggregateAbility", "createManyAbility", "createManyAndReturnAbility", "createOneAbility", "deleteManyAbility", "deleteOneAbility", "findFirstAbility", "findFirstAbilityOrThrow", "abilities", "ability", "getAbility", "groupByAbility", "updateManyAbility", "updateOneAbility", "upsertOneAbility"],
  Item: ["aggregateItem", "createManyItem", "createManyAndReturnItem", "createOneItem", "deleteManyItem", "deleteOneItem", "findFirstItem", "findFirstItemOrThrow", "items", "item", "getItem", "groupByItem", "updateManyItem", "updateOneItem", "upsertOneItem"],
  ItemCategory: ["aggregateItemCategory", "createManyItemCategory", "createManyAndReturnItemCategory", "createOneItemCategory", "deleteManyItemCategory", "deleteOneItemCategory", "findFirstItemCategory", "findFirstItemCategoryOrThrow", "itemCategories", "itemCategory", "getItemCategory", "groupByItemCategory", "updateManyItemCategory", "updateOneItemCategory", "upsertOneItemCategory"],
  ItemPocket: ["aggregateItemPocket", "createManyItemPocket", "createManyAndReturnItemPocket", "createOneItemPocket", "deleteManyItemPocket", "deleteOneItemPocket", "findFirstItemPocket", "findFirstItemPocketOrThrow", "itemPockets", "itemPocket", "getItemPocket", "groupByItemPocket", "updateManyItemPocket", "updateOneItemPocket", "upsertOneItemPocket"],
  Stat: ["aggregateStat", "createManyStat", "createManyAndReturnStat", "createOneStat", "deleteManyStat", "deleteOneStat", "findFirstStat", "findFirstStatOrThrow", "stats", "stat", "getStat", "groupByStat", "updateManyStat", "updateOneStat", "upsertOneStat"],
  Generation: ["aggregateGeneration", "createManyGeneration", "createManyAndReturnGeneration", "createOneGeneration", "deleteManyGeneration", "deleteOneGeneration", "findFirstGeneration", "findFirstGenerationOrThrow", "generations", "generation", "getGeneration", "groupByGeneration", "updateManyGeneration", "updateOneGeneration", "upsertOneGeneration"],
  VersionGroup: ["aggregateVersionGroup", "createManyVersionGroup", "createManyAndReturnVersionGroup", "createOneVersionGroup", "deleteManyVersionGroup", "deleteOneVersionGroup", "findFirstVersionGroup", "findFirstVersionGroupOrThrow", "versionGroups", "versionGroup", "getVersionGroup", "groupByVersionGroup", "updateManyVersionGroup", "updateOneVersionGroup", "upsertOneVersionGroup"],
  Version: ["aggregateVersion", "createManyVersion", "createManyAndReturnVersion", "createOneVersion", "deleteManyVersion", "deleteOneVersion", "findFirstVersion", "findFirstVersionOrThrow", "versions", "version", "getVersion", "groupByVersion", "updateManyVersion", "updateOneVersion", "upsertOneVersion"],
  Region: ["aggregateRegion", "createManyRegion", "createManyAndReturnRegion", "createOneRegion", "deleteManyRegion", "deleteOneRegion", "findFirstRegion", "findFirstRegionOrThrow", "regions", "region", "getRegion", "groupByRegion", "updateManyRegion", "updateOneRegion", "upsertOneRegion"],
  Location: ["aggregateLocation", "createManyLocation", "createManyAndReturnLocation", "createOneLocation", "deleteManyLocation", "deleteOneLocation", "findFirstLocation", "findFirstLocationOrThrow", "locations", "location", "getLocation", "groupByLocation", "updateManyLocation", "updateOneLocation", "upsertOneLocation"],
  LocationArea: ["aggregateLocationArea", "createManyLocationArea", "createManyAndReturnLocationArea", "createOneLocationArea", "deleteManyLocationArea", "deleteOneLocationArea", "findFirstLocationArea", "findFirstLocationAreaOrThrow", "locationAreas", "locationArea", "getLocationArea", "groupByLocationArea", "updateManyLocationArea", "updateOneLocationArea", "upsertOneLocationArea"],
  Pokedex: ["aggregatePokedex", "createManyPokedex", "createManyAndReturnPokedex", "createOnePokedex", "deleteManyPokedex", "deleteOnePokedex", "findFirstPokedex", "findFirstPokedexOrThrow", "pokedexes", "pokedex", "getPokedex", "groupByPokedex", "updateManyPokedex", "updateOnePokedex", "upsertOnePokedex"],
  EvolutionChain: ["aggregateEvolutionChain", "createManyEvolutionChain", "createManyAndReturnEvolutionChain", "createOneEvolutionChain", "deleteManyEvolutionChain", "deleteOneEvolutionChain", "findFirstEvolutionChain", "findFirstEvolutionChainOrThrow", "evolutionChains", "evolutionChain", "getEvolutionChain", "groupByEvolutionChain", "updateManyEvolutionChain", "updateOneEvolutionChain", "upsertOneEvolutionChain"],
  EvolutionTrigger: ["aggregateEvolutionTrigger", "createManyEvolutionTrigger", "createManyAndReturnEvolutionTrigger", "createOneEvolutionTrigger", "deleteManyEvolutionTrigger", "deleteOneEvolutionTrigger", "findFirstEvolutionTrigger", "findFirstEvolutionTriggerOrThrow", "evolutionTriggers", "evolutionTrigger", "getEvolutionTrigger", "groupByEvolutionTrigger", "updateManyEvolutionTrigger", "updateOneEvolutionTrigger", "upsertOneEvolutionTrigger"],
  PokemonEvolution: ["aggregatePokemonEvolution", "createManyPokemonEvolution", "createManyAndReturnPokemonEvolution", "createOnePokemonEvolution", "deleteManyPokemonEvolution", "deleteOnePokemonEvolution", "findFirstPokemonEvolution", "findFirstPokemonEvolutionOrThrow", "pokemonEvolutions", "pokemonEvolution", "getPokemonEvolution", "groupByPokemonEvolution", "updateManyPokemonEvolution", "updateOnePokemonEvolution", "upsertOnePokemonEvolution"],
  GrowthRates: ["aggregateGrowthRates", "createManyGrowthRates", "createManyAndReturnGrowthRates", "createOneGrowthRates", "deleteManyGrowthRates", "deleteOneGrowthRates", "findFirstGrowthRates", "findFirstGrowthRatesOrThrow", "findManyGrowthRates", "findUniqueGrowthRates", "findUniqueGrowthRatesOrThrow", "groupByGrowthRates", "updateManyGrowthRates", "updateOneGrowthRates", "upsertOneGrowthRates"],
  Experience: ["aggregateExperience", "createManyExperience", "createManyAndReturnExperience", "createOneExperience", "deleteManyExperience", "deleteOneExperience", "findFirstExperience", "findFirstExperienceOrThrow", "experiences", "experience", "getExperience", "groupByExperience", "updateManyExperience", "updateOneExperience", "upsertOneExperience"],
  Gender: ["aggregateGender", "createManyGender", "createManyAndReturnGender", "createOneGender", "deleteManyGender", "deleteOneGender", "findFirstGender", "findFirstGenderOrThrow", "genders", "gender", "getGender", "groupByGender", "updateManyGender", "updateOneGender", "upsertOneGender"],
  Language: ["aggregateLanguage", "createManyLanguage", "createManyAndReturnLanguage", "createOneLanguage", "deleteManyLanguage", "deleteOneLanguage", "findFirstLanguage", "findFirstLanguageOrThrow", "languages", "language", "getLanguage", "groupByLanguage", "updateManyLanguage", "updateOneLanguage", "upsertOneLanguage"],
  EggGroup: ["aggregateEggGroup", "createManyEggGroup", "createManyAndReturnEggGroup", "createOneEggGroup", "deleteManyEggGroup", "deleteOneEggGroup", "findFirstEggGroup", "findFirstEggGroupOrThrow", "eggGroups", "eggGroup", "getEggGroup", "groupByEggGroup", "updateManyEggGroup", "updateOneEggGroup", "upsertOneEggGroup"],
  Nature: ["aggregateNature", "createManyNature", "createManyAndReturnNature", "createOneNature", "deleteManyNature", "deleteOneNature", "findFirstNature", "findFirstNatureOrThrow", "natures", "nature", "getNature", "groupByNature", "updateManyNature", "updateOneNature", "upsertOneNature"],
  ContestType: ["aggregateContestType", "createManyContestType", "createManyAndReturnContestType", "createOneContestType", "deleteManyContestType", "deleteOneContestType", "findFirstContestType", "findFirstContestTypeOrThrow", "contestTypes", "contestType", "getContestType", "groupByContestType", "updateManyContestType", "updateOneContestType", "upsertOneContestType"],
  ContestEffect: ["aggregateContestEffect", "createManyContestEffect", "createManyAndReturnContestEffect", "createOneContestEffect", "deleteManyContestEffect", "deleteOneContestEffect", "findFirstContestEffect", "findFirstContestEffectOrThrow", "contestEffects", "contestEffect", "getContestEffect", "groupByContestEffect", "updateManyContestEffect", "updateOneContestEffect", "upsertOneContestEffect"],
  SuperContestEffect: ["aggregateSuperContestEffect", "createManySuperContestEffect", "createManyAndReturnSuperContestEffect", "createOneSuperContestEffect", "deleteManySuperContestEffect", "deleteOneSuperContestEffect", "findFirstSuperContestEffect", "findFirstSuperContestEffectOrThrow", "superContestEffects", "superContestEffect", "getSuperContestEffect", "groupBySuperContestEffect", "updateManySuperContestEffect", "updateOneSuperContestEffect", "upsertOneSuperContestEffect"],
  Machine: ["aggregateMachine", "createManyMachine", "createManyAndReturnMachine", "createOneMachine", "deleteManyMachine", "deleteOneMachine", "findFirstMachine", "findFirstMachineOrThrow", "machines", "machine", "getMachine", "groupByMachine", "updateManyMachine", "updateOneMachine", "upsertOneMachine"],
  EncounterMethod: ["aggregateEncounterMethod", "createManyEncounterMethod", "createManyAndReturnEncounterMethod", "createOneEncounterMethod", "deleteManyEncounterMethod", "deleteOneEncounterMethod", "findFirstEncounterMethod", "findFirstEncounterMethodOrThrow", "encounterMethods", "encounterMethod", "getEncounterMethod", "groupByEncounterMethod", "updateManyEncounterMethod", "updateOneEncounterMethod", "upsertOneEncounterMethod"],
  EncounterSlot: ["aggregateEncounterSlot", "createManyEncounterSlot", "createManyAndReturnEncounterSlot", "createOneEncounterSlot", "deleteManyEncounterSlot", "deleteOneEncounterSlot", "findFirstEncounterSlot", "findFirstEncounterSlotOrThrow", "encounterSlots", "encounterSlot", "getEncounterSlot", "groupByEncounterSlot", "updateManyEncounterSlot", "updateOneEncounterSlot", "upsertOneEncounterSlot"],
  Encounter: ["aggregateEncounter", "createManyEncounter", "createManyAndReturnEncounter", "createOneEncounter", "deleteManyEncounter", "deleteOneEncounter", "findFirstEncounter", "findFirstEncounterOrThrow", "encounters", "encounter", "getEncounter", "groupByEncounter", "updateManyEncounter", "updateOneEncounter", "upsertOneEncounter"],
  EncounterCondition: ["aggregateEncounterCondition", "createManyEncounterCondition", "createManyAndReturnEncounterCondition", "createOneEncounterCondition", "deleteManyEncounterCondition", "deleteOneEncounterCondition", "findFirstEncounterCondition", "findFirstEncounterConditionOrThrow", "encounterConditions", "encounterCondition", "getEncounterCondition", "groupByEncounterCondition", "updateManyEncounterCondition", "updateOneEncounterCondition", "upsertOneEncounterCondition"],
  EncounterConditionValue: ["aggregateEncounterConditionValue", "createManyEncounterConditionValue", "createManyAndReturnEncounterConditionValue", "createOneEncounterConditionValue", "deleteManyEncounterConditionValue", "deleteOneEncounterConditionValue", "findFirstEncounterConditionValue", "findFirstEncounterConditionValueOrThrow", "encounterConditionValues", "encounterConditionValue", "getEncounterConditionValue", "groupByEncounterConditionValue", "updateManyEncounterConditionValue", "updateOneEncounterConditionValue", "upsertOneEncounterConditionValue"],
  EncounterConditionValueMap: ["aggregateEncounterConditionValueMap", "createManyEncounterConditionValueMap", "createManyAndReturnEncounterConditionValueMap", "createOneEncounterConditionValueMap", "deleteManyEncounterConditionValueMap", "deleteOneEncounterConditionValueMap", "findFirstEncounterConditionValueMap", "findFirstEncounterConditionValueMapOrThrow", "encounterConditionValueMaps", "encounterConditionValueMap", "getEncounterConditionValueMap", "groupByEncounterConditionValueMap", "updateManyEncounterConditionValueMap", "updateOneEncounterConditionValueMap", "upsertOneEncounterConditionValueMap"],
  MoveMetaCategory: ["aggregateMoveMetaCategory", "createManyMoveMetaCategory", "createManyAndReturnMoveMetaCategory", "createOneMoveMetaCategory", "deleteManyMoveMetaCategory", "deleteOneMoveMetaCategory", "findFirstMoveMetaCategory", "findFirstMoveMetaCategoryOrThrow", "moveMetaCategories", "moveMetaCategory", "getMoveMetaCategory", "groupByMoveMetaCategory", "updateManyMoveMetaCategory", "updateOneMoveMetaCategory", "upsertOneMoveMetaCategory"],
  MoveMetaAilment: ["aggregateMoveMetaAilment", "createManyMoveMetaAilment", "createManyAndReturnMoveMetaAilment", "createOneMoveMetaAilment", "deleteManyMoveMetaAilment", "deleteOneMoveMetaAilment", "findFirstMoveMetaAilment", "findFirstMoveMetaAilmentOrThrow", "moveMetaAilments", "moveMetaAilment", "getMoveMetaAilment", "groupByMoveMetaAilment", "updateManyMoveMetaAilment", "updateOneMoveMetaAilment", "upsertOneMoveMetaAilment"],
  MoveMeta: ["aggregateMoveMeta", "createManyMoveMeta", "createManyAndReturnMoveMeta", "createOneMoveMeta", "deleteManyMoveMeta", "deleteOneMoveMeta", "findFirstMoveMeta", "findFirstMoveMetaOrThrow", "moveMetas", "moveMeta", "getMoveMeta", "groupByMoveMeta", "updateManyMoveMeta", "updateOneMoveMeta", "upsertOneMoveMeta"],
  MoveMetaStatChanges: ["aggregateMoveMetaStatChanges", "createManyMoveMetaStatChanges", "createManyAndReturnMoveMetaStatChanges", "createOneMoveMetaStatChanges", "deleteManyMoveMetaStatChanges", "deleteOneMoveMetaStatChanges", "findFirstMoveMetaStatChanges", "findFirstMoveMetaStatChangesOrThrow", "findManyMoveMetaStatChanges", "findUniqueMoveMetaStatChanges", "findUniqueMoveMetaStatChangesOrThrow", "groupByMoveMetaStatChanges", "updateManyMoveMetaStatChanges", "updateOneMoveMetaStatChanges", "upsertOneMoveMetaStatChanges"],
  MoveFlag: ["aggregateMoveFlag", "createManyMoveFlag", "createManyAndReturnMoveFlag", "createOneMoveFlag", "deleteManyMoveFlag", "deleteOneMoveFlag", "findFirstMoveFlag", "findFirstMoveFlagOrThrow", "moveFlags", "moveFlag", "getMoveFlag", "groupByMoveFlag", "updateManyMoveFlag", "updateOneMoveFlag", "upsertOneMoveFlag"],
  MoveFlagMap: ["aggregateMoveFlagMap", "createManyMoveFlagMap", "createManyAndReturnMoveFlagMap", "createOneMoveFlagMap", "deleteManyMoveFlagMap", "deleteOneMoveFlagMap", "findFirstMoveFlagMap", "findFirstMoveFlagMapOrThrow", "moveFlagMaps", "moveFlagMap", "getMoveFlagMap", "groupByMoveFlagMap", "updateManyMoveFlagMap", "updateOneMoveFlagMap", "upsertOneMoveFlagMap"],
  MoveBattleStyle: ["aggregateMoveBattleStyle", "createManyMoveBattleStyle", "createManyAndReturnMoveBattleStyle", "createOneMoveBattleStyle", "deleteManyMoveBattleStyle", "deleteOneMoveBattleStyle", "findFirstMoveBattleStyle", "findFirstMoveBattleStyleOrThrow", "moveBattleStyles", "moveBattleStyle", "getMoveBattleStyle", "groupByMoveBattleStyle", "updateManyMoveBattleStyle", "updateOneMoveBattleStyle", "upsertOneMoveBattleStyle"],
  ItemFlag: ["aggregateItemFlag", "createManyItemFlag", "createManyAndReturnItemFlag", "createOneItemFlag", "deleteManyItemFlag", "deleteOneItemFlag", "findFirstItemFlag", "findFirstItemFlagOrThrow", "itemFlags", "itemFlag", "getItemFlag", "groupByItemFlag", "updateManyItemFlag", "updateOneItemFlag", "upsertOneItemFlag"],
  ItemFlagMap: ["aggregateItemFlagMap", "createManyItemFlagMap", "createManyAndReturnItemFlagMap", "createOneItemFlagMap", "deleteManyItemFlagMap", "deleteOneItemFlagMap", "findFirstItemFlagMap", "findFirstItemFlagMapOrThrow", "itemFlagMaps", "itemFlagMap", "getItemFlagMap", "groupByItemFlagMap", "updateManyItemFlagMap", "updateOneItemFlagMap", "upsertOneItemFlagMap"],
  ItemFlingEffect: ["aggregateItemFlingEffect", "createManyItemFlingEffect", "createManyAndReturnItemFlingEffect", "createOneItemFlingEffect", "deleteManyItemFlingEffect", "deleteOneItemFlingEffect", "findFirstItemFlingEffect", "findFirstItemFlingEffectOrThrow", "itemFlingEffects", "itemFlingEffect", "getItemFlingEffect", "groupByItemFlingEffect", "updateManyItemFlingEffect", "updateOneItemFlingEffect", "upsertOneItemFlingEffect"],
  Berry: ["aggregateBerry", "createManyBerry", "createManyAndReturnBerry", "createOneBerry", "deleteManyBerry", "deleteOneBerry", "findFirstBerry", "findFirstBerryOrThrow", "berries", "berry", "getBerry", "groupByBerry", "updateManyBerry", "updateOneBerry", "upsertOneBerry"],
  BerryFirmness: ["aggregateBerryFirmness", "createManyBerryFirmness", "createManyAndReturnBerryFirmness", "createOneBerryFirmness", "deleteManyBerryFirmness", "deleteOneBerryFirmness", "findFirstBerryFirmness", "findFirstBerryFirmnessOrThrow", "berryFirmnesses", "berryFirmness", "getBerryFirmness", "groupByBerryFirmness", "updateManyBerryFirmness", "updateOneBerryFirmness", "upsertOneBerryFirmness"],
  BerryFlavor: ["aggregateBerryFlavor", "createManyBerryFlavor", "createManyAndReturnBerryFlavor", "createOneBerryFlavor", "deleteManyBerryFlavor", "deleteOneBerryFlavor", "findFirstBerryFlavor", "findFirstBerryFlavorOrThrow", "berryFlavors", "berryFlavor", "getBerryFlavor", "groupByBerryFlavor", "updateManyBerryFlavor", "updateOneBerryFlavor", "upsertOneBerryFlavor"],
  Characteristic: ["aggregateCharacteristic", "createManyCharacteristic", "createManyAndReturnCharacteristic", "createOneCharacteristic", "deleteManyCharacteristic", "deleteOneCharacteristic", "findFirstCharacteristic", "findFirstCharacteristicOrThrow", "characteristics", "characteristic", "getCharacteristic", "groupByCharacteristic", "updateManyCharacteristic", "updateOneCharacteristic", "upsertOneCharacteristic"],
  ContestCombo: ["aggregateContestCombo", "createManyContestCombo", "createManyAndReturnContestCombo", "createOneContestCombo", "deleteManyContestCombo", "deleteOneContestCombo", "findFirstContestCombo", "findFirstContestComboOrThrow", "contestCombos", "contestCombo", "getContestCombo", "groupByContestCombo", "updateManyContestCombo", "updateOneContestCombo", "upsertOneContestCombo"],
  SuperContestCombo: ["aggregateSuperContestCombo", "createManySuperContestCombo", "createManyAndReturnSuperContestCombo", "createOneSuperContestCombo", "deleteManySuperContestCombo", "deleteOneSuperContestCombo", "findFirstSuperContestCombo", "findFirstSuperContestComboOrThrow", "superContestCombos", "superContestCombo", "getSuperContestCombo", "groupBySuperContestCombo", "updateManySuperContestCombo", "updateOneSuperContestCombo", "upsertOneSuperContestCombo"],
  PokemonMoveMethod: ["aggregatePokemonMoveMethod", "createManyPokemonMoveMethod", "createManyAndReturnPokemonMoveMethod", "createOnePokemonMoveMethod", "deleteManyPokemonMoveMethod", "deleteOnePokemonMoveMethod", "findFirstPokemonMoveMethod", "findFirstPokemonMoveMethodOrThrow", "pokemonMoveMethods", "pokemonMoveMethod", "getPokemonMoveMethod", "groupByPokemonMoveMethod", "updateManyPokemonMoveMethod", "updateOnePokemonMoveMethod", "upsertOnePokemonMoveMethod"],
  VersionGroupPokemonMoveMethod: ["aggregateVersionGroupPokemonMoveMethod", "createManyVersionGroupPokemonMoveMethod", "createManyAndReturnVersionGroupPokemonMoveMethod", "createOneVersionGroupPokemonMoveMethod", "deleteManyVersionGroupPokemonMoveMethod", "deleteOneVersionGroupPokemonMoveMethod", "findFirstVersionGroupPokemonMoveMethod", "findFirstVersionGroupPokemonMoveMethodOrThrow", "versionGroupPokemonMoveMethods", "versionGroupPokemonMoveMethod", "getVersionGroupPokemonMoveMethod", "groupByVersionGroupPokemonMoveMethod", "updateManyVersionGroupPokemonMoveMethod", "updateOneVersionGroupPokemonMoveMethod", "upsertOneVersionGroupPokemonMoveMethod"],
  PokemonShape: ["aggregatePokemonShape", "createManyPokemonShape", "createManyAndReturnPokemonShape", "createOnePokemonShape", "deleteManyPokemonShape", "deleteOnePokemonShape", "findFirstPokemonShape", "findFirstPokemonShapeOrThrow", "pokemonShapes", "pokemonShape", "getPokemonShape", "groupByPokemonShape", "updateManyPokemonShape", "updateOnePokemonShape", "upsertOnePokemonShape"],
  PokemonColor: ["aggregatePokemonColor", "createManyPokemonColor", "createManyAndReturnPokemonColor", "createOnePokemonColor", "deleteManyPokemonColor", "deleteOnePokemonColor", "findFirstPokemonColor", "findFirstPokemonColorOrThrow", "pokemonColors", "pokemonColor", "getPokemonColor", "groupByPokemonColor", "updateManyPokemonColor", "updateOnePokemonColor", "upsertOnePokemonColor"],
  PokemonHabitat: ["aggregatePokemonHabitat", "createManyPokemonHabitat", "createManyAndReturnPokemonHabitat", "createOnePokemonHabitat", "deleteManyPokemonHabitat", "deleteOnePokemonHabitat", "findFirstPokemonHabitat", "findFirstPokemonHabitatOrThrow", "pokemonHabitats", "pokemonHabitat", "getPokemonHabitat", "groupByPokemonHabitat", "updateManyPokemonHabitat", "updateOnePokemonHabitat", "upsertOnePokemonHabitat"],
  TypeEfficacy: ["aggregateTypeEfficacy", "createManyTypeEfficacy", "createManyAndReturnTypeEfficacy", "createOneTypeEfficacy", "deleteManyTypeEfficacy", "deleteOneTypeEfficacy", "findFirstTypeEfficacy", "findFirstTypeEfficacyOrThrow", "typeEfficacies", "typeEfficacy", "getTypeEfficacy", "groupByTypeEfficacy", "updateManyTypeEfficacy", "updateOneTypeEfficacy", "upsertOneTypeEfficacy"],
  VersionGroupRegion: ["aggregateVersionGroupRegion", "createManyVersionGroupRegion", "createManyAndReturnVersionGroupRegion", "createOneVersionGroupRegion", "deleteManyVersionGroupRegion", "deleteOneVersionGroupRegion", "findFirstVersionGroupRegion", "findFirstVersionGroupRegionOrThrow", "versionGroupRegions", "versionGroupRegion", "getVersionGroupRegion", "groupByVersionGroupRegion", "updateManyVersionGroupRegion", "updateOneVersionGroupRegion", "upsertOneVersionGroupRegion"],
  PokedexVersionGroup: ["aggregatePokedexVersionGroup", "createManyPokedexVersionGroup", "createManyAndReturnPokedexVersionGroup", "createOnePokedexVersionGroup", "deleteManyPokedexVersionGroup", "deleteOnePokedexVersionGroup", "findFirstPokedexVersionGroup", "findFirstPokedexVersionGroupOrThrow", "pokedexVersionGroups", "pokedexVersionGroup", "getPokedexVersionGroup", "groupByPokedexVersionGroup", "updateManyPokedexVersionGroup", "updateOnePokedexVersionGroup", "upsertOnePokedexVersionGroup"],
  PokemonAbility: ["aggregatePokemonAbility", "createManyPokemonAbility", "createManyAndReturnPokemonAbility", "createOnePokemonAbility", "deleteManyPokemonAbility", "deleteOnePokemonAbility", "findFirstPokemonAbility", "findFirstPokemonAbilityOrThrow", "pokemonAbilities", "pokemonAbility", "getPokemonAbility", "groupByPokemonAbility", "updateManyPokemonAbility", "updateOnePokemonAbility", "upsertOnePokemonAbility"],
  PokemonMove: ["aggregatePokemonMove", "createManyPokemonMove", "createManyAndReturnPokemonMove", "createOnePokemonMove", "deleteManyPokemonMove", "deleteOnePokemonMove", "findFirstPokemonMove", "findFirstPokemonMoveOrThrow", "pokemonMoves", "pokemonMove", "getPokemonMove", "groupByPokemonMove", "updateManyPokemonMove", "updateOnePokemonMove", "upsertOnePokemonMove"],
  PokemonStat: ["aggregatePokemonStat", "createManyPokemonStat", "createManyAndReturnPokemonStat", "createOnePokemonStat", "deleteManyPokemonStat", "deleteOnePokemonStat", "findFirstPokemonStat", "findFirstPokemonStatOrThrow", "pokemonStats", "pokemonStat", "getPokemonStat", "groupByPokemonStat", "updateManyPokemonStat", "updateOnePokemonStat", "upsertOnePokemonStat"],
  PokemonType: ["aggregatePokemonType", "createManyPokemonType", "createManyAndReturnPokemonType", "createOnePokemonType", "deleteManyPokemonType", "deleteOnePokemonType", "findFirstPokemonType", "findFirstPokemonTypeOrThrow", "pokemonTypes", "pokemonType", "getPokemonType", "groupByPokemonType", "updateManyPokemonType", "updateOnePokemonType", "upsertOnePokemonType"],
  PokemonEggGroup: ["aggregatePokemonEggGroup", "createManyPokemonEggGroup", "createManyAndReturnPokemonEggGroup", "createOnePokemonEggGroup", "deleteManyPokemonEggGroup", "deleteOnePokemonEggGroup", "findFirstPokemonEggGroup", "findFirstPokemonEggGroupOrThrow", "pokemonEggGroups", "pokemonEggGroup", "getPokemonEggGroup", "groupByPokemonEggGroup", "updateManyPokemonEggGroup", "updateOnePokemonEggGroup", "upsertOnePokemonEggGroup"],
  PokemonItem: ["aggregatePokemonItem", "createManyPokemonItem", "createManyAndReturnPokemonItem", "createOnePokemonItem", "deleteManyPokemonItem", "deleteOnePokemonItem", "findFirstPokemonItem", "findFirstPokemonItemOrThrow", "pokemonItems", "pokemonItem", "getPokemonItem", "groupByPokemonItem", "updateManyPokemonItem", "updateOnePokemonItem", "upsertOnePokemonItem"],
  PokemonGameIndex: ["aggregatePokemonGameIndex", "createManyPokemonGameIndex", "createManyAndReturnPokemonGameIndex", "createOnePokemonGameIndex", "deleteManyPokemonGameIndex", "deleteOnePokemonGameIndex", "findFirstPokemonGameIndex", "findFirstPokemonGameIndexOrThrow", "pokemonGameIndices", "pokemonGameIndex", "getPokemonGameIndex", "groupByPokemonGameIndex", "updateManyPokemonGameIndex", "updateOnePokemonGameIndex", "upsertOnePokemonGameIndex"],
  PokemonDexNumber: ["aggregatePokemonDexNumber", "createManyPokemonDexNumber", "createManyAndReturnPokemonDexNumber", "createOnePokemonDexNumber", "deleteManyPokemonDexNumber", "deleteOnePokemonDexNumber", "findFirstPokemonDexNumber", "findFirstPokemonDexNumberOrThrow", "pokemonDexNumbers", "pokemonDexNumber", "getPokemonDexNumber", "groupByPokemonDexNumber", "updateManyPokemonDexNumber", "updateOnePokemonDexNumber", "upsertOnePokemonDexNumber"],
  PokemonFormGeneration: ["aggregatePokemonFormGeneration", "createManyPokemonFormGeneration", "createManyAndReturnPokemonFormGeneration", "createOnePokemonFormGeneration", "deleteManyPokemonFormGeneration", "deleteOnePokemonFormGeneration", "findFirstPokemonFormGeneration", "findFirstPokemonFormGenerationOrThrow", "pokemonFormGenerations", "pokemonFormGeneration", "getPokemonFormGeneration", "groupByPokemonFormGeneration", "updateManyPokemonFormGeneration", "updateOnePokemonFormGeneration", "upsertOnePokemonFormGeneration"],
  PokemonFormType: ["aggregatePokemonFormType", "createManyPokemonFormType", "createManyAndReturnPokemonFormType", "createOnePokemonFormType", "deleteManyPokemonFormType", "deleteOnePokemonFormType", "findFirstPokemonFormType", "findFirstPokemonFormTypeOrThrow", "pokemonFormTypes", "pokemonFormType", "getPokemonFormType", "groupByPokemonFormType", "updateManyPokemonFormType", "updateOnePokemonFormType", "upsertOnePokemonFormType"],
  TypeGameIndex: ["aggregateTypeGameIndex", "createManyTypeGameIndex", "createManyAndReturnTypeGameIndex", "createOneTypeGameIndex", "deleteManyTypeGameIndex", "deleteOneTypeGameIndex", "findFirstTypeGameIndex", "findFirstTypeGameIndexOrThrow", "typeGameIndices", "typeGameIndex", "getTypeGameIndex", "groupByTypeGameIndex", "updateManyTypeGameIndex", "updateOneTypeGameIndex", "upsertOneTypeGameIndex"],
  ItemGameIndex: ["aggregateItemGameIndex", "createManyItemGameIndex", "createManyAndReturnItemGameIndex", "createOneItemGameIndex", "deleteManyItemGameIndex", "deleteOneItemGameIndex", "findFirstItemGameIndex", "findFirstItemGameIndexOrThrow", "itemGameIndices", "itemGameIndex", "getItemGameIndex", "groupByItemGameIndex", "updateManyItemGameIndex", "updateOneItemGameIndex", "upsertOneItemGameIndex"],
  LocationGameIndex: ["aggregateLocationGameIndex", "createManyLocationGameIndex", "createManyAndReturnLocationGameIndex", "createOneLocationGameIndex", "deleteManyLocationGameIndex", "deleteOneLocationGameIndex", "findFirstLocationGameIndex", "findFirstLocationGameIndexOrThrow", "locationGameIndices", "locationGameIndex", "getLocationGameIndex", "groupByLocationGameIndex", "updateManyLocationGameIndex", "updateOneLocationGameIndex", "upsertOneLocationGameIndex"],
  LocationAreaEncounterRate: ["aggregateLocationAreaEncounterRate", "createManyLocationAreaEncounterRate", "createManyAndReturnLocationAreaEncounterRate", "createOneLocationAreaEncounterRate", "deleteManyLocationAreaEncounterRate", "deleteOneLocationAreaEncounterRate", "findFirstLocationAreaEncounterRate", "findFirstLocationAreaEncounterRateOrThrow", "locationAreaEncounterRates", "locationAreaEncounterRate", "getLocationAreaEncounterRate", "groupByLocationAreaEncounterRate", "updateManyLocationAreaEncounterRate", "updateOneLocationAreaEncounterRate", "upsertOneLocationAreaEncounterRate"],
  NatureBattleStylePreference: ["aggregateNatureBattleStylePreference", "createManyNatureBattleStylePreference", "createManyAndReturnNatureBattleStylePreference", "createOneNatureBattleStylePreference", "deleteManyNatureBattleStylePreference", "deleteOneNatureBattleStylePreference", "findFirstNatureBattleStylePreference", "findFirstNatureBattleStylePreferenceOrThrow", "natureBattleStylePreferences", "natureBattleStylePreference", "getNatureBattleStylePreference", "groupByNatureBattleStylePreference", "updateManyNatureBattleStylePreference", "updateOneNatureBattleStylePreference", "upsertOneNatureBattleStylePreference"]
};
const argsInfo = {
  AggregatePokemonArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonArgs: ["where"],
  FindUniquePokemonOrThrowArgs: ["where"],
  GroupByPokemonArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonSpeciesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonSpeciesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonSpeciesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonSpeciesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonSpeciesArgs: ["where"],
  FindUniquePokemonSpeciesOrThrowArgs: ["where"],
  GroupByPokemonSpeciesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonFormArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonFormArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonFormOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonFormArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonFormArgs: ["where"],
  FindUniquePokemonFormOrThrowArgs: ["where"],
  GroupByPokemonFormArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveArgs: ["where"],
  FindUniqueMoveOrThrowArgs: ["where"],
  GroupByMoveArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveEffectArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveEffectArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveEffectOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveEffectArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveEffectArgs: ["where"],
  FindUniqueMoveEffectOrThrowArgs: ["where"],
  GroupByMoveEffectArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveTargetArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveTargetArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveTargetOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveTargetArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveTargetArgs: ["where"],
  FindUniqueMoveTargetOrThrowArgs: ["where"],
  GroupByMoveTargetArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveDamageClassArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveDamageClassArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveDamageClassOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveDamageClassArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveDamageClassArgs: ["where"],
  FindUniqueMoveDamageClassOrThrowArgs: ["where"],
  GroupByMoveDamageClassArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateTypeArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstTypeOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueTypeArgs: ["where"],
  FindUniqueTypeOrThrowArgs: ["where"],
  GroupByTypeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateAbilityArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstAbilityArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstAbilityOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyAbilityArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueAbilityArgs: ["where"],
  FindUniqueAbilityOrThrowArgs: ["where"],
  GroupByAbilityArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemArgs: ["where"],
  FindUniqueItemOrThrowArgs: ["where"],
  GroupByItemArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemCategoryArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemCategoryArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemCategoryOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemCategoryArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemCategoryArgs: ["where"],
  FindUniqueItemCategoryOrThrowArgs: ["where"],
  GroupByItemCategoryArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemPocketArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemPocketArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemPocketOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemPocketArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemPocketArgs: ["where"],
  FindUniqueItemPocketOrThrowArgs: ["where"],
  GroupByItemPocketArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateStatArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstStatArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstStatOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyStatArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueStatArgs: ["where"],
  FindUniqueStatOrThrowArgs: ["where"],
  GroupByStatArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateGenerationArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstGenerationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstGenerationOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyGenerationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueGenerationArgs: ["where"],
  FindUniqueGenerationOrThrowArgs: ["where"],
  GroupByGenerationArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateVersionGroupArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstVersionGroupArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstVersionGroupOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyVersionGroupArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueVersionGroupArgs: ["where"],
  FindUniqueVersionGroupOrThrowArgs: ["where"],
  GroupByVersionGroupArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateVersionArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstVersionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstVersionOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyVersionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueVersionArgs: ["where"],
  FindUniqueVersionOrThrowArgs: ["where"],
  GroupByVersionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateRegionArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstRegionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstRegionOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyRegionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueRegionArgs: ["where"],
  FindUniqueRegionOrThrowArgs: ["where"],
  GroupByRegionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLocationArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLocationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLocationOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLocationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLocationArgs: ["where"],
  FindUniqueLocationOrThrowArgs: ["where"],
  GroupByLocationArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLocationAreaArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLocationAreaArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLocationAreaOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLocationAreaArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLocationAreaArgs: ["where"],
  FindUniqueLocationAreaOrThrowArgs: ["where"],
  GroupByLocationAreaArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokedexArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokedexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokedexOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokedexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokedexArgs: ["where"],
  FindUniquePokedexOrThrowArgs: ["where"],
  GroupByPokedexArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEvolutionChainArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEvolutionChainArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEvolutionChainOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEvolutionChainArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEvolutionChainArgs: ["where"],
  FindUniqueEvolutionChainOrThrowArgs: ["where"],
  GroupByEvolutionChainArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEvolutionTriggerArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEvolutionTriggerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEvolutionTriggerOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEvolutionTriggerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEvolutionTriggerArgs: ["where"],
  FindUniqueEvolutionTriggerOrThrowArgs: ["where"],
  GroupByEvolutionTriggerArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonEvolutionArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonEvolutionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonEvolutionOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonEvolutionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonEvolutionArgs: ["where"],
  FindUniquePokemonEvolutionOrThrowArgs: ["where"],
  GroupByPokemonEvolutionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateGrowthRatesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstGrowthRatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstGrowthRatesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyGrowthRatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueGrowthRatesArgs: ["where"],
  FindUniqueGrowthRatesOrThrowArgs: ["where"],
  GroupByGrowthRatesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateExperienceArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstExperienceArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstExperienceOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyExperienceArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueExperienceArgs: ["where"],
  FindUniqueExperienceOrThrowArgs: ["where"],
  GroupByExperienceArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateGenderArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstGenderArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstGenderOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyGenderArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueGenderArgs: ["where"],
  FindUniqueGenderOrThrowArgs: ["where"],
  GroupByGenderArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLanguageArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLanguageArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLanguageOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLanguageArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLanguageArgs: ["where"],
  FindUniqueLanguageOrThrowArgs: ["where"],
  GroupByLanguageArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEggGroupArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEggGroupArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEggGroupOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEggGroupArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEggGroupArgs: ["where"],
  FindUniqueEggGroupOrThrowArgs: ["where"],
  GroupByEggGroupArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateNatureArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstNatureArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstNatureOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyNatureArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueNatureArgs: ["where"],
  FindUniqueNatureOrThrowArgs: ["where"],
  GroupByNatureArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateContestTypeArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstContestTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstContestTypeOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyContestTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueContestTypeArgs: ["where"],
  FindUniqueContestTypeOrThrowArgs: ["where"],
  GroupByContestTypeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateContestEffectArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstContestEffectArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstContestEffectOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyContestEffectArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueContestEffectArgs: ["where"],
  FindUniqueContestEffectOrThrowArgs: ["where"],
  GroupByContestEffectArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateSuperContestEffectArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstSuperContestEffectArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstSuperContestEffectOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySuperContestEffectArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueSuperContestEffectArgs: ["where"],
  FindUniqueSuperContestEffectOrThrowArgs: ["where"],
  GroupBySuperContestEffectArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMachineArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMachineArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMachineOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMachineArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMachineArgs: ["where"],
  FindUniqueMachineOrThrowArgs: ["where"],
  GroupByMachineArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterMethodArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterMethodArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterMethodOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterMethodArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterMethodArgs: ["where"],
  FindUniqueEncounterMethodOrThrowArgs: ["where"],
  GroupByEncounterMethodArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterSlotArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterSlotArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterSlotOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterSlotArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterSlotArgs: ["where"],
  FindUniqueEncounterSlotOrThrowArgs: ["where"],
  GroupByEncounterSlotArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterArgs: ["where"],
  FindUniqueEncounterOrThrowArgs: ["where"],
  GroupByEncounterArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterConditionArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterConditionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterConditionOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterConditionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterConditionArgs: ["where"],
  FindUniqueEncounterConditionOrThrowArgs: ["where"],
  GroupByEncounterConditionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterConditionValueArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterConditionValueArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterConditionValueOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterConditionValueArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterConditionValueArgs: ["where"],
  FindUniqueEncounterConditionValueOrThrowArgs: ["where"],
  GroupByEncounterConditionValueArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterConditionValueMapArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterConditionValueMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterConditionValueMapOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterConditionValueMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterConditionValueMapArgs: ["where"],
  FindUniqueEncounterConditionValueMapOrThrowArgs: ["where"],
  GroupByEncounterConditionValueMapArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveMetaCategoryArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveMetaCategoryArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveMetaCategoryOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveMetaCategoryArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveMetaCategoryArgs: ["where"],
  FindUniqueMoveMetaCategoryOrThrowArgs: ["where"],
  GroupByMoveMetaCategoryArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveMetaAilmentArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveMetaAilmentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveMetaAilmentOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveMetaAilmentArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveMetaAilmentArgs: ["where"],
  FindUniqueMoveMetaAilmentOrThrowArgs: ["where"],
  GroupByMoveMetaAilmentArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveMetaArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveMetaArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveMetaOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveMetaArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveMetaArgs: ["where"],
  FindUniqueMoveMetaOrThrowArgs: ["where"],
  GroupByMoveMetaArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveMetaStatChangesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveMetaStatChangesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveMetaStatChangesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveMetaStatChangesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveMetaStatChangesArgs: ["where"],
  FindUniqueMoveMetaStatChangesOrThrowArgs: ["where"],
  GroupByMoveMetaStatChangesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveFlagArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveFlagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveFlagOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveFlagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveFlagArgs: ["where"],
  FindUniqueMoveFlagOrThrowArgs: ["where"],
  GroupByMoveFlagArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveFlagMapOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveFlagMapArgs: ["where"],
  FindUniqueMoveFlagMapOrThrowArgs: ["where"],
  GroupByMoveFlagMapArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveBattleStyleArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveBattleStyleArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveBattleStyleOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveBattleStyleArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveBattleStyleArgs: ["where"],
  FindUniqueMoveBattleStyleOrThrowArgs: ["where"],
  GroupByMoveBattleStyleArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemFlagArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemFlagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemFlagOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemFlagArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemFlagArgs: ["where"],
  FindUniqueItemFlagOrThrowArgs: ["where"],
  GroupByItemFlagArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemFlagMapOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemFlagMapArgs: ["where"],
  FindUniqueItemFlagMapOrThrowArgs: ["where"],
  GroupByItemFlagMapArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemFlingEffectArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemFlingEffectArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemFlingEffectOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemFlingEffectArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemFlingEffectArgs: ["where"],
  FindUniqueItemFlingEffectOrThrowArgs: ["where"],
  GroupByItemFlingEffectArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateBerryArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstBerryArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstBerryOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyBerryArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueBerryArgs: ["where"],
  FindUniqueBerryOrThrowArgs: ["where"],
  GroupByBerryArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateBerryFirmnessArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstBerryFirmnessArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstBerryFirmnessOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyBerryFirmnessArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueBerryFirmnessArgs: ["where"],
  FindUniqueBerryFirmnessOrThrowArgs: ["where"],
  GroupByBerryFirmnessArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateBerryFlavorArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstBerryFlavorArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstBerryFlavorOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyBerryFlavorArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueBerryFlavorArgs: ["where"],
  FindUniqueBerryFlavorOrThrowArgs: ["where"],
  GroupByBerryFlavorArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateCharacteristicArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstCharacteristicArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstCharacteristicOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCharacteristicArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueCharacteristicArgs: ["where"],
  FindUniqueCharacteristicOrThrowArgs: ["where"],
  GroupByCharacteristicArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateContestComboArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstContestComboArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstContestComboOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyContestComboArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueContestComboArgs: ["where"],
  FindUniqueContestComboOrThrowArgs: ["where"],
  GroupByContestComboArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateSuperContestComboArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstSuperContestComboArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstSuperContestComboOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySuperContestComboArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueSuperContestComboArgs: ["where"],
  FindUniqueSuperContestComboOrThrowArgs: ["where"],
  GroupBySuperContestComboArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonMoveMethodArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonMoveMethodArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonMoveMethodOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonMoveMethodArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonMoveMethodArgs: ["where"],
  FindUniquePokemonMoveMethodOrThrowArgs: ["where"],
  GroupByPokemonMoveMethodArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateVersionGroupPokemonMoveMethodArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstVersionGroupPokemonMoveMethodArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstVersionGroupPokemonMoveMethodOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyVersionGroupPokemonMoveMethodArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueVersionGroupPokemonMoveMethodArgs: ["where"],
  FindUniqueVersionGroupPokemonMoveMethodOrThrowArgs: ["where"],
  GroupByVersionGroupPokemonMoveMethodArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonShapeArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonShapeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonShapeOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonShapeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonShapeArgs: ["where"],
  FindUniquePokemonShapeOrThrowArgs: ["where"],
  GroupByPokemonShapeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonColorArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonColorArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonColorOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonColorArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonColorArgs: ["where"],
  FindUniquePokemonColorOrThrowArgs: ["where"],
  GroupByPokemonColorArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonHabitatArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonHabitatArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonHabitatOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonHabitatArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonHabitatArgs: ["where"],
  FindUniquePokemonHabitatOrThrowArgs: ["where"],
  GroupByPokemonHabitatArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateTypeEfficacyArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstTypeEfficacyArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstTypeEfficacyOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyTypeEfficacyArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueTypeEfficacyArgs: ["where"],
  FindUniqueTypeEfficacyOrThrowArgs: ["where"],
  GroupByTypeEfficacyArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateVersionGroupRegionArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstVersionGroupRegionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstVersionGroupRegionOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyVersionGroupRegionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueVersionGroupRegionArgs: ["where"],
  FindUniqueVersionGroupRegionOrThrowArgs: ["where"],
  GroupByVersionGroupRegionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokedexVersionGroupArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokedexVersionGroupArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokedexVersionGroupOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokedexVersionGroupArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokedexVersionGroupArgs: ["where"],
  FindUniquePokedexVersionGroupOrThrowArgs: ["where"],
  GroupByPokedexVersionGroupArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonAbilityArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonAbilityArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonAbilityOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonAbilityArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonAbilityArgs: ["where"],
  FindUniquePokemonAbilityOrThrowArgs: ["where"],
  GroupByPokemonAbilityArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonMoveArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonMoveArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonMoveOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonMoveArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonMoveArgs: ["where"],
  FindUniquePokemonMoveOrThrowArgs: ["where"],
  GroupByPokemonMoveArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonStatArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonStatArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonStatOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonStatArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonStatArgs: ["where"],
  FindUniquePokemonStatOrThrowArgs: ["where"],
  GroupByPokemonStatArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonTypeArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonTypeOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonTypeArgs: ["where"],
  FindUniquePokemonTypeOrThrowArgs: ["where"],
  GroupByPokemonTypeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonEggGroupArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonEggGroupArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonEggGroupOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonEggGroupArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonEggGroupArgs: ["where"],
  FindUniquePokemonEggGroupOrThrowArgs: ["where"],
  GroupByPokemonEggGroupArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonItemArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonItemArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonItemOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonItemArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonItemArgs: ["where"],
  FindUniquePokemonItemOrThrowArgs: ["where"],
  GroupByPokemonItemArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonGameIndexOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonGameIndexArgs: ["where"],
  FindUniquePokemonGameIndexOrThrowArgs: ["where"],
  GroupByPokemonGameIndexArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonDexNumberArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonDexNumberArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonDexNumberOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonDexNumberArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonDexNumberArgs: ["where"],
  FindUniquePokemonDexNumberOrThrowArgs: ["where"],
  GroupByPokemonDexNumberArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonFormGenerationArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonFormGenerationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonFormGenerationOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonFormGenerationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonFormGenerationArgs: ["where"],
  FindUniquePokemonFormGenerationOrThrowArgs: ["where"],
  GroupByPokemonFormGenerationArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonFormTypeArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonFormTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonFormTypeOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonFormTypeArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonFormTypeArgs: ["where"],
  FindUniquePokemonFormTypeOrThrowArgs: ["where"],
  GroupByPokemonFormTypeArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateTypeGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstTypeGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstTypeGameIndexOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyTypeGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueTypeGameIndexArgs: ["where"],
  FindUniqueTypeGameIndexOrThrowArgs: ["where"],
  GroupByTypeGameIndexArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemGameIndexOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemGameIndexArgs: ["where"],
  FindUniqueItemGameIndexOrThrowArgs: ["where"],
  GroupByItemGameIndexArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLocationGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLocationGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLocationGameIndexOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLocationGameIndexArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLocationGameIndexArgs: ["where"],
  FindUniqueLocationGameIndexOrThrowArgs: ["where"],
  GroupByLocationGameIndexArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLocationAreaEncounterRateArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLocationAreaEncounterRateArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLocationAreaEncounterRateOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLocationAreaEncounterRateArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLocationAreaEncounterRateArgs: ["where"],
  FindUniqueLocationAreaEncounterRateOrThrowArgs: ["where"],
  GroupByLocationAreaEncounterRateArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateNatureBattleStylePreferenceArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstNatureBattleStylePreferenceArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstNatureBattleStylePreferenceOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyNatureBattleStylePreferenceArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueNatureBattleStylePreferenceArgs: ["where"],
  FindUniqueNatureBattleStylePreferenceOrThrowArgs: ["where"],
  GroupByNatureBattleStylePreferenceArgs: ["where", "orderBy", "by", "having", "take", "skip"]};

type ResolverModelNames = keyof typeof crudResolversMap;

type ModelResolverActionNames<
  TModel extends ResolverModelNames
> = keyof typeof crudResolversMap[TModel]["prototype"];

export type ResolverActionsConfig<
  TModel extends ResolverModelNames
> = Partial<Record<ModelResolverActionNames<TModel>, MethodDecorator[] | MethodDecoratorOverrideFn>>
  & {
    _all?: MethodDecorator[];
    _query?: MethodDecorator[];
    _mutation?: MethodDecorator[];
  };

export type ResolversEnhanceMap = {
  [TModel in ResolverModelNames]?: ResolverActionsConfig<TModel>;
};

export function applyResolversEnhanceMap(
  resolversEnhanceMap: ResolversEnhanceMap,
) {
  const mutationOperationPrefixes = [
    "createOne", "createMany", "createManyAndReturn", "deleteOne", "updateOne", "deleteMany", "updateMany", "upsertOne"
  ];
  for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
    const modelName = resolversEnhanceMapKey as keyof typeof resolversEnhanceMap;
    const crudTarget = crudResolversMap[modelName].prototype;
    const resolverActionsConfig = resolversEnhanceMap[modelName]!;
    const actionResolversConfig = actionResolversMap[modelName];
    const allActionsDecorators = resolverActionsConfig._all;
    const resolverActionNames = crudResolversInfo[modelName as keyof typeof crudResolversInfo];
    for (const resolverActionName of resolverActionNames) {
      const maybeDecoratorsOrFn = resolverActionsConfig[
        resolverActionName as keyof typeof resolverActionsConfig
      ] as MethodDecorator[] | MethodDecoratorOverrideFn | undefined;
      const isWriteOperation = mutationOperationPrefixes.some(prefix => resolverActionName.startsWith(prefix));
      const operationKindDecorators = isWriteOperation ? resolverActionsConfig._mutation : resolverActionsConfig._query;
      const mainDecorators = [
        ...allActionsDecorators ?? [],
        ...operationKindDecorators ?? [],
      ]
      let decorators: MethodDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(mainDecorators);
      } else {
        decorators = [...mainDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      const actionTarget = (actionResolversConfig[
        resolverActionName as keyof typeof actionResolversConfig
      ] as Function).prototype;
      tslib.__decorate(decorators, crudTarget, resolverActionName, null);
      tslib.__decorate(decorators, actionTarget, resolverActionName, null);
    }
  }
}

type ArgsTypesNames = keyof typeof argsTypes;

type ArgFieldNames<TArgsType extends ArgsTypesNames> = Exclude<
  keyof typeof argsTypes[TArgsType]["prototype"],
  number | symbol
>;

type ArgFieldsConfig<
  TArgsType extends ArgsTypesNames
> = FieldsConfig<ArgFieldNames<TArgsType>>;

export type ArgConfig<TArgsType extends ArgsTypesNames> = {
  class?: ClassDecorator[];
  fields?: ArgFieldsConfig<TArgsType>;
};

export type ArgsTypesEnhanceMap = {
  [TArgsType in ArgsTypesNames]?: ArgConfig<TArgsType>;
};

export function applyArgsTypesEnhanceMap(
  argsTypesEnhanceMap: ArgsTypesEnhanceMap,
) {
  for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
    const argsTypeName = argsTypesEnhanceMapKey as keyof typeof argsTypesEnhanceMap;
    const typeConfig = argsTypesEnhanceMap[argsTypeName]!;
    const typeClass = argsTypes[argsTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      argsInfo[argsTypeName as keyof typeof argsInfo],
    );
  }
}

const relationResolversMap = {
  Pokemon: relationResolvers.PokemonRelationsResolver,
  PokemonSpecies: relationResolvers.PokemonSpeciesRelationsResolver,
  PokemonForm: relationResolvers.PokemonFormRelationsResolver,
  Move: relationResolvers.MoveRelationsResolver,
  MoveEffect: relationResolvers.MoveEffectRelationsResolver,
  MoveTarget: relationResolvers.MoveTargetRelationsResolver,
  MoveDamageClass: relationResolvers.MoveDamageClassRelationsResolver,
  Type: relationResolvers.TypeRelationsResolver,
  Ability: relationResolvers.AbilityRelationsResolver,
  Item: relationResolvers.ItemRelationsResolver,
  ItemCategory: relationResolvers.ItemCategoryRelationsResolver,
  ItemPocket: relationResolvers.ItemPocketRelationsResolver,
  Stat: relationResolvers.StatRelationsResolver,
  Generation: relationResolvers.GenerationRelationsResolver,
  VersionGroup: relationResolvers.VersionGroupRelationsResolver,
  Version: relationResolvers.VersionRelationsResolver,
  Region: relationResolvers.RegionRelationsResolver,
  Location: relationResolvers.LocationRelationsResolver,
  LocationArea: relationResolvers.LocationAreaRelationsResolver,
  Pokedex: relationResolvers.PokedexRelationsResolver,
  EvolutionChain: relationResolvers.EvolutionChainRelationsResolver,
  EvolutionTrigger: relationResolvers.EvolutionTriggerRelationsResolver,
  PokemonEvolution: relationResolvers.PokemonEvolutionRelationsResolver,
  GrowthRates: relationResolvers.GrowthRatesRelationsResolver,
  Experience: relationResolvers.ExperienceRelationsResolver,
  Gender: relationResolvers.GenderRelationsResolver,
  EggGroup: relationResolvers.EggGroupRelationsResolver,
  Nature: relationResolvers.NatureRelationsResolver,
  ContestType: relationResolvers.ContestTypeRelationsResolver,
  ContestEffect: relationResolvers.ContestEffectRelationsResolver,
  SuperContestEffect: relationResolvers.SuperContestEffectRelationsResolver,
  Machine: relationResolvers.MachineRelationsResolver,
  EncounterMethod: relationResolvers.EncounterMethodRelationsResolver,
  EncounterSlot: relationResolvers.EncounterSlotRelationsResolver,
  Encounter: relationResolvers.EncounterRelationsResolver,
  EncounterCondition: relationResolvers.EncounterConditionRelationsResolver,
  EncounterConditionValue: relationResolvers.EncounterConditionValueRelationsResolver,
  EncounterConditionValueMap: relationResolvers.EncounterConditionValueMapRelationsResolver,
  MoveMetaCategory: relationResolvers.MoveMetaCategoryRelationsResolver,
  MoveMetaAilment: relationResolvers.MoveMetaAilmentRelationsResolver,
  MoveMeta: relationResolvers.MoveMetaRelationsResolver,
  MoveMetaStatChanges: relationResolvers.MoveMetaStatChangesRelationsResolver,
  MoveFlag: relationResolvers.MoveFlagRelationsResolver,
  MoveFlagMap: relationResolvers.MoveFlagMapRelationsResolver,
  MoveBattleStyle: relationResolvers.MoveBattleStyleRelationsResolver,
  ItemFlag: relationResolvers.ItemFlagRelationsResolver,
  ItemFlagMap: relationResolvers.ItemFlagMapRelationsResolver,
  ItemFlingEffect: relationResolvers.ItemFlingEffectRelationsResolver,
  Berry: relationResolvers.BerryRelationsResolver,
  BerryFirmness: relationResolvers.BerryFirmnessRelationsResolver,
  BerryFlavor: relationResolvers.BerryFlavorRelationsResolver,
  Characteristic: relationResolvers.CharacteristicRelationsResolver,
  ContestCombo: relationResolvers.ContestComboRelationsResolver,
  SuperContestCombo: relationResolvers.SuperContestComboRelationsResolver,
  PokemonMoveMethod: relationResolvers.PokemonMoveMethodRelationsResolver,
  VersionGroupPokemonMoveMethod: relationResolvers.VersionGroupPokemonMoveMethodRelationsResolver,
  PokemonShape: relationResolvers.PokemonShapeRelationsResolver,
  PokemonColor: relationResolvers.PokemonColorRelationsResolver,
  PokemonHabitat: relationResolvers.PokemonHabitatRelationsResolver,
  TypeEfficacy: relationResolvers.TypeEfficacyRelationsResolver,
  VersionGroupRegion: relationResolvers.VersionGroupRegionRelationsResolver,
  PokedexVersionGroup: relationResolvers.PokedexVersionGroupRelationsResolver,
  PokemonAbility: relationResolvers.PokemonAbilityRelationsResolver,
  PokemonMove: relationResolvers.PokemonMoveRelationsResolver,
  PokemonStat: relationResolvers.PokemonStatRelationsResolver,
  PokemonType: relationResolvers.PokemonTypeRelationsResolver,
  PokemonEggGroup: relationResolvers.PokemonEggGroupRelationsResolver,
  PokemonItem: relationResolvers.PokemonItemRelationsResolver,
  PokemonGameIndex: relationResolvers.PokemonGameIndexRelationsResolver,
  PokemonDexNumber: relationResolvers.PokemonDexNumberRelationsResolver,
  PokemonFormGeneration: relationResolvers.PokemonFormGenerationRelationsResolver,
  PokemonFormType: relationResolvers.PokemonFormTypeRelationsResolver,
  TypeGameIndex: relationResolvers.TypeGameIndexRelationsResolver,
  ItemGameIndex: relationResolvers.ItemGameIndexRelationsResolver,
  LocationGameIndex: relationResolvers.LocationGameIndexRelationsResolver,
  LocationAreaEncounterRate: relationResolvers.LocationAreaEncounterRateRelationsResolver,
  NatureBattleStylePreference: relationResolvers.NatureBattleStylePreferenceRelationsResolver
};
const relationResolversInfo = {
  Pokemon: ["species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonSpecies: ["generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonForm: ["pokemon", "versionGroup", "generations", "types"],
  Move: ["generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveEffect: ["moves"],
  MoveTarget: ["moves"],
  MoveDamageClass: ["moves", "types"],
  Type: ["generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  Ability: ["generation", "pokemonAbilities"],
  Item: ["category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCategory: ["pocket", "items"],
  ItemPocket: ["categories"],
  Stat: ["pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  Generation: ["region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  VersionGroup: ["generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  Version: ["versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  Region: ["generations", "locations", "pokedexes", "versionGroups"],
  Location: ["region", "areas", "gameIndices", "evolution"],
  LocationArea: ["location", "encounters", "encounterRates"],
  Pokedex: ["region", "dexNumbers", "versionGroups"],
  EvolutionChain: ["babyTriggerItem", "species"],
  EvolutionTrigger: ["evolution"],
  PokemonEvolution: ["evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  GrowthRates: ["species", "experience"],
  Experience: ["growthRate"],
  Gender: ["evolution"],
  EggGroup: ["species"],
  Nature: ["decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  ContestType: ["moves", "berryFlavors"],
  ContestEffect: ["moves"],
  SuperContestEffect: ["moves"],
  Machine: ["versionGroup", "item", "move"],
  EncounterMethod: ["slots", "encounterRates"],
  EncounterSlot: ["versionGroup", "encounterMethod", "encounters"],
  Encounter: ["version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterCondition: ["values"],
  EncounterConditionValue: ["condition", "conditionValueMap"],
  EncounterConditionValueMap: ["encounter", "conditionValue"],
  MoveMetaCategory: ["meta"],
  MoveMetaAilment: ["meta"],
  MoveMeta: ["move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaStatChanges: ["stat", "meta"],
  MoveFlag: ["flagMap"],
  MoveFlagMap: ["move", "flag"],
  MoveBattleStyle: ["naturePreferences"],
  ItemFlag: ["flagMap"],
  ItemFlagMap: ["item", "flag"],
  ItemFlingEffect: ["items"],
  Berry: ["item", "firmness", "naturalGiftType", "flavors"],
  BerryFirmness: ["berries"],
  BerryFlavor: ["berry", "contestType", "type"],
  Characteristic: ["stat"],
  ContestCombo: ["firstMove", "secondMove"],
  SuperContestCombo: ["firstMove", "secondMove"],
  PokemonMoveMethod: ["pokemonMoves", "versionGroups"],
  VersionGroupPokemonMoveMethod: ["versionGroup", "moveMethod"],
  PokemonShape: ["species"],
  PokemonColor: ["species"],
  PokemonHabitat: ["species"],
  TypeEfficacy: ["damageType", "targetType"],
  VersionGroupRegion: ["versionGroup", "region"],
  PokedexVersionGroup: ["pokedex", "versionGroup"],
  PokemonAbility: ["pokemon", "ability"],
  PokemonMove: ["pokemon", "versionGroup", "move", "moveMethod"],
  PokemonStat: ["pokemon", "stat"],
  PokemonType: ["pokemon", "type"],
  PokemonEggGroup: ["species", "eggGroup"],
  PokemonItem: ["pokemon", "version", "item"],
  PokemonGameIndex: ["pokemon", "version"],
  PokemonDexNumber: ["species", "pokedex"],
  PokemonFormGeneration: ["pokemonForm", "generation"],
  PokemonFormType: ["pokemonForm", "type"],
  TypeGameIndex: ["type", "generation"],
  ItemGameIndex: ["item", "generation"],
  LocationGameIndex: ["location", "generation"],
  LocationAreaEncounterRate: ["locationArea", "encounterMethod", "version"],
  NatureBattleStylePreference: ["nature", "battleStyle"]
};

type RelationResolverModelNames = keyof typeof relationResolversMap;

type RelationResolverActionNames<
  TModel extends RelationResolverModelNames
> = keyof typeof relationResolversMap[TModel]["prototype"];

export type RelationResolverActionsConfig<TModel extends RelationResolverModelNames>
  = Partial<Record<RelationResolverActionNames<TModel>, MethodDecorator[] | MethodDecoratorOverrideFn>>
  & { _all?: MethodDecorator[] };

export type RelationResolversEnhanceMap = {
  [TModel in RelationResolverModelNames]?: RelationResolverActionsConfig<TModel>;
};

export function applyRelationResolversEnhanceMap(
  relationResolversEnhanceMap: RelationResolversEnhanceMap,
) {
  for (const relationResolversEnhanceMapKey of Object.keys(relationResolversEnhanceMap)) {
    const modelName = relationResolversEnhanceMapKey as keyof typeof relationResolversEnhanceMap;
    const relationResolverTarget = relationResolversMap[modelName].prototype;
    const relationResolverActionsConfig = relationResolversEnhanceMap[modelName]!;
    const allActionsDecorators = relationResolverActionsConfig._all ?? [];
    const relationResolverActionNames = relationResolversInfo[modelName as keyof typeof relationResolversInfo];
    for (const relationResolverActionName of relationResolverActionNames) {
      const maybeDecoratorsOrFn = relationResolverActionsConfig[
        relationResolverActionName as keyof typeof relationResolverActionsConfig
      ] as MethodDecorator[] | MethodDecoratorOverrideFn | undefined;
      let decorators: MethodDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(allActionsDecorators);
      } else {
        decorators = [...allActionsDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      tslib.__decorate(decorators, relationResolverTarget, relationResolverActionName, null);
    }
  }
}

type TypeConfig = {
  class?: ClassDecorator[];
  fields?: FieldsConfig;
};

export type PropertyDecoratorOverrideFn = (decorators: PropertyDecorator[]) => PropertyDecorator[];

type FieldsConfig<TTypeKeys extends string = string> = Partial<
  Record<TTypeKeys, PropertyDecorator[] | PropertyDecoratorOverrideFn>
> & { _all?: PropertyDecorator[] };

function applyTypeClassEnhanceConfig<
  TEnhanceConfig extends TypeConfig,
  TType extends object
>(
  enhanceConfig: TEnhanceConfig,
  typeClass: ClassType<TType>,
  typePrototype: TType,
  typeFieldNames: string[]
) {
  if (enhanceConfig.class) {
    tslib.__decorate(enhanceConfig.class, typeClass);
  }
  if (enhanceConfig.fields) {
    const allFieldsDecorators = enhanceConfig.fields._all ?? [];
    for (const typeFieldName of typeFieldNames) {
      const maybeDecoratorsOrFn = enhanceConfig.fields[
        typeFieldName
      ] as PropertyDecorator[] | PropertyDecoratorOverrideFn | undefined;
      let decorators: PropertyDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(allFieldsDecorators);
      } else {
        decorators = [...allFieldsDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      tslib.__decorate(decorators, typePrototype, typeFieldName, void 0);
    }
  }
}

const modelsInfo = {
  Pokemon: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSpecies: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonForm: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  Move: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveEffect: ["id"],
  MoveTarget: ["id", "identifier"],
  MoveDamageClass: ["id", "identifier"],
  Type: ["id", "identifier", "generation_id", "damage_class_id"],
  Ability: ["id", "identifier", "generation_id", "is_main_series"],
  Item: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemCategory: ["id", "pocket_id", "identifier"],
  ItemPocket: ["id", "identifier"],
  Stat: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  Generation: ["id", "main_region_id", "identifier"],
  VersionGroup: ["id", "identifier", "generation_id", "order"],
  Version: ["id", "version_group_id", "identifier"],
  Region: ["id", "identifier"],
  Location: ["id", "region_id", "identifier"],
  LocationArea: ["id", "location_id", "game_index", "identifier"],
  Pokedex: ["id", "region_id", "identifier", "is_main_series"],
  EvolutionChain: ["id", "baby_trigger_item_id"],
  EvolutionTrigger: ["id", "identifier"],
  PokemonEvolution: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  GrowthRates: ["id", "identifier", "formula"],
  Experience: ["growth_rate_id", "level", "experience"],
  Gender: ["id", "identifier"],
  Language: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  EggGroup: ["id", "identifier"],
  Nature: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  ContestType: ["id", "identifier"],
  ContestEffect: ["id", "appeal", "jam"],
  SuperContestEffect: ["id", "appeal"],
  Machine: ["machine_number", "version_group_id", "item_id", "move_id"],
  EncounterMethod: ["id", "identifier", "order"],
  EncounterSlot: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  Encounter: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterCondition: ["id", "identifier"],
  EncounterConditionValue: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueMap: ["encounter_id", "encounter_condition_value_id"],
  MoveMetaCategory: ["id", "identifier"],
  MoveMetaAilment: ["id", "identifier"],
  MoveMeta: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaStatChanges: ["move_id", "stat_id", "change"],
  MoveFlag: ["id", "identifier"],
  MoveFlagMap: ["move_id", "move_flag_id"],
  MoveBattleStyle: ["id", "identifier"],
  ItemFlag: ["id", "identifier"],
  ItemFlagMap: ["item_id", "item_flag_id"],
  ItemFlingEffect: ["id", "identifier"],
  Berry: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryFirmness: ["id", "identifier"],
  BerryFlavor: ["berry_id", "contest_type_id", "flavor"],
  Characteristic: ["id", "stat_id", "gene_mod_5"],
  ContestCombo: ["first_move_id", "second_move_id"],
  SuperContestCombo: ["first_move_id", "second_move_id"],
  PokemonMoveMethod: ["id", "identifier"],
  VersionGroupPokemonMoveMethod: ["version_group_id", "pokemon_move_method_id"],
  PokemonShape: ["id", "identifier"],
  PokemonColor: ["id", "identifier"],
  PokemonHabitat: ["id", "identifier"],
  TypeEfficacy: ["damage_type_id", "target_type_id", "damage_factor"],
  VersionGroupRegion: ["version_group_id", "region_id"],
  PokedexVersionGroup: ["pokedex_id", "version_group_id"],
  PokemonAbility: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMove: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStat: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonType: ["pokemon_id", "type_id", "slot"],
  PokemonEggGroup: ["species_id", "egg_group_id"],
  PokemonItem: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndex: ["pokemon_id", "version_id", "game_index"],
  PokemonDexNumber: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonFormGeneration: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormType: ["pokemon_form_id", "type_id", "slot"],
  TypeGameIndex: ["type_id", "generation_id", "game_index"],
  ItemGameIndex: ["item_id", "generation_id", "game_index"],
  LocationGameIndex: ["location_id", "generation_id", "game_index"],
  LocationAreaEncounterRate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  NatureBattleStylePreference: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"]
};

type ModelNames = keyof typeof models;

type ModelFieldNames<TModel extends ModelNames> = Exclude<
  keyof typeof models[TModel]["prototype"],
  number | symbol
>;

type ModelFieldsConfig<TModel extends ModelNames> = FieldsConfig<
  ModelFieldNames<TModel>
>;

export type ModelConfig<TModel extends ModelNames> = {
  class?: ClassDecorator[];
  fields?: ModelFieldsConfig<TModel>;
};

export type ModelsEnhanceMap = {
  [TModel in ModelNames]?: ModelConfig<TModel>;
};

export function applyModelsEnhanceMap(modelsEnhanceMap: ModelsEnhanceMap) {
  for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
    const modelName = modelsEnhanceMapKey as keyof typeof modelsEnhanceMap;
    const modelConfig = modelsEnhanceMap[modelName]!;
    const modelClass = models[modelName];
    const modelTarget = modelClass.prototype;
    applyTypeClassEnhanceConfig(
      modelConfig,
      modelClass,
      modelTarget,
      modelsInfo[modelName as keyof typeof modelsInfo],
    );
  }
}

const outputsInfo = {
  AggregatePokemon: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonGroupBy: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonSpecies: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonSpeciesGroupBy: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonForm: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonFormGroupBy: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMove: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveGroupBy: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveEffect: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveEffectGroupBy: ["id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveTarget: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveTargetGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveDamageClass: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveDamageClassGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateType: ["_count", "_avg", "_sum", "_min", "_max"],
  TypeGroupBy: ["id", "identifier", "generation_id", "damage_class_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateAbility: ["_count", "_avg", "_sum", "_min", "_max"],
  AbilityGroupBy: ["id", "identifier", "generation_id", "is_main_series", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItem: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemGroupBy: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemCategory: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemCategoryGroupBy: ["id", "pocket_id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemPocket: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemPocketGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateStat: ["_count", "_avg", "_sum", "_min", "_max"],
  StatGroupBy: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateGeneration: ["_count", "_avg", "_sum", "_min", "_max"],
  GenerationGroupBy: ["id", "main_region_id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateVersionGroup: ["_count", "_avg", "_sum", "_min", "_max"],
  VersionGroupGroupBy: ["id", "identifier", "generation_id", "order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateVersion: ["_count", "_avg", "_sum", "_min", "_max"],
  VersionGroupBy: ["id", "version_group_id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateRegion: ["_count", "_avg", "_sum", "_min", "_max"],
  RegionGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLocation: ["_count", "_avg", "_sum", "_min", "_max"],
  LocationGroupBy: ["id", "region_id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLocationArea: ["_count", "_avg", "_sum", "_min", "_max"],
  LocationAreaGroupBy: ["id", "location_id", "game_index", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokedex: ["_count", "_avg", "_sum", "_min", "_max"],
  PokedexGroupBy: ["id", "region_id", "identifier", "is_main_series", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEvolutionChain: ["_count", "_avg", "_sum", "_min", "_max"],
  EvolutionChainGroupBy: ["id", "baby_trigger_item_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEvolutionTrigger: ["_count", "_avg", "_sum", "_min", "_max"],
  EvolutionTriggerGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonEvolution: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonEvolutionGroupBy: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateGrowthRates: ["_count", "_avg", "_sum", "_min", "_max"],
  GrowthRatesGroupBy: ["id", "identifier", "formula", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateExperience: ["_count", "_avg", "_sum", "_min", "_max"],
  ExperienceGroupBy: ["growth_rate_id", "level", "experience", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateGender: ["_count", "_avg", "_sum", "_min", "_max"],
  GenderGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLanguage: ["_count", "_avg", "_sum", "_min", "_max"],
  LanguageGroupBy: ["id", "iso639", "iso3166", "identifier", "official", "order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEggGroup: ["_count", "_avg", "_sum", "_min", "_max"],
  EggGroupGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateNature: ["_count", "_avg", "_sum", "_min", "_max"],
  NatureGroupBy: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateContestType: ["_count", "_avg", "_sum", "_min", "_max"],
  ContestTypeGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateContestEffect: ["_count", "_avg", "_sum", "_min", "_max"],
  ContestEffectGroupBy: ["id", "appeal", "jam", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSuperContestEffect: ["_count", "_avg", "_sum", "_min", "_max"],
  SuperContestEffectGroupBy: ["id", "appeal", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMachine: ["_count", "_avg", "_sum", "_min", "_max"],
  MachineGroupBy: ["machine_number", "version_group_id", "item_id", "move_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterMethod: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterMethodGroupBy: ["id", "identifier", "order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterSlot: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterSlotGroupBy: ["id", "version_group_id", "encounter_method_id", "slot", "rarity", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounter: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterGroupBy: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterCondition: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterConditionGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterConditionValue: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterConditionValueGroupBy: ["id", "encounter_condition_id", "identifier", "is_default", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterConditionValueMap: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterConditionValueMapGroupBy: ["encounter_id", "encounter_condition_value_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveMetaCategory: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveMetaCategoryGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveMetaAilment: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveMetaAilmentGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveMeta: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveMetaGroupBy: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveMetaStatChanges: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveMetaStatChangesGroupBy: ["move_id", "stat_id", "change", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveFlag: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveFlagGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveFlagMap: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveFlagMapGroupBy: ["move_id", "move_flag_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveBattleStyle: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveBattleStyleGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemFlag: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemFlagGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemFlagMap: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemFlagMapGroupBy: ["item_id", "item_flag_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemFlingEffect: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemFlingEffectGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateBerry: ["_count", "_avg", "_sum", "_min", "_max"],
  BerryGroupBy: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateBerryFirmness: ["_count", "_avg", "_sum", "_min", "_max"],
  BerryFirmnessGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateBerryFlavor: ["_count", "_avg", "_sum", "_min", "_max"],
  BerryFlavorGroupBy: ["berry_id", "contest_type_id", "flavor", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCharacteristic: ["_count", "_avg", "_sum", "_min", "_max"],
  CharacteristicGroupBy: ["id", "stat_id", "gene_mod_5", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateContestCombo: ["_count", "_avg", "_sum", "_min", "_max"],
  ContestComboGroupBy: ["first_move_id", "second_move_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSuperContestCombo: ["_count", "_avg", "_sum", "_min", "_max"],
  SuperContestComboGroupBy: ["first_move_id", "second_move_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonMoveMethod: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonMoveMethodGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateVersionGroupPokemonMoveMethod: ["_count", "_avg", "_sum", "_min", "_max"],
  VersionGroupPokemonMoveMethodGroupBy: ["version_group_id", "pokemon_move_method_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonShape: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonShapeGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonColor: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonColorGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonHabitat: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonHabitatGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateTypeEfficacy: ["_count", "_avg", "_sum", "_min", "_max"],
  TypeEfficacyGroupBy: ["damage_type_id", "target_type_id", "damage_factor", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateVersionGroupRegion: ["_count", "_avg", "_sum", "_min", "_max"],
  VersionGroupRegionGroupBy: ["version_group_id", "region_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokedexVersionGroup: ["_count", "_avg", "_sum", "_min", "_max"],
  PokedexVersionGroupGroupBy: ["pokedex_id", "version_group_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonAbility: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonAbilityGroupBy: ["pokemon_id", "ability_id", "is_hidden", "slot", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonMove: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonMoveGroupBy: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonStat: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonStatGroupBy: ["pokemon_id", "stat_id", "base_stat", "effort", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonType: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonTypeGroupBy: ["pokemon_id", "type_id", "slot", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonEggGroup: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonEggGroupGroupBy: ["species_id", "egg_group_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonItem: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonItemGroupBy: ["pokemon_id", "version_id", "item_id", "rarity", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonGameIndex: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonGameIndexGroupBy: ["pokemon_id", "version_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonDexNumber: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonDexNumberGroupBy: ["species_id", "pokedex_id", "pokedex_number", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonFormGeneration: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonFormGenerationGroupBy: ["pokemon_form_id", "generation_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonFormType: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonFormTypeGroupBy: ["pokemon_form_id", "type_id", "slot", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateTypeGameIndex: ["_count", "_avg", "_sum", "_min", "_max"],
  TypeGameIndexGroupBy: ["type_id", "generation_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemGameIndex: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemGameIndexGroupBy: ["item_id", "generation_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLocationGameIndex: ["_count", "_avg", "_sum", "_min", "_max"],
  LocationGameIndexGroupBy: ["location_id", "generation_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLocationAreaEncounterRate: ["_count", "_avg", "_sum", "_min", "_max"],
  LocationAreaEncounterRateGroupBy: ["location_area_id", "encounter_method_id", "version_id", "rate", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateNatureBattleStylePreference: ["_count", "_avg", "_sum", "_min", "_max"],
  NatureBattleStylePreferenceGroupBy: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "_count", "_avg", "_sum", "_min", "_max"],
  AffectedRowsOutput: ["count"],
  PokemonCount: ["forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCountAggregate: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "_all"],
  PokemonAvgAggregate: ["id", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSumAggregate: ["id", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonMinAggregate: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonMaxAggregate: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSpeciesCount: ["evolvesTo", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCountAggregate: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "_all"],
  PokemonSpeciesAvgAggregate: ["id", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesSumAggregate: ["id", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesMinAggregate: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesMaxAggregate: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonFormCount: ["generations", "types"],
  PokemonFormCountAggregate: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "_all"],
  PokemonFormAvgAggregate: ["id", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormSumAggregate: ["id", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormMinAggregate: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormMaxAggregate: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  MoveCount: ["pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCountAggregate: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "_all"],
  MoveAvgAggregate: ["id", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveSumAggregate: ["id", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveMinAggregate: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveMaxAggregate: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveEffectCount: ["moves"],
  MoveEffectCountAggregate: ["id", "_all"],
  MoveEffectAvgAggregate: ["id"],
  MoveEffectSumAggregate: ["id"],
  MoveEffectMinAggregate: ["id"],
  MoveEffectMaxAggregate: ["id"],
  MoveTargetCount: ["moves"],
  MoveTargetCountAggregate: ["id", "identifier", "_all"],
  MoveTargetAvgAggregate: ["id"],
  MoveTargetSumAggregate: ["id"],
  MoveTargetMinAggregate: ["id", "identifier"],
  MoveTargetMaxAggregate: ["id", "identifier"],
  MoveDamageClassCount: ["moves", "types"],
  MoveDamageClassCountAggregate: ["id", "identifier", "_all"],
  MoveDamageClassAvgAggregate: ["id"],
  MoveDamageClassSumAggregate: ["id"],
  MoveDamageClassMinAggregate: ["id", "identifier"],
  MoveDamageClassMaxAggregate: ["id", "identifier"],
  TypeCount: ["moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCountAggregate: ["id", "identifier", "generation_id", "damage_class_id", "_all"],
  TypeAvgAggregate: ["id", "generation_id", "damage_class_id"],
  TypeSumAggregate: ["id", "generation_id", "damage_class_id"],
  TypeMinAggregate: ["id", "identifier", "generation_id", "damage_class_id"],
  TypeMaxAggregate: ["id", "identifier", "generation_id", "damage_class_id"],
  AbilityCount: ["pokemonAbilities"],
  AbilityCountAggregate: ["id", "identifier", "generation_id", "is_main_series", "_all"],
  AbilityAvgAggregate: ["id", "generation_id", "is_main_series"],
  AbilitySumAggregate: ["id", "generation_id", "is_main_series"],
  AbilityMinAggregate: ["id", "identifier", "generation_id", "is_main_series"],
  AbilityMaxAggregate: ["id", "identifier", "generation_id", "is_main_series"],
  ItemCount: ["pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCountAggregate: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "_all"],
  ItemAvgAggregate: ["id", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemSumAggregate: ["id", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemMinAggregate: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemMaxAggregate: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemCategoryCount: ["items"],
  ItemCategoryCountAggregate: ["id", "pocket_id", "identifier", "_all"],
  ItemCategoryAvgAggregate: ["id", "pocket_id"],
  ItemCategorySumAggregate: ["id", "pocket_id"],
  ItemCategoryMinAggregate: ["id", "pocket_id", "identifier"],
  ItemCategoryMaxAggregate: ["id", "pocket_id", "identifier"],
  ItemPocketCount: ["categories"],
  ItemPocketCountAggregate: ["id", "identifier", "_all"],
  ItemPocketAvgAggregate: ["id"],
  ItemPocketSumAggregate: ["id"],
  ItemPocketMinAggregate: ["id", "identifier"],
  ItemPocketMaxAggregate: ["id", "identifier"],
  StatCount: ["pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatCountAggregate: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "_all"],
  StatAvgAggregate: ["id", "damage_class_id", "is_battle_only", "game_index"],
  StatSumAggregate: ["id", "damage_class_id", "is_battle_only", "game_index"],
  StatMinAggregate: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  StatMaxAggregate: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  GenerationCount: ["pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCountAggregate: ["id", "main_region_id", "identifier", "_all"],
  GenerationAvgAggregate: ["id", "main_region_id"],
  GenerationSumAggregate: ["id", "main_region_id"],
  GenerationMinAggregate: ["id", "main_region_id", "identifier"],
  GenerationMaxAggregate: ["id", "main_region_id", "identifier"],
  VersionGroupCount: ["versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupCountAggregate: ["id", "identifier", "generation_id", "order", "_all"],
  VersionGroupAvgAggregate: ["id", "generation_id", "order"],
  VersionGroupSumAggregate: ["id", "generation_id", "order"],
  VersionGroupMinAggregate: ["id", "identifier", "generation_id", "order"],
  VersionGroupMaxAggregate: ["id", "identifier", "generation_id", "order"],
  VersionCount: ["encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionCountAggregate: ["id", "version_group_id", "identifier", "_all"],
  VersionAvgAggregate: ["id", "version_group_id"],
  VersionSumAggregate: ["id", "version_group_id"],
  VersionMinAggregate: ["id", "version_group_id", "identifier"],
  VersionMaxAggregate: ["id", "version_group_id", "identifier"],
  RegionCount: ["generations", "locations", "pokedexes", "versionGroups"],
  RegionCountAggregate: ["id", "identifier", "_all"],
  RegionAvgAggregate: ["id"],
  RegionSumAggregate: ["id"],
  RegionMinAggregate: ["id", "identifier"],
  RegionMaxAggregate: ["id", "identifier"],
  LocationCount: ["areas", "gameIndices", "evolution"],
  LocationCountAggregate: ["id", "region_id", "identifier", "_all"],
  LocationAvgAggregate: ["id", "region_id"],
  LocationSumAggregate: ["id", "region_id"],
  LocationMinAggregate: ["id", "region_id", "identifier"],
  LocationMaxAggregate: ["id", "region_id", "identifier"],
  LocationAreaCount: ["encounters", "encounterRates"],
  LocationAreaCountAggregate: ["id", "location_id", "game_index", "identifier", "_all"],
  LocationAreaAvgAggregate: ["id", "location_id", "game_index"],
  LocationAreaSumAggregate: ["id", "location_id", "game_index"],
  LocationAreaMinAggregate: ["id", "location_id", "game_index", "identifier"],
  LocationAreaMaxAggregate: ["id", "location_id", "game_index", "identifier"],
  PokedexCount: ["dexNumbers", "versionGroups"],
  PokedexCountAggregate: ["id", "region_id", "identifier", "is_main_series", "_all"],
  PokedexAvgAggregate: ["id", "region_id", "is_main_series"],
  PokedexSumAggregate: ["id", "region_id", "is_main_series"],
  PokedexMinAggregate: ["id", "region_id", "identifier", "is_main_series"],
  PokedexMaxAggregate: ["id", "region_id", "identifier", "is_main_series"],
  EvolutionChainCount: ["species"],
  EvolutionChainCountAggregate: ["id", "baby_trigger_item_id", "_all"],
  EvolutionChainAvgAggregate: ["id", "baby_trigger_item_id"],
  EvolutionChainSumAggregate: ["id", "baby_trigger_item_id"],
  EvolutionChainMinAggregate: ["id", "baby_trigger_item_id"],
  EvolutionChainMaxAggregate: ["id", "baby_trigger_item_id"],
  EvolutionTriggerCount: ["evolution"],
  EvolutionTriggerCountAggregate: ["id", "identifier", "_all"],
  EvolutionTriggerAvgAggregate: ["id"],
  EvolutionTriggerSumAggregate: ["id"],
  EvolutionTriggerMinAggregate: ["id", "identifier"],
  EvolutionTriggerMaxAggregate: ["id", "identifier"],
  PokemonEvolutionCountAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "_all"],
  PokemonEvolutionAvgAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionSumAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionMinAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionMaxAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  GrowthRatesCount: ["species", "experience"],
  GrowthRatesCountAggregate: ["id", "identifier", "formula", "_all"],
  GrowthRatesAvgAggregate: ["id"],
  GrowthRatesSumAggregate: ["id"],
  GrowthRatesMinAggregate: ["id", "identifier", "formula"],
  GrowthRatesMaxAggregate: ["id", "identifier", "formula"],
  ExperienceCountAggregate: ["growth_rate_id", "level", "experience", "_all"],
  ExperienceAvgAggregate: ["growth_rate_id", "level", "experience"],
  ExperienceSumAggregate: ["growth_rate_id", "level", "experience"],
  ExperienceMinAggregate: ["growth_rate_id", "level", "experience"],
  ExperienceMaxAggregate: ["growth_rate_id", "level", "experience"],
  GenderCount: ["evolution"],
  GenderCountAggregate: ["id", "identifier", "_all"],
  GenderAvgAggregate: ["id"],
  GenderSumAggregate: ["id"],
  GenderMinAggregate: ["id", "identifier"],
  GenderMaxAggregate: ["id", "identifier"],
  LanguageCountAggregate: ["id", "iso639", "iso3166", "identifier", "official", "order", "_all"],
  LanguageAvgAggregate: ["id", "official", "order"],
  LanguageSumAggregate: ["id", "official", "order"],
  LanguageMinAggregate: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguageMaxAggregate: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  EggGroupCount: ["species"],
  EggGroupCountAggregate: ["id", "identifier", "_all"],
  EggGroupAvgAggregate: ["id"],
  EggGroupSumAggregate: ["id"],
  EggGroupMinAggregate: ["id", "identifier"],
  EggGroupMaxAggregate: ["id", "identifier"],
  NatureCount: ["battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NatureCountAggregate: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "_all"],
  NatureAvgAggregate: ["id", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NatureSumAggregate: ["id", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NatureMinAggregate: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NatureMaxAggregate: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  ContestTypeCount: ["moves", "berryFlavors"],
  ContestTypeCountAggregate: ["id", "identifier", "_all"],
  ContestTypeAvgAggregate: ["id"],
  ContestTypeSumAggregate: ["id"],
  ContestTypeMinAggregate: ["id", "identifier"],
  ContestTypeMaxAggregate: ["id", "identifier"],
  ContestEffectCount: ["moves"],
  ContestEffectCountAggregate: ["id", "appeal", "jam", "_all"],
  ContestEffectAvgAggregate: ["id", "appeal", "jam"],
  ContestEffectSumAggregate: ["id", "appeal", "jam"],
  ContestEffectMinAggregate: ["id", "appeal", "jam"],
  ContestEffectMaxAggregate: ["id", "appeal", "jam"],
  SuperContestEffectCount: ["moves"],
  SuperContestEffectCountAggregate: ["id", "appeal", "_all"],
  SuperContestEffectAvgAggregate: ["id", "appeal"],
  SuperContestEffectSumAggregate: ["id", "appeal"],
  SuperContestEffectMinAggregate: ["id", "appeal"],
  SuperContestEffectMaxAggregate: ["id", "appeal"],
  MachineCountAggregate: ["machine_number", "version_group_id", "item_id", "move_id", "_all"],
  MachineAvgAggregate: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachineSumAggregate: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachineMinAggregate: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachineMaxAggregate: ["machine_number", "version_group_id", "item_id", "move_id"],
  EncounterMethodCount: ["slots", "encounterRates"],
  EncounterMethodCountAggregate: ["id", "identifier", "order", "_all"],
  EncounterMethodAvgAggregate: ["id", "order"],
  EncounterMethodSumAggregate: ["id", "order"],
  EncounterMethodMinAggregate: ["id", "identifier", "order"],
  EncounterMethodMaxAggregate: ["id", "identifier", "order"],
  EncounterSlotCount: ["encounters"],
  EncounterSlotCountAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity", "_all"],
  EncounterSlotAvgAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotSumAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotMinAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotMaxAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterCount: ["conditionValueMap"],
  EncounterCountAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "_all"],
  EncounterAvgAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterSumAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterMinAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterMaxAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterConditionCount: ["values"],
  EncounterConditionCountAggregate: ["id", "identifier", "_all"],
  EncounterConditionAvgAggregate: ["id"],
  EncounterConditionSumAggregate: ["id"],
  EncounterConditionMinAggregate: ["id", "identifier"],
  EncounterConditionMaxAggregate: ["id", "identifier"],
  EncounterConditionValueCount: ["conditionValueMap"],
  EncounterConditionValueCountAggregate: ["id", "encounter_condition_id", "identifier", "is_default", "_all"],
  EncounterConditionValueAvgAggregate: ["id", "encounter_condition_id", "is_default"],
  EncounterConditionValueSumAggregate: ["id", "encounter_condition_id", "is_default"],
  EncounterConditionValueMinAggregate: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueMaxAggregate: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueMapCountAggregate: ["encounter_id", "encounter_condition_value_id", "_all"],
  EncounterConditionValueMapAvgAggregate: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapSumAggregate: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapMinAggregate: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapMaxAggregate: ["encounter_id", "encounter_condition_value_id"],
  MoveMetaCategoryCount: ["meta"],
  MoveMetaCategoryCountAggregate: ["id", "identifier", "_all"],
  MoveMetaCategoryAvgAggregate: ["id"],
  MoveMetaCategorySumAggregate: ["id"],
  MoveMetaCategoryMinAggregate: ["id", "identifier"],
  MoveMetaCategoryMaxAggregate: ["id", "identifier"],
  MoveMetaAilmentCount: ["meta"],
  MoveMetaAilmentCountAggregate: ["id", "identifier", "_all"],
  MoveMetaAilmentAvgAggregate: ["id"],
  MoveMetaAilmentSumAggregate: ["id"],
  MoveMetaAilmentMinAggregate: ["id", "identifier"],
  MoveMetaAilmentMaxAggregate: ["id", "identifier"],
  MoveMetaCount: ["statChanges"],
  MoveMetaCountAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "_all"],
  MoveMetaAvgAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaSumAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaMinAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaMaxAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaStatChangesCountAggregate: ["move_id", "stat_id", "change", "_all"],
  MoveMetaStatChangesAvgAggregate: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesSumAggregate: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesMinAggregate: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesMaxAggregate: ["move_id", "stat_id", "change"],
  MoveFlagCount: ["flagMap"],
  MoveFlagCountAggregate: ["id", "identifier", "_all"],
  MoveFlagAvgAggregate: ["id"],
  MoveFlagSumAggregate: ["id"],
  MoveFlagMinAggregate: ["id", "identifier"],
  MoveFlagMaxAggregate: ["id", "identifier"],
  MoveFlagMapCountAggregate: ["move_id", "move_flag_id", "_all"],
  MoveFlagMapAvgAggregate: ["move_id", "move_flag_id"],
  MoveFlagMapSumAggregate: ["move_id", "move_flag_id"],
  MoveFlagMapMinAggregate: ["move_id", "move_flag_id"],
  MoveFlagMapMaxAggregate: ["move_id", "move_flag_id"],
  MoveBattleStyleCount: ["naturePreferences"],
  MoveBattleStyleCountAggregate: ["id", "identifier", "_all"],
  MoveBattleStyleAvgAggregate: ["id"],
  MoveBattleStyleSumAggregate: ["id"],
  MoveBattleStyleMinAggregate: ["id", "identifier"],
  MoveBattleStyleMaxAggregate: ["id", "identifier"],
  ItemFlagCount: ["flagMap"],
  ItemFlagCountAggregate: ["id", "identifier", "_all"],
  ItemFlagAvgAggregate: ["id"],
  ItemFlagSumAggregate: ["id"],
  ItemFlagMinAggregate: ["id", "identifier"],
  ItemFlagMaxAggregate: ["id", "identifier"],
  ItemFlagMapCountAggregate: ["item_id", "item_flag_id", "_all"],
  ItemFlagMapAvgAggregate: ["item_id", "item_flag_id"],
  ItemFlagMapSumAggregate: ["item_id", "item_flag_id"],
  ItemFlagMapMinAggregate: ["item_id", "item_flag_id"],
  ItemFlagMapMaxAggregate: ["item_id", "item_flag_id"],
  ItemFlingEffectCount: ["items"],
  ItemFlingEffectCountAggregate: ["id", "identifier", "_all"],
  ItemFlingEffectAvgAggregate: ["id"],
  ItemFlingEffectSumAggregate: ["id"],
  ItemFlingEffectMinAggregate: ["id", "identifier"],
  ItemFlingEffectMaxAggregate: ["id", "identifier"],
  BerryCount: ["flavors"],
  BerryCountAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "_all"],
  BerryAvgAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerrySumAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryMinAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryMaxAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryFirmnessCount: ["berries"],
  BerryFirmnessCountAggregate: ["id", "identifier", "_all"],
  BerryFirmnessAvgAggregate: ["id"],
  BerryFirmnessSumAggregate: ["id"],
  BerryFirmnessMinAggregate: ["id", "identifier"],
  BerryFirmnessMaxAggregate: ["id", "identifier"],
  BerryFlavorCountAggregate: ["berry_id", "contest_type_id", "flavor", "_all"],
  BerryFlavorAvgAggregate: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorSumAggregate: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorMinAggregate: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorMaxAggregate: ["berry_id", "contest_type_id", "flavor"],
  CharacteristicCountAggregate: ["id", "stat_id", "gene_mod_5", "_all"],
  CharacteristicAvgAggregate: ["id", "stat_id", "gene_mod_5"],
  CharacteristicSumAggregate: ["id", "stat_id", "gene_mod_5"],
  CharacteristicMinAggregate: ["id", "stat_id", "gene_mod_5"],
  CharacteristicMaxAggregate: ["id", "stat_id", "gene_mod_5"],
  ContestComboCountAggregate: ["first_move_id", "second_move_id", "_all"],
  ContestComboAvgAggregate: ["first_move_id", "second_move_id"],
  ContestComboSumAggregate: ["first_move_id", "second_move_id"],
  ContestComboMinAggregate: ["first_move_id", "second_move_id"],
  ContestComboMaxAggregate: ["first_move_id", "second_move_id"],
  SuperContestComboCountAggregate: ["first_move_id", "second_move_id", "_all"],
  SuperContestComboAvgAggregate: ["first_move_id", "second_move_id"],
  SuperContestComboSumAggregate: ["first_move_id", "second_move_id"],
  SuperContestComboMinAggregate: ["first_move_id", "second_move_id"],
  SuperContestComboMaxAggregate: ["first_move_id", "second_move_id"],
  PokemonMoveMethodCount: ["pokemonMoves", "versionGroups"],
  PokemonMoveMethodCountAggregate: ["id", "identifier", "_all"],
  PokemonMoveMethodAvgAggregate: ["id"],
  PokemonMoveMethodSumAggregate: ["id"],
  PokemonMoveMethodMinAggregate: ["id", "identifier"],
  PokemonMoveMethodMaxAggregate: ["id", "identifier"],
  VersionGroupPokemonMoveMethodCountAggregate: ["version_group_id", "pokemon_move_method_id", "_all"],
  VersionGroupPokemonMoveMethodAvgAggregate: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodSumAggregate: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodMinAggregate: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodMaxAggregate: ["version_group_id", "pokemon_move_method_id"],
  PokemonShapeCount: ["species"],
  PokemonShapeCountAggregate: ["id", "identifier", "_all"],
  PokemonShapeAvgAggregate: ["id"],
  PokemonShapeSumAggregate: ["id"],
  PokemonShapeMinAggregate: ["id", "identifier"],
  PokemonShapeMaxAggregate: ["id", "identifier"],
  PokemonColorCount: ["species"],
  PokemonColorCountAggregate: ["id", "identifier", "_all"],
  PokemonColorAvgAggregate: ["id"],
  PokemonColorSumAggregate: ["id"],
  PokemonColorMinAggregate: ["id", "identifier"],
  PokemonColorMaxAggregate: ["id", "identifier"],
  PokemonHabitatCount: ["species"],
  PokemonHabitatCountAggregate: ["id", "identifier", "_all"],
  PokemonHabitatAvgAggregate: ["id"],
  PokemonHabitatSumAggregate: ["id"],
  PokemonHabitatMinAggregate: ["id", "identifier"],
  PokemonHabitatMaxAggregate: ["id", "identifier"],
  TypeEfficacyCountAggregate: ["damage_type_id", "target_type_id", "damage_factor", "_all"],
  TypeEfficacyAvgAggregate: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacySumAggregate: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyMinAggregate: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyMaxAggregate: ["damage_type_id", "target_type_id", "damage_factor"],
  VersionGroupRegionCountAggregate: ["version_group_id", "region_id", "_all"],
  VersionGroupRegionAvgAggregate: ["version_group_id", "region_id"],
  VersionGroupRegionSumAggregate: ["version_group_id", "region_id"],
  VersionGroupRegionMinAggregate: ["version_group_id", "region_id"],
  VersionGroupRegionMaxAggregate: ["version_group_id", "region_id"],
  PokedexVersionGroupCountAggregate: ["pokedex_id", "version_group_id", "_all"],
  PokedexVersionGroupAvgAggregate: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupSumAggregate: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupMinAggregate: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupMaxAggregate: ["pokedex_id", "version_group_id"],
  PokemonAbilityCountAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot", "_all"],
  PokemonAbilityAvgAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitySumAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilityMinAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilityMaxAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMoveCountAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "_all"],
  PokemonMoveAvgAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMoveSumAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMoveMinAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMoveMaxAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStatCountAggregate: ["pokemon_id", "stat_id", "base_stat", "effort", "_all"],
  PokemonStatAvgAggregate: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatSumAggregate: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatMinAggregate: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatMaxAggregate: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypeCountAggregate: ["pokemon_id", "type_id", "slot", "_all"],
  PokemonTypeAvgAggregate: ["pokemon_id", "type_id", "slot"],
  PokemonTypeSumAggregate: ["pokemon_id", "type_id", "slot"],
  PokemonTypeMinAggregate: ["pokemon_id", "type_id", "slot"],
  PokemonTypeMaxAggregate: ["pokemon_id", "type_id", "slot"],
  PokemonEggGroupCountAggregate: ["species_id", "egg_group_id", "_all"],
  PokemonEggGroupAvgAggregate: ["species_id", "egg_group_id"],
  PokemonEggGroupSumAggregate: ["species_id", "egg_group_id"],
  PokemonEggGroupMinAggregate: ["species_id", "egg_group_id"],
  PokemonEggGroupMaxAggregate: ["species_id", "egg_group_id"],
  PokemonItemCountAggregate: ["pokemon_id", "version_id", "item_id", "rarity", "_all"],
  PokemonItemAvgAggregate: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemSumAggregate: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemMinAggregate: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemMaxAggregate: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndexCountAggregate: ["pokemon_id", "version_id", "game_index", "_all"],
  PokemonGameIndexAvgAggregate: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndexSumAggregate: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndexMinAggregate: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndexMaxAggregate: ["pokemon_id", "version_id", "game_index"],
  PokemonDexNumberCountAggregate: ["species_id", "pokedex_id", "pokedex_number", "_all"],
  PokemonDexNumberAvgAggregate: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumberSumAggregate: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumberMinAggregate: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumberMaxAggregate: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonFormGenerationCountAggregate: ["pokemon_form_id", "generation_id", "game_index", "_all"],
  PokemonFormGenerationAvgAggregate: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationSumAggregate: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationMinAggregate: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationMaxAggregate: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypeCountAggregate: ["pokemon_form_id", "type_id", "slot", "_all"],
  PokemonFormTypeAvgAggregate: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypeSumAggregate: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypeMinAggregate: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypeMaxAggregate: ["pokemon_form_id", "type_id", "slot"],
  TypeGameIndexCountAggregate: ["type_id", "generation_id", "game_index", "_all"],
  TypeGameIndexAvgAggregate: ["type_id", "generation_id", "game_index"],
  TypeGameIndexSumAggregate: ["type_id", "generation_id", "game_index"],
  TypeGameIndexMinAggregate: ["type_id", "generation_id", "game_index"],
  TypeGameIndexMaxAggregate: ["type_id", "generation_id", "game_index"],
  ItemGameIndexCountAggregate: ["item_id", "generation_id", "game_index", "_all"],
  ItemGameIndexAvgAggregate: ["item_id", "generation_id", "game_index"],
  ItemGameIndexSumAggregate: ["item_id", "generation_id", "game_index"],
  ItemGameIndexMinAggregate: ["item_id", "generation_id", "game_index"],
  ItemGameIndexMaxAggregate: ["item_id", "generation_id", "game_index"],
  LocationGameIndexCountAggregate: ["location_id", "generation_id", "game_index", "_all"],
  LocationGameIndexAvgAggregate: ["location_id", "generation_id", "game_index"],
  LocationGameIndexSumAggregate: ["location_id", "generation_id", "game_index"],
  LocationGameIndexMinAggregate: ["location_id", "generation_id", "game_index"],
  LocationGameIndexMaxAggregate: ["location_id", "generation_id", "game_index"],
  LocationAreaEncounterRateCountAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate", "_all"],
  LocationAreaEncounterRateAvgAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRateSumAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRateMinAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRateMaxAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  NatureBattleStylePreferenceCountAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "_all"],
  NatureBattleStylePreferenceAvgAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferenceSumAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferenceMinAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferenceMaxAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"]};

type OutputTypesNames = keyof typeof outputTypes;

type OutputTypeFieldNames<TOutput extends OutputTypesNames> = Exclude<
  keyof typeof outputTypes[TOutput]["prototype"],
  number | symbol
>;

type OutputTypeFieldsConfig<
  TOutput extends OutputTypesNames
> = FieldsConfig<OutputTypeFieldNames<TOutput>>;

export type OutputTypeConfig<TOutput extends OutputTypesNames> = {
  class?: ClassDecorator[];
  fields?: OutputTypeFieldsConfig<TOutput>;
};

export type OutputTypesEnhanceMap = {
  [TOutput in OutputTypesNames]?: OutputTypeConfig<TOutput>;
};

export function applyOutputTypesEnhanceMap(
  outputTypesEnhanceMap: OutputTypesEnhanceMap,
) {
  for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
    const outputTypeName = outputTypeEnhanceMapKey as keyof typeof outputTypesEnhanceMap;
    const typeConfig = outputTypesEnhanceMap[outputTypeName]!;
    const typeClass = outputTypes[outputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      outputsInfo[outputTypeName as keyof typeof outputsInfo],
    );
  }
}

const inputsInfo = {
  PokemonWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonOrderByWithRelationInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonOrderByWithAggregationInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSpeciesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesOrderByWithRelationInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesOrderByWithAggregationInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonSpeciesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonFormWhereInput: ["AND", "OR", "NOT", "id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  PokemonFormOrderByWithRelationInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  PokemonFormWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  PokemonFormOrderByWithAggregationInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonFormScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  MoveWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveOrderByWithRelationInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveOrderByWithAggregationInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "_count", "_avg", "_max", "_min", "_sum"],
  MoveScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveEffectWhereInput: ["AND", "OR", "NOT", "id", "moves"],
  MoveEffectOrderByWithRelationInput: ["id", "moves"],
  MoveEffectWhereUniqueInput: ["id", "AND", "OR", "NOT", "moves"],
  MoveEffectOrderByWithAggregationInput: ["id", "_count", "_avg", "_max", "_min", "_sum"],
  MoveEffectScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id"],
  MoveTargetWhereInput: ["AND", "OR", "NOT", "id", "identifier", "moves"],
  MoveTargetOrderByWithRelationInput: ["id", "identifier", "moves"],
  MoveTargetWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "moves"],
  MoveTargetOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveTargetScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  MoveDamageClassWhereInput: ["AND", "OR", "NOT", "id", "identifier", "moves", "types"],
  MoveDamageClassOrderByWithRelationInput: ["id", "identifier", "moves", "types"],
  MoveDamageClassWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "moves", "types"],
  MoveDamageClassOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveDamageClassScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  TypeWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "damage_class_id", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeOrderByWithRelationInput: ["id", "identifier", "generation_id", "damage_class_id", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "damage_class_id", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeOrderByWithAggregationInput: ["id", "identifier", "generation_id", "damage_class_id", "_count", "_avg", "_max", "_min", "_sum"],
  TypeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "damage_class_id"],
  AbilityWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "is_main_series", "generation", "pokemonAbilities"],
  AbilityOrderByWithRelationInput: ["id", "identifier", "generation_id", "is_main_series", "generation", "pokemonAbilities"],
  AbilityWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "is_main_series", "generation", "pokemonAbilities"],
  AbilityOrderByWithAggregationInput: ["id", "identifier", "generation_id", "is_main_series", "_count", "_avg", "_max", "_min", "_sum"],
  AbilityScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "is_main_series"],
  ItemWhereInput: ["AND", "OR", "NOT", "id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemOrderByWithRelationInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemOrderByWithAggregationInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "_count", "_avg", "_max", "_min", "_sum"],
  ItemScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemCategoryWhereInput: ["AND", "OR", "NOT", "id", "pocket_id", "identifier", "pocket", "items"],
  ItemCategoryOrderByWithRelationInput: ["id", "pocket_id", "identifier", "pocket", "items"],
  ItemCategoryWhereUniqueInput: ["id", "AND", "OR", "NOT", "pocket_id", "identifier", "pocket", "items"],
  ItemCategoryOrderByWithAggregationInput: ["id", "pocket_id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ItemCategoryScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "pocket_id", "identifier"],
  ItemPocketWhereInput: ["AND", "OR", "NOT", "id", "identifier", "categories"],
  ItemPocketOrderByWithRelationInput: ["id", "identifier", "categories"],
  ItemPocketWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "categories"],
  ItemPocketOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ItemPocketScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  StatWhereInput: ["AND", "OR", "NOT", "id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatOrderByWithRelationInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatWhereUniqueInput: ["id", "AND", "OR", "NOT", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatOrderByWithAggregationInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  StatScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  GenerationWhereInput: ["AND", "OR", "NOT", "id", "main_region_id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationOrderByWithRelationInput: ["id", "main_region_id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationWhereUniqueInput: ["id", "AND", "OR", "NOT", "main_region_id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationOrderByWithAggregationInput: ["id", "main_region_id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  GenerationScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "main_region_id", "identifier"],
  VersionGroupWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupOrderByWithRelationInput: ["id", "identifier", "generation_id", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupOrderByWithAggregationInput: ["id", "identifier", "generation_id", "order", "_count", "_avg", "_max", "_min", "_sum"],
  VersionGroupScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "order"],
  VersionWhereInput: ["AND", "OR", "NOT", "id", "version_group_id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionOrderByWithRelationInput: ["id", "version_group_id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionWhereUniqueInput: ["id", "AND", "OR", "NOT", "version_group_id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionOrderByWithAggregationInput: ["id", "version_group_id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  VersionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "version_group_id", "identifier"],
  RegionWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  RegionOrderByWithRelationInput: ["id", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  RegionWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  RegionOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  RegionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  LocationWhereInput: ["AND", "OR", "NOT", "id", "region_id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationOrderByWithRelationInput: ["id", "region_id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationWhereUniqueInput: ["id", "AND", "OR", "NOT", "region_id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationOrderByWithAggregationInput: ["id", "region_id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  LocationScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "region_id", "identifier"],
  LocationAreaWhereInput: ["AND", "OR", "NOT", "id", "location_id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  LocationAreaOrderByWithRelationInput: ["id", "location_id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  LocationAreaWhereUniqueInput: ["id", "AND", "OR", "NOT", "location_id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  LocationAreaOrderByWithAggregationInput: ["id", "location_id", "game_index", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  LocationAreaScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "location_id", "game_index", "identifier"],
  PokedexWhereInput: ["AND", "OR", "NOT", "id", "region_id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  PokedexOrderByWithRelationInput: ["id", "region_id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  PokedexWhereUniqueInput: ["id", "AND", "OR", "NOT", "region_id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  PokedexOrderByWithAggregationInput: ["id", "region_id", "identifier", "is_main_series", "_count", "_avg", "_max", "_min", "_sum"],
  PokedexScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "region_id", "identifier", "is_main_series"],
  EvolutionChainWhereInput: ["AND", "OR", "NOT", "id", "baby_trigger_item_id", "babyTriggerItem", "species"],
  EvolutionChainOrderByWithRelationInput: ["id", "baby_trigger_item_id", "babyTriggerItem", "species"],
  EvolutionChainWhereUniqueInput: ["id", "AND", "OR", "NOT", "baby_trigger_item_id", "babyTriggerItem", "species"],
  EvolutionChainOrderByWithAggregationInput: ["id", "baby_trigger_item_id", "_count", "_avg", "_max", "_min", "_sum"],
  EvolutionChainScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "baby_trigger_item_id"],
  EvolutionTriggerWhereInput: ["AND", "OR", "NOT", "id", "identifier", "evolution"],
  EvolutionTriggerOrderByWithRelationInput: ["id", "identifier", "evolution"],
  EvolutionTriggerWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "evolution"],
  EvolutionTriggerOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  EvolutionTriggerScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  PokemonEvolutionWhereInput: ["AND", "OR", "NOT", "id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionOrderByWithRelationInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionWhereUniqueInput: ["id", "AND", "OR", "NOT", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionOrderByWithAggregationInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonEvolutionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  GrowthRatesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "formula", "species", "experience"],
  GrowthRatesOrderByWithRelationInput: ["id", "identifier", "formula", "species", "experience"],
  GrowthRatesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "formula", "species", "experience"],
  GrowthRatesOrderByWithAggregationInput: ["id", "identifier", "formula", "_count", "_avg", "_max", "_min", "_sum"],
  GrowthRatesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "formula"],
  ExperienceWhereInput: ["AND", "OR", "NOT", "growth_rate_id", "level", "experience", "growthRate"],
  ExperienceOrderByWithRelationInput: ["growth_rate_id", "level", "experience", "growthRate"],
  ExperienceWhereUniqueInput: ["growth_rate_id_level", "AND", "OR", "NOT", "growth_rate_id", "level", "experience", "growthRate"],
  ExperienceOrderByWithAggregationInput: ["growth_rate_id", "level", "experience", "_count", "_avg", "_max", "_min", "_sum"],
  ExperienceScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "growth_rate_id", "level", "experience"],
  GenderWhereInput: ["AND", "OR", "NOT", "id", "identifier", "evolution"],
  GenderOrderByWithRelationInput: ["id", "identifier", "evolution"],
  GenderWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "evolution"],
  GenderOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  GenderScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  LanguageWhereInput: ["AND", "OR", "NOT", "id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguageOrderByWithRelationInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguageWhereUniqueInput: ["id", "AND", "OR", "NOT", "iso639", "iso3166", "identifier", "official", "order"],
  LanguageOrderByWithAggregationInput: ["id", "iso639", "iso3166", "identifier", "official", "order", "_count", "_avg", "_max", "_min", "_sum"],
  LanguageScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "iso639", "iso3166", "identifier", "official", "order"],
  EggGroupWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species"],
  EggGroupOrderByWithRelationInput: ["id", "identifier", "species"],
  EggGroupWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species"],
  EggGroupOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  EggGroupScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  NatureWhereInput: ["AND", "OR", "NOT", "id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NatureOrderByWithRelationInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NatureWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NatureOrderByWithAggregationInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  NatureScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  ContestTypeWhereInput: ["AND", "OR", "NOT", "id", "identifier", "moves", "berryFlavors"],
  ContestTypeOrderByWithRelationInput: ["id", "identifier", "moves", "berryFlavors"],
  ContestTypeWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "moves", "berryFlavors"],
  ContestTypeOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ContestTypeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  ContestEffectWhereInput: ["AND", "OR", "NOT", "id", "appeal", "jam", "moves"],
  ContestEffectOrderByWithRelationInput: ["id", "appeal", "jam", "moves"],
  ContestEffectWhereUniqueInput: ["id", "AND", "OR", "NOT", "appeal", "jam", "moves"],
  ContestEffectOrderByWithAggregationInput: ["id", "appeal", "jam", "_count", "_avg", "_max", "_min", "_sum"],
  ContestEffectScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "appeal", "jam"],
  SuperContestEffectWhereInput: ["AND", "OR", "NOT", "id", "appeal", "moves"],
  SuperContestEffectOrderByWithRelationInput: ["id", "appeal", "moves"],
  SuperContestEffectWhereUniqueInput: ["id", "AND", "OR", "NOT", "appeal", "moves"],
  SuperContestEffectOrderByWithAggregationInput: ["id", "appeal", "_count", "_avg", "_max", "_min", "_sum"],
  SuperContestEffectScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "appeal"],
  MachineWhereInput: ["AND", "OR", "NOT", "machine_number", "version_group_id", "item_id", "move_id", "versionGroup", "item", "move"],
  MachineOrderByWithRelationInput: ["machine_number", "version_group_id", "item_id", "move_id", "versionGroup", "item", "move"],
  MachineWhereUniqueInput: ["machine_number_version_group_id", "AND", "OR", "NOT", "machine_number", "version_group_id", "item_id", "move_id", "versionGroup", "item", "move"],
  MachineOrderByWithAggregationInput: ["machine_number", "version_group_id", "item_id", "move_id", "_count", "_avg", "_max", "_min", "_sum"],
  MachineScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "machine_number", "version_group_id", "item_id", "move_id"],
  EncounterMethodWhereInput: ["AND", "OR", "NOT", "id", "identifier", "order", "slots", "encounterRates"],
  EncounterMethodOrderByWithRelationInput: ["id", "identifier", "order", "slots", "encounterRates"],
  EncounterMethodWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "order", "slots", "encounterRates"],
  EncounterMethodOrderByWithAggregationInput: ["id", "identifier", "order", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterMethodScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "order"],
  EncounterSlotWhereInput: ["AND", "OR", "NOT", "id", "version_group_id", "encounter_method_id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterSlotOrderByWithRelationInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterSlotWhereUniqueInput: ["id", "AND", "OR", "NOT", "version_group_id", "encounter_method_id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterSlotOrderByWithAggregationInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterSlotScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterWhereInput: ["AND", "OR", "NOT", "id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterOrderByWithRelationInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterWhereUniqueInput: ["id", "AND", "OR", "NOT", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterOrderByWithAggregationInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterConditionWhereInput: ["AND", "OR", "NOT", "id", "identifier", "values"],
  EncounterConditionOrderByWithRelationInput: ["id", "identifier", "values"],
  EncounterConditionWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "values"],
  EncounterConditionOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterConditionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  EncounterConditionValueWhereInput: ["AND", "OR", "NOT", "id", "encounter_condition_id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValueOrderByWithRelationInput: ["id", "encounter_condition_id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValueWhereUniqueInput: ["id", "AND", "OR", "NOT", "encounter_condition_id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValueOrderByWithAggregationInput: ["id", "encounter_condition_id", "identifier", "is_default", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterConditionValueScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueMapWhereInput: ["AND", "OR", "NOT", "encounter_id", "encounter_condition_value_id", "encounter", "conditionValue"],
  EncounterConditionValueMapOrderByWithRelationInput: ["encounter_id", "encounter_condition_value_id", "encounter", "conditionValue"],
  EncounterConditionValueMapWhereUniqueInput: ["encounter_id", "AND", "OR", "NOT", "encounter_condition_value_id", "encounter", "conditionValue"],
  EncounterConditionValueMapOrderByWithAggregationInput: ["encounter_id", "encounter_condition_value_id", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterConditionValueMapScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "encounter_id", "encounter_condition_value_id"],
  MoveMetaCategoryWhereInput: ["AND", "OR", "NOT", "id", "identifier", "meta"],
  MoveMetaCategoryOrderByWithRelationInput: ["id", "identifier", "meta"],
  MoveMetaCategoryWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "meta"],
  MoveMetaCategoryOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveMetaCategoryScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  MoveMetaAilmentWhereInput: ["AND", "OR", "NOT", "id", "identifier", "meta"],
  MoveMetaAilmentOrderByWithRelationInput: ["id", "identifier", "meta"],
  MoveMetaAilmentWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "meta"],
  MoveMetaAilmentOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveMetaAilmentScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  MoveMetaWhereInput: ["AND", "OR", "NOT", "move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaOrderByWithRelationInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaWhereUniqueInput: ["move_id", "AND", "OR", "NOT", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaOrderByWithAggregationInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "_count", "_avg", "_max", "_min", "_sum"],
  MoveMetaScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaStatChangesWhereInput: ["AND", "OR", "NOT", "move_id", "stat_id", "change", "stat", "meta"],
  MoveMetaStatChangesOrderByWithRelationInput: ["move_id", "stat_id", "change", "stat", "meta"],
  MoveMetaStatChangesWhereUniqueInput: ["move_id_stat_id", "AND", "OR", "NOT", "move_id", "stat_id", "change", "stat", "meta"],
  MoveMetaStatChangesOrderByWithAggregationInput: ["move_id", "stat_id", "change", "_count", "_avg", "_max", "_min", "_sum"],
  MoveMetaStatChangesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "move_id", "stat_id", "change"],
  MoveFlagWhereInput: ["AND", "OR", "NOT", "id", "identifier", "flagMap"],
  MoveFlagOrderByWithRelationInput: ["id", "identifier", "flagMap"],
  MoveFlagWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "flagMap"],
  MoveFlagOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveFlagScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  MoveFlagMapWhereInput: ["AND", "OR", "NOT", "move_id", "move_flag_id", "move", "flag"],
  MoveFlagMapOrderByWithRelationInput: ["move_id", "move_flag_id", "move", "flag"],
  MoveFlagMapWhereUniqueInput: ["move_id", "AND", "OR", "NOT", "move_flag_id", "move", "flag"],
  MoveFlagMapOrderByWithAggregationInput: ["move_id", "move_flag_id", "_count", "_avg", "_max", "_min", "_sum"],
  MoveFlagMapScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "move_id", "move_flag_id"],
  MoveBattleStyleWhereInput: ["AND", "OR", "NOT", "id", "identifier", "naturePreferences"],
  MoveBattleStyleOrderByWithRelationInput: ["id", "identifier", "naturePreferences"],
  MoveBattleStyleWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "naturePreferences"],
  MoveBattleStyleOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveBattleStyleScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  ItemFlagWhereInput: ["AND", "OR", "NOT", "id", "identifier", "flagMap"],
  ItemFlagOrderByWithRelationInput: ["id", "identifier", "flagMap"],
  ItemFlagWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "flagMap"],
  ItemFlagOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ItemFlagScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  ItemFlagMapWhereInput: ["AND", "OR", "NOT", "item_id", "item_flag_id", "item", "flag"],
  ItemFlagMapOrderByWithRelationInput: ["item_id", "item_flag_id", "item", "flag"],
  ItemFlagMapWhereUniqueInput: ["item_id", "AND", "OR", "NOT", "item_flag_id", "item", "flag"],
  ItemFlagMapOrderByWithAggregationInput: ["item_id", "item_flag_id", "_count", "_avg", "_max", "_min", "_sum"],
  ItemFlagMapScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "item_id", "item_flag_id"],
  ItemFlingEffectWhereInput: ["AND", "OR", "NOT", "id", "identifier", "items"],
  ItemFlingEffectOrderByWithRelationInput: ["id", "identifier", "items"],
  ItemFlingEffectWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "items"],
  ItemFlingEffectOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ItemFlingEffectScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  BerryWhereInput: ["AND", "OR", "NOT", "id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerryOrderByWithRelationInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerryWhereUniqueInput: ["id", "AND", "OR", "NOT", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerryOrderByWithAggregationInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "_count", "_avg", "_max", "_min", "_sum"],
  BerryScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryFirmnessWhereInput: ["AND", "OR", "NOT", "id", "identifier", "berries"],
  BerryFirmnessOrderByWithRelationInput: ["id", "identifier", "berries"],
  BerryFirmnessWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "berries"],
  BerryFirmnessOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  BerryFirmnessScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  BerryFlavorWhereInput: ["AND", "OR", "NOT", "berry_id", "contest_type_id", "flavor", "berry", "contestType", "type"],
  BerryFlavorOrderByWithRelationInput: ["berry_id", "contest_type_id", "flavor", "berry", "contestType", "type"],
  BerryFlavorWhereUniqueInput: ["berry_id_contest_type_id", "AND", "OR", "NOT", "berry_id", "contest_type_id", "flavor", "berry", "contestType", "type"],
  BerryFlavorOrderByWithAggregationInput: ["berry_id", "contest_type_id", "flavor", "_count", "_avg", "_max", "_min", "_sum"],
  BerryFlavorScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "berry_id", "contest_type_id", "flavor"],
  CharacteristicWhereInput: ["AND", "OR", "NOT", "id", "stat_id", "gene_mod_5", "stat"],
  CharacteristicOrderByWithRelationInput: ["id", "stat_id", "gene_mod_5", "stat"],
  CharacteristicWhereUniqueInput: ["id", "AND", "OR", "NOT", "stat_id", "gene_mod_5", "stat"],
  CharacteristicOrderByWithAggregationInput: ["id", "stat_id", "gene_mod_5", "_count", "_avg", "_max", "_min", "_sum"],
  CharacteristicScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "stat_id", "gene_mod_5"],
  ContestComboWhereInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id", "firstMove", "secondMove"],
  ContestComboOrderByWithRelationInput: ["first_move_id", "second_move_id", "firstMove", "secondMove"],
  ContestComboWhereUniqueInput: ["first_move_id", "AND", "OR", "NOT", "second_move_id", "firstMove", "secondMove"],
  ContestComboOrderByWithAggregationInput: ["first_move_id", "second_move_id", "_count", "_avg", "_max", "_min", "_sum"],
  ContestComboScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id"],
  SuperContestComboWhereInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id", "firstMove", "secondMove"],
  SuperContestComboOrderByWithRelationInput: ["first_move_id", "second_move_id", "firstMove", "secondMove"],
  SuperContestComboWhereUniqueInput: ["first_move_id", "AND", "OR", "NOT", "second_move_id", "firstMove", "secondMove"],
  SuperContestComboOrderByWithAggregationInput: ["first_move_id", "second_move_id", "_count", "_avg", "_max", "_min", "_sum"],
  SuperContestComboScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id"],
  PokemonMoveMethodWhereInput: ["AND", "OR", "NOT", "id", "identifier", "pokemonMoves", "versionGroups"],
  PokemonMoveMethodOrderByWithRelationInput: ["id", "identifier", "pokemonMoves", "versionGroups"],
  PokemonMoveMethodWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "pokemonMoves", "versionGroups"],
  PokemonMoveMethodOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonMoveMethodScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  VersionGroupPokemonMoveMethodWhereInput: ["AND", "OR", "NOT", "version_group_id", "pokemon_move_method_id", "versionGroup", "moveMethod"],
  VersionGroupPokemonMoveMethodOrderByWithRelationInput: ["version_group_id", "pokemon_move_method_id", "versionGroup", "moveMethod"],
  VersionGroupPokemonMoveMethodWhereUniqueInput: ["version_group_id", "AND", "OR", "NOT", "pokemon_move_method_id", "versionGroup", "moveMethod"],
  VersionGroupPokemonMoveMethodOrderByWithAggregationInput: ["version_group_id", "pokemon_move_method_id", "_count", "_avg", "_max", "_min", "_sum"],
  VersionGroupPokemonMoveMethodScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "version_group_id", "pokemon_move_method_id"],
  PokemonShapeWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species"],
  PokemonShapeOrderByWithRelationInput: ["id", "identifier", "species"],
  PokemonShapeWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species"],
  PokemonShapeOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonShapeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  PokemonColorWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species"],
  PokemonColorOrderByWithRelationInput: ["id", "identifier", "species"],
  PokemonColorWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species"],
  PokemonColorOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonColorScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  PokemonHabitatWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species"],
  PokemonHabitatOrderByWithRelationInput: ["id", "identifier", "species"],
  PokemonHabitatWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species"],
  PokemonHabitatOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonHabitatScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  TypeEfficacyWhereInput: ["AND", "OR", "NOT", "damage_type_id", "target_type_id", "damage_factor", "damageType", "targetType"],
  TypeEfficacyOrderByWithRelationInput: ["damage_type_id", "target_type_id", "damage_factor", "damageType", "targetType"],
  TypeEfficacyWhereUniqueInput: ["damage_type_id_target_type_id", "AND", "OR", "NOT", "damage_type_id", "target_type_id", "damage_factor", "damageType", "targetType"],
  TypeEfficacyOrderByWithAggregationInput: ["damage_type_id", "target_type_id", "damage_factor", "_count", "_avg", "_max", "_min", "_sum"],
  TypeEfficacyScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "damage_type_id", "target_type_id", "damage_factor"],
  VersionGroupRegionWhereInput: ["AND", "OR", "NOT", "version_group_id", "region_id", "versionGroup", "region"],
  VersionGroupRegionOrderByWithRelationInput: ["version_group_id", "region_id", "versionGroup", "region"],
  VersionGroupRegionWhereUniqueInput: ["version_group_id", "AND", "OR", "NOT", "region_id", "versionGroup", "region"],
  VersionGroupRegionOrderByWithAggregationInput: ["version_group_id", "region_id", "_count", "_avg", "_max", "_min", "_sum"],
  VersionGroupRegionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "version_group_id", "region_id"],
  PokedexVersionGroupWhereInput: ["AND", "OR", "NOT", "pokedex_id", "version_group_id", "pokedex", "versionGroup"],
  PokedexVersionGroupOrderByWithRelationInput: ["pokedex_id", "version_group_id", "pokedex", "versionGroup"],
  PokedexVersionGroupWhereUniqueInput: ["pokedex_id", "AND", "OR", "NOT", "version_group_id", "pokedex", "versionGroup"],
  PokedexVersionGroupOrderByWithAggregationInput: ["pokedex_id", "version_group_id", "_count", "_avg", "_max", "_min", "_sum"],
  PokedexVersionGroupScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokedex_id", "version_group_id"],
  PokemonAbilityWhereInput: ["AND", "OR", "NOT", "pokemon_id", "ability_id", "is_hidden", "slot", "pokemon", "ability"],
  PokemonAbilityOrderByWithRelationInput: ["pokemon_id", "ability_id", "is_hidden", "slot", "pokemon", "ability"],
  PokemonAbilityWhereUniqueInput: ["pokemon_id_ability_id", "AND", "OR", "NOT", "pokemon_id", "ability_id", "is_hidden", "slot", "pokemon", "ability"],
  PokemonAbilityOrderByWithAggregationInput: ["pokemon_id", "ability_id", "is_hidden", "slot", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonAbilityScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMoveWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonMoveOrderByWithRelationInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonMoveWhereUniqueInput: ["pokemon_id_version_group_id_move_id_pokemon_move_method_id", "AND", "OR", "NOT", "pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonMoveOrderByWithAggregationInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonMoveScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStatWhereInput: ["AND", "OR", "NOT", "pokemon_id", "stat_id", "base_stat", "effort", "pokemon", "stat"],
  PokemonStatOrderByWithRelationInput: ["pokemon_id", "stat_id", "base_stat", "effort", "pokemon", "stat"],
  PokemonStatWhereUniqueInput: ["pokemon_id_stat_id", "AND", "OR", "NOT", "pokemon_id", "stat_id", "base_stat", "effort", "pokemon", "stat"],
  PokemonStatOrderByWithAggregationInput: ["pokemon_id", "stat_id", "base_stat", "effort", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonStatScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypeWhereInput: ["AND", "OR", "NOT", "pokemon_id", "type_id", "slot", "pokemon", "type"],
  PokemonTypeOrderByWithRelationInput: ["pokemon_id", "type_id", "slot", "pokemon", "type"],
  PokemonTypeWhereUniqueInput: ["pokemon_id_type_id", "AND", "OR", "NOT", "pokemon_id", "type_id", "slot", "pokemon", "type"],
  PokemonTypeOrderByWithAggregationInput: ["pokemon_id", "type_id", "slot", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonTypeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "type_id", "slot"],
  PokemonEggGroupWhereInput: ["AND", "OR", "NOT", "species_id", "egg_group_id", "species", "eggGroup"],
  PokemonEggGroupOrderByWithRelationInput: ["species_id", "egg_group_id", "species", "eggGroup"],
  PokemonEggGroupWhereUniqueInput: ["species_id_egg_group_id", "AND", "OR", "NOT", "species_id", "egg_group_id", "species", "eggGroup"],
  PokemonEggGroupOrderByWithAggregationInput: ["species_id", "egg_group_id", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonEggGroupScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "species_id", "egg_group_id"],
  PokemonItemWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "item_id", "rarity", "pokemon", "version", "item"],
  PokemonItemOrderByWithRelationInput: ["pokemon_id", "version_id", "item_id", "rarity", "pokemon", "version", "item"],
  PokemonItemWhereUniqueInput: ["pokemon_id_version_id_item_id", "AND", "OR", "NOT", "pokemon_id", "version_id", "item_id", "rarity", "pokemon", "version", "item"],
  PokemonItemOrderByWithAggregationInput: ["pokemon_id", "version_id", "item_id", "rarity", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonItemScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndexWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "game_index", "pokemon", "version"],
  PokemonGameIndexOrderByWithRelationInput: ["pokemon_id", "version_id", "game_index", "pokemon", "version"],
  PokemonGameIndexWhereUniqueInput: ["pokemon_id_version_id", "AND", "OR", "NOT", "pokemon_id", "version_id", "game_index", "pokemon", "version"],
  PokemonGameIndexOrderByWithAggregationInput: ["pokemon_id", "version_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonGameIndexScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "game_index"],
  PokemonDexNumberWhereInput: ["AND", "OR", "NOT", "species_id", "pokedex_id", "pokedex_number", "species", "pokedex"],
  PokemonDexNumberOrderByWithRelationInput: ["species_id", "pokedex_id", "pokedex_number", "species", "pokedex"],
  PokemonDexNumberWhereUniqueInput: ["species_id_pokedex_id", "AND", "OR", "NOT", "species_id", "pokedex_id", "pokedex_number", "species", "pokedex"],
  PokemonDexNumberOrderByWithAggregationInput: ["species_id", "pokedex_id", "pokedex_number", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonDexNumberScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "species_id", "pokedex_id", "pokedex_number"],
  PokemonFormGenerationWhereInput: ["AND", "OR", "NOT", "pokemon_form_id", "generation_id", "game_index", "pokemonForm", "generation"],
  PokemonFormGenerationOrderByWithRelationInput: ["pokemon_form_id", "generation_id", "game_index", "pokemonForm", "generation"],
  PokemonFormGenerationWhereUniqueInput: ["pokemon_form_id_generation_id", "AND", "OR", "NOT", "pokemon_form_id", "generation_id", "game_index", "pokemonForm", "generation"],
  PokemonFormGenerationOrderByWithAggregationInput: ["pokemon_form_id", "generation_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonFormGenerationScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypeWhereInput: ["AND", "OR", "NOT", "pokemon_form_id", "type_id", "slot", "pokemonForm", "type"],
  PokemonFormTypeOrderByWithRelationInput: ["pokemon_form_id", "type_id", "slot", "pokemonForm", "type"],
  PokemonFormTypeWhereUniqueInput: ["pokemon_form_id_type_id", "AND", "OR", "NOT", "pokemon_form_id", "type_id", "slot", "pokemonForm", "type"],
  PokemonFormTypeOrderByWithAggregationInput: ["pokemon_form_id", "type_id", "slot", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonFormTypeScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_form_id", "type_id", "slot"],
  TypeGameIndexWhereInput: ["AND", "OR", "NOT", "type_id", "generation_id", "game_index", "type", "generation"],
  TypeGameIndexOrderByWithRelationInput: ["type_id", "generation_id", "game_index", "type", "generation"],
  TypeGameIndexWhereUniqueInput: ["type_id_generation_id", "AND", "OR", "NOT", "type_id", "generation_id", "game_index", "type", "generation"],
  TypeGameIndexOrderByWithAggregationInput: ["type_id", "generation_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  TypeGameIndexScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "type_id", "generation_id", "game_index"],
  ItemGameIndexWhereInput: ["AND", "OR", "NOT", "item_id", "generation_id", "game_index", "item", "generation"],
  ItemGameIndexOrderByWithRelationInput: ["item_id", "generation_id", "game_index", "item", "generation"],
  ItemGameIndexWhereUniqueInput: ["item_id_generation_id", "AND", "OR", "NOT", "item_id", "generation_id", "game_index", "item", "generation"],
  ItemGameIndexOrderByWithAggregationInput: ["item_id", "generation_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  ItemGameIndexScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "item_id", "generation_id", "game_index"],
  LocationGameIndexWhereInput: ["AND", "OR", "NOT", "location_id", "generation_id", "game_index", "location", "generation"],
  LocationGameIndexOrderByWithRelationInput: ["location_id", "generation_id", "game_index", "location", "generation"],
  LocationGameIndexWhereUniqueInput: ["location_id_generation_id", "AND", "OR", "NOT", "location_id", "generation_id", "game_index", "location", "generation"],
  LocationGameIndexOrderByWithAggregationInput: ["location_id", "generation_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  LocationGameIndexScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "location_id", "generation_id", "game_index"],
  LocationAreaEncounterRateWhereInput: ["AND", "OR", "NOT", "location_area_id", "encounter_method_id", "version_id", "rate", "locationArea", "encounterMethod", "version"],
  LocationAreaEncounterRateOrderByWithRelationInput: ["location_area_id", "encounter_method_id", "version_id", "rate", "locationArea", "encounterMethod", "version"],
  LocationAreaEncounterRateWhereUniqueInput: ["location_area_id_encounter_method_id_version_id", "AND", "OR", "NOT", "location_area_id", "encounter_method_id", "version_id", "rate", "locationArea", "encounterMethod", "version"],
  LocationAreaEncounterRateOrderByWithAggregationInput: ["location_area_id", "encounter_method_id", "version_id", "rate", "_count", "_avg", "_max", "_min", "_sum"],
  LocationAreaEncounterRateScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "location_area_id", "encounter_method_id", "version_id", "rate"],
  NatureBattleStylePreferenceWhereInput: ["AND", "OR", "NOT", "nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  NatureBattleStylePreferenceOrderByWithRelationInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  NatureBattleStylePreferenceWhereUniqueInput: ["nature_id", "AND", "OR", "NOT", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  NatureBattleStylePreferenceOrderByWithAggregationInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "_count", "_avg", "_max", "_min", "_sum"],
  NatureBattleStylePreferenceScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  PokemonCreateInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonUpdateInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonSpeciesCreateInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesUpdateInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonFormCreateInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  PokemonFormUpdateInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  MoveCreateInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveUpdateInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveEffectCreateInput: ["id", "moves"],
  MoveEffectUpdateInput: ["id", "moves"],
  MoveTargetCreateInput: ["id", "identifier", "moves"],
  MoveTargetUpdateInput: ["id", "identifier", "moves"],
  MoveDamageClassCreateInput: ["id", "identifier", "moves", "types"],
  MoveDamageClassUpdateInput: ["id", "identifier", "moves", "types"],
  TypeCreateInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeUpdateInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  AbilityCreateInput: ["id", "identifier", "is_main_series", "generation", "pokemonAbilities"],
  AbilityUpdateInput: ["id", "identifier", "is_main_series", "generation", "pokemonAbilities"],
  ItemCreateInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemUpdateInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCategoryCreateInput: ["id", "identifier", "pocket", "items"],
  ItemCategoryUpdateInput: ["id", "identifier", "pocket", "items"],
  ItemPocketCreateInput: ["id", "identifier", "categories"],
  ItemPocketUpdateInput: ["id", "identifier", "categories"],
  StatCreateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatUpdateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  GenerationCreateInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationUpdateInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  VersionGroupCreateInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupUpdateInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionCreateInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionUpdateInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  RegionCreateInput: ["id", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  RegionUpdateInput: ["id", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  LocationCreateInput: ["id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationUpdateInput: ["id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationAreaCreateInput: ["id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  LocationAreaUpdateInput: ["id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  PokedexCreateInput: ["id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  PokedexUpdateInput: ["id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  EvolutionChainCreateInput: ["id", "babyTriggerItem", "species"],
  EvolutionChainUpdateInput: ["id", "babyTriggerItem", "species"],
  EvolutionTriggerCreateInput: ["id", "identifier", "evolution"],
  EvolutionTriggerUpdateInput: ["id", "identifier", "evolution"],
  PokemonEvolutionCreateInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  GrowthRatesCreateInput: ["id", "identifier", "formula", "species", "experience"],
  GrowthRatesUpdateInput: ["id", "identifier", "formula", "species", "experience"],
  ExperienceCreateInput: ["level", "experience", "growthRate"],
  ExperienceUpdateInput: ["level", "experience", "growthRate"],
  GenderCreateInput: ["id", "identifier", "evolution"],
  GenderUpdateInput: ["id", "identifier", "evolution"],
  LanguageCreateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguageUpdateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  EggGroupCreateInput: ["id", "identifier", "species"],
  EggGroupUpdateInput: ["id", "identifier", "species"],
  NatureCreateInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NatureUpdateInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  ContestTypeCreateInput: ["id", "identifier", "moves", "berryFlavors"],
  ContestTypeUpdateInput: ["id", "identifier", "moves", "berryFlavors"],
  ContestEffectCreateInput: ["id", "appeal", "jam", "moves"],
  ContestEffectUpdateInput: ["id", "appeal", "jam", "moves"],
  SuperContestEffectCreateInput: ["id", "appeal", "moves"],
  SuperContestEffectUpdateInput: ["id", "appeal", "moves"],
  MachineCreateInput: ["machine_number", "versionGroup", "item", "move"],
  MachineUpdateInput: ["machine_number", "versionGroup", "item", "move"],
  EncounterMethodCreateInput: ["id", "identifier", "order", "slots", "encounterRates"],
  EncounterMethodUpdateInput: ["id", "identifier", "order", "slots", "encounterRates"],
  EncounterSlotCreateInput: ["id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterSlotUpdateInput: ["id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterCreateInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterUpdateInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterConditionCreateInput: ["id", "identifier", "values"],
  EncounterConditionUpdateInput: ["id", "identifier", "values"],
  EncounterConditionValueCreateInput: ["id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValueUpdateInput: ["id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValueMapCreateInput: ["encounter", "conditionValue"],
  EncounterConditionValueMapUpdateInput: ["encounter", "conditionValue"],
  MoveMetaCategoryCreateInput: ["id", "identifier", "meta"],
  MoveMetaCategoryUpdateInput: ["id", "identifier", "meta"],
  MoveMetaAilmentCreateInput: ["id", "identifier", "meta"],
  MoveMetaAilmentUpdateInput: ["id", "identifier", "meta"],
  MoveMetaCreateInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaUpdateInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaStatChangesCreateInput: ["change", "stat", "meta"],
  MoveMetaStatChangesUpdateInput: ["change", "stat", "meta"],
  MoveFlagCreateInput: ["id", "identifier", "flagMap"],
  MoveFlagUpdateInput: ["id", "identifier", "flagMap"],
  MoveFlagMapCreateInput: ["move", "flag"],
  MoveFlagMapUpdateInput: ["move", "flag"],
  MoveBattleStyleCreateInput: ["id", "identifier", "naturePreferences"],
  MoveBattleStyleUpdateInput: ["id", "identifier", "naturePreferences"],
  ItemFlagCreateInput: ["id", "identifier", "flagMap"],
  ItemFlagUpdateInput: ["id", "identifier", "flagMap"],
  ItemFlagMapCreateInput: ["item", "flag"],
  ItemFlagMapUpdateInput: ["item", "flag"],
  ItemFlingEffectCreateInput: ["id", "identifier", "items"],
  ItemFlingEffectUpdateInput: ["id", "identifier", "items"],
  BerryCreateInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerryUpdateInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerryFirmnessCreateInput: ["id", "identifier", "berries"],
  BerryFirmnessUpdateInput: ["id", "identifier", "berries"],
  BerryFlavorCreateInput: ["flavor", "berry", "contestType", "type"],
  BerryFlavorUpdateInput: ["flavor", "berry", "contestType", "type"],
  CharacteristicCreateInput: ["id", "gene_mod_5", "stat"],
  CharacteristicUpdateInput: ["id", "gene_mod_5", "stat"],
  ContestComboCreateInput: ["firstMove", "secondMove"],
  ContestComboUpdateInput: ["firstMove", "secondMove"],
  SuperContestComboCreateInput: ["firstMove", "secondMove"],
  SuperContestComboUpdateInput: ["firstMove", "secondMove"],
  PokemonMoveMethodCreateInput: ["id", "identifier", "pokemonMoves", "versionGroups"],
  PokemonMoveMethodUpdateInput: ["id", "identifier", "pokemonMoves", "versionGroups"],
  VersionGroupPokemonMoveMethodCreateInput: ["versionGroup", "moveMethod"],
  VersionGroupPokemonMoveMethodUpdateInput: ["versionGroup", "moveMethod"],
  PokemonShapeCreateInput: ["id", "identifier", "species"],
  PokemonShapeUpdateInput: ["id", "identifier", "species"],
  PokemonColorCreateInput: ["id", "identifier", "species"],
  PokemonColorUpdateInput: ["id", "identifier", "species"],
  PokemonHabitatCreateInput: ["id", "identifier", "species"],
  PokemonHabitatUpdateInput: ["id", "identifier", "species"],
  TypeEfficacyCreateInput: ["damage_factor", "damageType", "targetType"],
  TypeEfficacyUpdateInput: ["damage_factor", "damageType", "targetType"],
  VersionGroupRegionCreateInput: ["versionGroup", "region"],
  VersionGroupRegionUpdateInput: ["versionGroup", "region"],
  PokedexVersionGroupCreateInput: ["pokedex", "versionGroup"],
  PokedexVersionGroupUpdateInput: ["pokedex", "versionGroup"],
  PokemonAbilityCreateInput: ["is_hidden", "slot", "pokemon", "ability"],
  PokemonAbilityUpdateInput: ["is_hidden", "slot", "pokemon", "ability"],
  PokemonMoveCreateInput: ["level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonMoveUpdateInput: ["level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonStatCreateInput: ["base_stat", "effort", "pokemon", "stat"],
  PokemonStatUpdateInput: ["base_stat", "effort", "pokemon", "stat"],
  PokemonTypeCreateInput: ["slot", "pokemon", "type"],
  PokemonTypeUpdateInput: ["slot", "pokemon", "type"],
  PokemonEggGroupCreateInput: ["species", "eggGroup"],
  PokemonEggGroupUpdateInput: ["species", "eggGroup"],
  PokemonItemCreateInput: ["rarity", "pokemon", "version", "item"],
  PokemonItemUpdateInput: ["rarity", "pokemon", "version", "item"],
  PokemonGameIndexCreateInput: ["game_index", "pokemon", "version"],
  PokemonGameIndexUpdateInput: ["game_index", "pokemon", "version"],
  PokemonDexNumberCreateInput: ["pokedex_number", "species", "pokedex"],
  PokemonDexNumberUpdateInput: ["pokedex_number", "species", "pokedex"],
  PokemonFormGenerationCreateInput: ["game_index", "pokemonForm", "generation"],
  PokemonFormGenerationUpdateInput: ["game_index", "pokemonForm", "generation"],
  PokemonFormTypeCreateInput: ["slot", "pokemonForm", "type"],
  PokemonFormTypeUpdateInput: ["slot", "pokemonForm", "type"],
  TypeGameIndexCreateInput: ["game_index", "type", "generation"],
  TypeGameIndexUpdateInput: ["game_index", "type", "generation"],
  ItemGameIndexCreateInput: ["game_index", "item", "generation"],
  ItemGameIndexUpdateInput: ["game_index", "item", "generation"],
  LocationGameIndexCreateInput: ["game_index", "location", "generation"],
  LocationGameIndexUpdateInput: ["game_index", "location", "generation"],
  LocationAreaEncounterRateCreateInput: ["rate", "locationArea", "encounterMethod", "version"],
  LocationAreaEncounterRateUpdateInput: ["rate", "locationArea", "encounterMethod", "version"],
  NatureBattleStylePreferenceCreateInput: ["low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  NatureBattleStylePreferenceUpdateInput: ["low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  IntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  StringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
  IntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  PokemonSpeciesRelationFilter: ["is", "isNot"],
  PokemonFormListRelationFilter: ["every", "some", "none"],
  PokemonAbilityListRelationFilter: ["every", "some", "none"],
  PokemonMoveListRelationFilter: ["every", "some", "none"],
  PokemonStatListRelationFilter: ["every", "some", "none"],
  PokemonTypeListRelationFilter: ["every", "some", "none"],
  PokemonItemListRelationFilter: ["every", "some", "none"],
  PokemonGameIndexListRelationFilter: ["every", "some", "none"],
  EncounterListRelationFilter: ["every", "some", "none"],
  SortOrderInput: ["sort", "nulls"],
  PokemonFormOrderByRelationAggregateInput: ["_count"],
  PokemonAbilityOrderByRelationAggregateInput: ["_count"],
  PokemonMoveOrderByRelationAggregateInput: ["_count"],
  PokemonStatOrderByRelationAggregateInput: ["_count"],
  PokemonTypeOrderByRelationAggregateInput: ["_count"],
  PokemonItemOrderByRelationAggregateInput: ["_count"],
  PokemonGameIndexOrderByRelationAggregateInput: ["_count"],
  EncounterOrderByRelationAggregateInput: ["_count"],
  PokemonCountOrderByAggregateInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonAvgOrderByAggregateInput: ["id", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonMaxOrderByAggregateInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonMinOrderByAggregateInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSumOrderByAggregateInput: ["id", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  IntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  StringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
  IntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  GenerationRelationFilter: ["is", "isNot"],
  PokemonSpeciesNullableRelationFilter: ["is", "isNot"],
  PokemonSpeciesListRelationFilter: ["every", "some", "none"],
  EvolutionChainRelationFilter: ["is", "isNot"],
  PokemonColorRelationFilter: ["is", "isNot"],
  PokemonShapeRelationFilter: ["is", "isNot"],
  PokemonHabitatsNullableRelationFilter: ["is", "isNot"],
  GrowthRatesRelationFilter: ["is", "isNot"],
  PokemonListRelationFilter: ["every", "some", "none"],
  PokemonEggGroupListRelationFilter: ["every", "some", "none"],
  PokemonDexNumberListRelationFilter: ["every", "some", "none"],
  PokemonEvolutionListRelationFilter: ["every", "some", "none"],
  PokemonSpeciesOrderByRelationAggregateInput: ["_count"],
  PokemonOrderByRelationAggregateInput: ["_count"],
  PokemonEggGroupOrderByRelationAggregateInput: ["_count"],
  PokemonDexNumberOrderByRelationAggregateInput: ["_count"],
  PokemonEvolutionOrderByRelationAggregateInput: ["_count"],
  PokemonSpeciesCountOrderByAggregateInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesAvgOrderByAggregateInput: ["id", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesMinOrderByAggregateInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesSumOrderByAggregateInput: ["id", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  StringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
  PokemonRelationFilter: ["is", "isNot"],
  VersionGroupRelationFilter: ["is", "isNot"],
  PokemonFormGenerationListRelationFilter: ["every", "some", "none"],
  PokemonFormTypeListRelationFilter: ["every", "some", "none"],
  PokemonFormGenerationOrderByRelationAggregateInput: ["_count"],
  PokemonFormTypeOrderByRelationAggregateInput: ["_count"],
  PokemonFormCountOrderByAggregateInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormAvgOrderByAggregateInput: ["id", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormMaxOrderByAggregateInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormMinOrderByAggregateInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormSumOrderByAggregateInput: ["id", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  StringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
  TypeRelationFilter: ["is", "isNot"],
  MoveTargetRelationFilter: ["is", "isNot"],
  MoveDamageClassRelationFilter: ["is", "isNot"],
  MoveEffectsNullableRelationFilter: ["is", "isNot"],
  ContestTypesNullableRelationFilter: ["is", "isNot"],
  ContestEffectsNullableRelationFilter: ["is", "isNot"],
  SuperContestEffectsNullableRelationFilter: ["is", "isNot"],
  MachineListRelationFilter: ["every", "some", "none"],
  MoveMetaListRelationFilter: ["every", "some", "none"],
  MoveFlagMapListRelationFilter: ["every", "some", "none"],
  ContestComboListRelationFilter: ["every", "some", "none"],
  SuperContestComboListRelationFilter: ["every", "some", "none"],
  MachineOrderByRelationAggregateInput: ["_count"],
  MoveMetaOrderByRelationAggregateInput: ["_count"],
  MoveFlagMapOrderByRelationAggregateInput: ["_count"],
  ContestComboOrderByRelationAggregateInput: ["_count"],
  SuperContestComboOrderByRelationAggregateInput: ["_count"],
  MoveCountOrderByAggregateInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveAvgOrderByAggregateInput: ["id", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveMinOrderByAggregateInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveSumOrderByAggregateInput: ["id", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveListRelationFilter: ["every", "some", "none"],
  MoveOrderByRelationAggregateInput: ["_count"],
  MoveEffectCountOrderByAggregateInput: ["id"],
  MoveEffectAvgOrderByAggregateInput: ["id"],
  MoveEffectMaxOrderByAggregateInput: ["id"],
  MoveEffectMinOrderByAggregateInput: ["id"],
  MoveEffectSumOrderByAggregateInput: ["id"],
  MoveTargetCountOrderByAggregateInput: ["id", "identifier"],
  MoveTargetAvgOrderByAggregateInput: ["id"],
  MoveTargetMaxOrderByAggregateInput: ["id", "identifier"],
  MoveTargetMinOrderByAggregateInput: ["id", "identifier"],
  MoveTargetSumOrderByAggregateInput: ["id"],
  TypeListRelationFilter: ["every", "some", "none"],
  TypeOrderByRelationAggregateInput: ["_count"],
  MoveDamageClassCountOrderByAggregateInput: ["id", "identifier"],
  MoveDamageClassAvgOrderByAggregateInput: ["id"],
  MoveDamageClassMaxOrderByAggregateInput: ["id", "identifier"],
  MoveDamageClassMinOrderByAggregateInput: ["id", "identifier"],
  MoveDamageClassSumOrderByAggregateInput: ["id"],
  MoveDamageClassesNullableRelationFilter: ["is", "isNot"],
  TypeGameIndexListRelationFilter: ["every", "some", "none"],
  TypeEfficacyListRelationFilter: ["every", "some", "none"],
  BerryFlavorListRelationFilter: ["every", "some", "none"],
  NatureListRelationFilter: ["every", "some", "none"],
  BerryListRelationFilter: ["every", "some", "none"],
  TypeGameIndexOrderByRelationAggregateInput: ["_count"],
  TypeEfficacyOrderByRelationAggregateInput: ["_count"],
  BerryFlavorOrderByRelationAggregateInput: ["_count"],
  NatureOrderByRelationAggregateInput: ["_count"],
  BerryOrderByRelationAggregateInput: ["_count"],
  TypeCountOrderByAggregateInput: ["id", "identifier", "generation_id", "damage_class_id"],
  TypeAvgOrderByAggregateInput: ["id", "generation_id", "damage_class_id"],
  TypeMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "damage_class_id"],
  TypeMinOrderByAggregateInput: ["id", "identifier", "generation_id", "damage_class_id"],
  TypeSumOrderByAggregateInput: ["id", "generation_id", "damage_class_id"],
  AbilityCountOrderByAggregateInput: ["id", "identifier", "generation_id", "is_main_series"],
  AbilityAvgOrderByAggregateInput: ["id", "generation_id", "is_main_series"],
  AbilityMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "is_main_series"],
  AbilityMinOrderByAggregateInput: ["id", "identifier", "generation_id", "is_main_series"],
  AbilitySumOrderByAggregateInput: ["id", "generation_id", "is_main_series"],
  ItemCategoryRelationFilter: ["is", "isNot"],
  ItemFlingEffectsNullableRelationFilter: ["is", "isNot"],
  ItemGameIndexListRelationFilter: ["every", "some", "none"],
  ItemFlagMapListRelationFilter: ["every", "some", "none"],
  EvolutionChainListRelationFilter: ["every", "some", "none"],
  ItemGameIndexOrderByRelationAggregateInput: ["_count"],
  ItemFlagMapOrderByRelationAggregateInput: ["_count"],
  EvolutionChainOrderByRelationAggregateInput: ["_count"],
  ItemCountOrderByAggregateInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemAvgOrderByAggregateInput: ["id", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemMaxOrderByAggregateInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemMinOrderByAggregateInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemSumOrderByAggregateInput: ["id", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemPocketRelationFilter: ["is", "isNot"],
  ItemListRelationFilter: ["every", "some", "none"],
  ItemOrderByRelationAggregateInput: ["_count"],
  ItemCategoryCountOrderByAggregateInput: ["id", "pocket_id", "identifier"],
  ItemCategoryAvgOrderByAggregateInput: ["id", "pocket_id"],
  ItemCategoryMaxOrderByAggregateInput: ["id", "pocket_id", "identifier"],
  ItemCategoryMinOrderByAggregateInput: ["id", "pocket_id", "identifier"],
  ItemCategorySumOrderByAggregateInput: ["id", "pocket_id"],
  ItemCategoryListRelationFilter: ["every", "some", "none"],
  ItemCategoryOrderByRelationAggregateInput: ["_count"],
  ItemPocketCountOrderByAggregateInput: ["id", "identifier"],
  ItemPocketAvgOrderByAggregateInput: ["id"],
  ItemPocketMaxOrderByAggregateInput: ["id", "identifier"],
  ItemPocketMinOrderByAggregateInput: ["id", "identifier"],
  ItemPocketSumOrderByAggregateInput: ["id"],
  MoveMetaStatChangesListRelationFilter: ["every", "some", "none"],
  CharacteristicListRelationFilter: ["every", "some", "none"],
  MoveMetaStatChangesOrderByRelationAggregateInput: ["_count"],
  CharacteristicOrderByRelationAggregateInput: ["_count"],
  StatCountOrderByAggregateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  StatAvgOrderByAggregateInput: ["id", "damage_class_id", "is_battle_only", "game_index"],
  StatMaxOrderByAggregateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  StatMinOrderByAggregateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  StatSumOrderByAggregateInput: ["id", "damage_class_id", "is_battle_only", "game_index"],
  RegionRelationFilter: ["is", "isNot"],
  AbilityListRelationFilter: ["every", "some", "none"],
  LocationGameIndexListRelationFilter: ["every", "some", "none"],
  VersionGroupListRelationFilter: ["every", "some", "none"],
  AbilityOrderByRelationAggregateInput: ["_count"],
  LocationGameIndexOrderByRelationAggregateInput: ["_count"],
  VersionGroupOrderByRelationAggregateInput: ["_count"],
  GenerationCountOrderByAggregateInput: ["id", "main_region_id", "identifier"],
  GenerationAvgOrderByAggregateInput: ["id", "main_region_id"],
  GenerationMaxOrderByAggregateInput: ["id", "main_region_id", "identifier"],
  GenerationMinOrderByAggregateInput: ["id", "main_region_id", "identifier"],
  GenerationSumOrderByAggregateInput: ["id", "main_region_id"],
  VersionListRelationFilter: ["every", "some", "none"],
  EncounterSlotListRelationFilter: ["every", "some", "none"],
  VersionGroupPokemonMoveMethodListRelationFilter: ["every", "some", "none"],
  VersionGroupRegionListRelationFilter: ["every", "some", "none"],
  PokedexVersionGroupListRelationFilter: ["every", "some", "none"],
  VersionOrderByRelationAggregateInput: ["_count"],
  EncounterSlotOrderByRelationAggregateInput: ["_count"],
  VersionGroupPokemonMoveMethodOrderByRelationAggregateInput: ["_count"],
  VersionGroupRegionOrderByRelationAggregateInput: ["_count"],
  PokedexVersionGroupOrderByRelationAggregateInput: ["_count"],
  VersionGroupCountOrderByAggregateInput: ["id", "identifier", "generation_id", "order"],
  VersionGroupAvgOrderByAggregateInput: ["id", "generation_id", "order"],
  VersionGroupMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "order"],
  VersionGroupMinOrderByAggregateInput: ["id", "identifier", "generation_id", "order"],
  VersionGroupSumOrderByAggregateInput: ["id", "generation_id", "order"],
  LocationAreaEncounterRateListRelationFilter: ["every", "some", "none"],
  LocationAreaEncounterRateOrderByRelationAggregateInput: ["_count"],
  VersionCountOrderByAggregateInput: ["id", "version_group_id", "identifier"],
  VersionAvgOrderByAggregateInput: ["id", "version_group_id"],
  VersionMaxOrderByAggregateInput: ["id", "version_group_id", "identifier"],
  VersionMinOrderByAggregateInput: ["id", "version_group_id", "identifier"],
  VersionSumOrderByAggregateInput: ["id", "version_group_id"],
  GenerationListRelationFilter: ["every", "some", "none"],
  LocationListRelationFilter: ["every", "some", "none"],
  PokedexListRelationFilter: ["every", "some", "none"],
  GenerationOrderByRelationAggregateInput: ["_count"],
  LocationOrderByRelationAggregateInput: ["_count"],
  PokedexOrderByRelationAggregateInput: ["_count"],
  RegionCountOrderByAggregateInput: ["id", "identifier"],
  RegionAvgOrderByAggregateInput: ["id"],
  RegionMaxOrderByAggregateInput: ["id", "identifier"],
  RegionMinOrderByAggregateInput: ["id", "identifier"],
  RegionSumOrderByAggregateInput: ["id"],
  RegionsNullableRelationFilter: ["is", "isNot"],
  LocationAreaListRelationFilter: ["every", "some", "none"],
  LocationAreaOrderByRelationAggregateInput: ["_count"],
  LocationCountOrderByAggregateInput: ["id", "region_id", "identifier"],
  LocationAvgOrderByAggregateInput: ["id", "region_id"],
  LocationMaxOrderByAggregateInput: ["id", "region_id", "identifier"],
  LocationMinOrderByAggregateInput: ["id", "region_id", "identifier"],
  LocationSumOrderByAggregateInput: ["id", "region_id"],
  LocationRelationFilter: ["is", "isNot"],
  LocationAreaCountOrderByAggregateInput: ["id", "location_id", "game_index", "identifier"],
  LocationAreaAvgOrderByAggregateInput: ["id", "location_id", "game_index"],
  LocationAreaMaxOrderByAggregateInput: ["id", "location_id", "game_index", "identifier"],
  LocationAreaMinOrderByAggregateInput: ["id", "location_id", "game_index", "identifier"],
  LocationAreaSumOrderByAggregateInput: ["id", "location_id", "game_index"],
  PokedexCountOrderByAggregateInput: ["id", "region_id", "identifier", "is_main_series"],
  PokedexAvgOrderByAggregateInput: ["id", "region_id", "is_main_series"],
  PokedexMaxOrderByAggregateInput: ["id", "region_id", "identifier", "is_main_series"],
  PokedexMinOrderByAggregateInput: ["id", "region_id", "identifier", "is_main_series"],
  PokedexSumOrderByAggregateInput: ["id", "region_id", "is_main_series"],
  ItemsNullableRelationFilter: ["is", "isNot"],
  EvolutionChainCountOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionChainAvgOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionChainMaxOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionChainMinOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionChainSumOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionTriggerCountOrderByAggregateInput: ["id", "identifier"],
  EvolutionTriggerAvgOrderByAggregateInput: ["id"],
  EvolutionTriggerMaxOrderByAggregateInput: ["id", "identifier"],
  EvolutionTriggerMinOrderByAggregateInput: ["id", "identifier"],
  EvolutionTriggerSumOrderByAggregateInput: ["id"],
  EvolutionTriggerRelationFilter: ["is", "isNot"],
  GendersNullableRelationFilter: ["is", "isNot"],
  LocationsNullableRelationFilter: ["is", "isNot"],
  MovesNullableRelationFilter: ["is", "isNot"],
  TypesNullableRelationFilter: ["is", "isNot"],
  PokemonEvolutionCountOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionAvgOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionMaxOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionMinOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionSumOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  ExperienceListRelationFilter: ["every", "some", "none"],
  ExperienceOrderByRelationAggregateInput: ["_count"],
  GrowthRatesCountOrderByAggregateInput: ["id", "identifier", "formula"],
  GrowthRatesAvgOrderByAggregateInput: ["id"],
  GrowthRatesMaxOrderByAggregateInput: ["id", "identifier", "formula"],
  GrowthRatesMinOrderByAggregateInput: ["id", "identifier", "formula"],
  GrowthRatesSumOrderByAggregateInput: ["id"],
  ExperienceGrowth_rate_idLevelCompoundUniqueInput: ["growth_rate_id", "level"],
  ExperienceCountOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  ExperienceAvgOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  ExperienceMaxOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  ExperienceMinOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  ExperienceSumOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  GenderCountOrderByAggregateInput: ["id", "identifier"],
  GenderAvgOrderByAggregateInput: ["id"],
  GenderMaxOrderByAggregateInput: ["id", "identifier"],
  GenderMinOrderByAggregateInput: ["id", "identifier"],
  GenderSumOrderByAggregateInput: ["id"],
  LanguageCountOrderByAggregateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguageAvgOrderByAggregateInput: ["id", "official", "order"],
  LanguageMaxOrderByAggregateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguageMinOrderByAggregateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguageSumOrderByAggregateInput: ["id", "official", "order"],
  EggGroupCountOrderByAggregateInput: ["id", "identifier"],
  EggGroupAvgOrderByAggregateInput: ["id"],
  EggGroupMaxOrderByAggregateInput: ["id", "identifier"],
  EggGroupMinOrderByAggregateInput: ["id", "identifier"],
  EggGroupSumOrderByAggregateInput: ["id"],
  StatRelationFilter: ["is", "isNot"],
  NatureBattleStylePreferenceListRelationFilter: ["every", "some", "none"],
  NatureBattleStylePreferenceOrderByRelationAggregateInput: ["_count"],
  NatureCountOrderByAggregateInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NatureAvgOrderByAggregateInput: ["id", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NatureMaxOrderByAggregateInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NatureMinOrderByAggregateInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NatureSumOrderByAggregateInput: ["id", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  ContestTypeCountOrderByAggregateInput: ["id", "identifier"],
  ContestTypeAvgOrderByAggregateInput: ["id"],
  ContestTypeMaxOrderByAggregateInput: ["id", "identifier"],
  ContestTypeMinOrderByAggregateInput: ["id", "identifier"],
  ContestTypeSumOrderByAggregateInput: ["id"],
  ContestEffectCountOrderByAggregateInput: ["id", "appeal", "jam"],
  ContestEffectAvgOrderByAggregateInput: ["id", "appeal", "jam"],
  ContestEffectMaxOrderByAggregateInput: ["id", "appeal", "jam"],
  ContestEffectMinOrderByAggregateInput: ["id", "appeal", "jam"],
  ContestEffectSumOrderByAggregateInput: ["id", "appeal", "jam"],
  SuperContestEffectCountOrderByAggregateInput: ["id", "appeal"],
  SuperContestEffectAvgOrderByAggregateInput: ["id", "appeal"],
  SuperContestEffectMaxOrderByAggregateInput: ["id", "appeal"],
  SuperContestEffectMinOrderByAggregateInput: ["id", "appeal"],
  SuperContestEffectSumOrderByAggregateInput: ["id", "appeal"],
  ItemRelationFilter: ["is", "isNot"],
  MoveRelationFilter: ["is", "isNot"],
  MachinesMachine_numberVersion_group_idCompoundUniqueInput: ["machine_number", "version_group_id"],
  MachineCountOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachineAvgOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachineMaxOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachineMinOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachineSumOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  EncounterMethodCountOrderByAggregateInput: ["id", "identifier", "order"],
  EncounterMethodAvgOrderByAggregateInput: ["id", "order"],
  EncounterMethodMaxOrderByAggregateInput: ["id", "identifier", "order"],
  EncounterMethodMinOrderByAggregateInput: ["id", "identifier", "order"],
  EncounterMethodSumOrderByAggregateInput: ["id", "order"],
  EncounterMethodRelationFilter: ["is", "isNot"],
  EncounterSlotCountOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotAvgOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotMaxOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotMinOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotSumOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  VersionRelationFilter: ["is", "isNot"],
  LocationAreaRelationFilter: ["is", "isNot"],
  EncounterSlotRelationFilter: ["is", "isNot"],
  EncounterConditionValueMapListRelationFilter: ["every", "some", "none"],
  EncounterConditionValueMapOrderByRelationAggregateInput: ["_count"],
  EncounterCountOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterAvgOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterMaxOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterMinOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterSumOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterConditionValueListRelationFilter: ["every", "some", "none"],
  EncounterConditionValueOrderByRelationAggregateInput: ["_count"],
  EncounterConditionCountOrderByAggregateInput: ["id", "identifier"],
  EncounterConditionAvgOrderByAggregateInput: ["id"],
  EncounterConditionMaxOrderByAggregateInput: ["id", "identifier"],
  EncounterConditionMinOrderByAggregateInput: ["id", "identifier"],
  EncounterConditionSumOrderByAggregateInput: ["id"],
  EncounterConditionRelationFilter: ["is", "isNot"],
  EncounterConditionValueCountOrderByAggregateInput: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueAvgOrderByAggregateInput: ["id", "encounter_condition_id", "is_default"],
  EncounterConditionValueMaxOrderByAggregateInput: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueMinOrderByAggregateInput: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueSumOrderByAggregateInput: ["id", "encounter_condition_id", "is_default"],
  EncounterRelationFilter: ["is", "isNot"],
  EncounterConditionValueRelationFilter: ["is", "isNot"],
  EncounterConditionValueMapCountOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapAvgOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapMaxOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapMinOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapSumOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  MoveMetaCategoryCountOrderByAggregateInput: ["id", "identifier"],
  MoveMetaCategoryAvgOrderByAggregateInput: ["id"],
  MoveMetaCategoryMaxOrderByAggregateInput: ["id", "identifier"],
  MoveMetaCategoryMinOrderByAggregateInput: ["id", "identifier"],
  MoveMetaCategorySumOrderByAggregateInput: ["id"],
  MoveMetaAilmentCountOrderByAggregateInput: ["id", "identifier"],
  MoveMetaAilmentAvgOrderByAggregateInput: ["id"],
  MoveMetaAilmentMaxOrderByAggregateInput: ["id", "identifier"],
  MoveMetaAilmentMinOrderByAggregateInput: ["id", "identifier"],
  MoveMetaAilmentSumOrderByAggregateInput: ["id"],
  MoveMetaCategoryRelationFilter: ["is", "isNot"],
  MoveMetaAilmentsNullableRelationFilter: ["is", "isNot"],
  MoveMetaCountOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaAvgOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaMaxOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaMinOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaSumOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaRelationFilter: ["is", "isNot"],
  MoveMetaStatChangesMove_idStat_idCompoundUniqueInput: ["move_id", "stat_id"],
  MoveMetaStatChangesCountOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesAvgOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesMaxOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesMinOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesSumOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveFlagCountOrderByAggregateInput: ["id", "identifier"],
  MoveFlagAvgOrderByAggregateInput: ["id"],
  MoveFlagMaxOrderByAggregateInput: ["id", "identifier"],
  MoveFlagMinOrderByAggregateInput: ["id", "identifier"],
  MoveFlagSumOrderByAggregateInput: ["id"],
  MoveFlagRelationFilter: ["is", "isNot"],
  MoveFlagMapCountOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveFlagMapAvgOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveFlagMapMaxOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveFlagMapMinOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveFlagMapSumOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveBattleStyleCountOrderByAggregateInput: ["id", "identifier"],
  MoveBattleStyleAvgOrderByAggregateInput: ["id"],
  MoveBattleStyleMaxOrderByAggregateInput: ["id", "identifier"],
  MoveBattleStyleMinOrderByAggregateInput: ["id", "identifier"],
  MoveBattleStyleSumOrderByAggregateInput: ["id"],
  ItemFlagCountOrderByAggregateInput: ["id", "identifier"],
  ItemFlagAvgOrderByAggregateInput: ["id"],
  ItemFlagMaxOrderByAggregateInput: ["id", "identifier"],
  ItemFlagMinOrderByAggregateInput: ["id", "identifier"],
  ItemFlagSumOrderByAggregateInput: ["id"],
  ItemFlagRelationFilter: ["is", "isNot"],
  ItemFlagMapCountOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlagMapAvgOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlagMapMaxOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlagMapMinOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlagMapSumOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlingEffectCountOrderByAggregateInput: ["id", "identifier"],
  ItemFlingEffectAvgOrderByAggregateInput: ["id"],
  ItemFlingEffectMaxOrderByAggregateInput: ["id", "identifier"],
  ItemFlingEffectMinOrderByAggregateInput: ["id", "identifier"],
  ItemFlingEffectSumOrderByAggregateInput: ["id"],
  BerryFirmnessRelationFilter: ["is", "isNot"],
  BerryCountOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryAvgOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryMaxOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryMinOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerrySumOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryFirmnessCountOrderByAggregateInput: ["id", "identifier"],
  BerryFirmnessAvgOrderByAggregateInput: ["id"],
  BerryFirmnessMaxOrderByAggregateInput: ["id", "identifier"],
  BerryFirmnessMinOrderByAggregateInput: ["id", "identifier"],
  BerryFirmnessSumOrderByAggregateInput: ["id"],
  BerryRelationFilter: ["is", "isNot"],
  ContestTypeRelationFilter: ["is", "isNot"],
  BerryFlavorsBerry_idContest_type_idCompoundUniqueInput: ["berry_id", "contest_type_id"],
  BerryFlavorCountOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorAvgOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorMaxOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorMinOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorSumOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  CharacteristicCountOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  CharacteristicAvgOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  CharacteristicMaxOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  CharacteristicMinOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  CharacteristicSumOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  ContestComboCountOrderByAggregateInput: ["first_move_id", "second_move_id"],
  ContestComboAvgOrderByAggregateInput: ["first_move_id", "second_move_id"],
  ContestComboMaxOrderByAggregateInput: ["first_move_id", "second_move_id"],
  ContestComboMinOrderByAggregateInput: ["first_move_id", "second_move_id"],
  ContestComboSumOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestComboCountOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestComboAvgOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestComboMaxOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestComboMinOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestComboSumOrderByAggregateInput: ["first_move_id", "second_move_id"],
  PokemonMoveMethodCountOrderByAggregateInput: ["id", "identifier"],
  PokemonMoveMethodAvgOrderByAggregateInput: ["id"],
  PokemonMoveMethodMaxOrderByAggregateInput: ["id", "identifier"],
  PokemonMoveMethodMinOrderByAggregateInput: ["id", "identifier"],
  PokemonMoveMethodSumOrderByAggregateInput: ["id"],
  PokemonMoveMethodRelationFilter: ["is", "isNot"],
  VersionGroupPokemonMoveMethodCountOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodAvgOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodMaxOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodMinOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodSumOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  PokemonShapeCountOrderByAggregateInput: ["id", "identifier"],
  PokemonShapeAvgOrderByAggregateInput: ["id"],
  PokemonShapeMaxOrderByAggregateInput: ["id", "identifier"],
  PokemonShapeMinOrderByAggregateInput: ["id", "identifier"],
  PokemonShapeSumOrderByAggregateInput: ["id"],
  PokemonColorCountOrderByAggregateInput: ["id", "identifier"],
  PokemonColorAvgOrderByAggregateInput: ["id"],
  PokemonColorMaxOrderByAggregateInput: ["id", "identifier"],
  PokemonColorMinOrderByAggregateInput: ["id", "identifier"],
  PokemonColorSumOrderByAggregateInput: ["id"],
  PokemonHabitatCountOrderByAggregateInput: ["id", "identifier"],
  PokemonHabitatAvgOrderByAggregateInput: ["id"],
  PokemonHabitatMaxOrderByAggregateInput: ["id", "identifier"],
  PokemonHabitatMinOrderByAggregateInput: ["id", "identifier"],
  PokemonHabitatSumOrderByAggregateInput: ["id"],
  TypeEfficacyDamage_type_idTarget_type_idCompoundUniqueInput: ["damage_type_id", "target_type_id"],
  TypeEfficacyCountOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyAvgOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyMaxOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyMinOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacySumOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  VersionGroupRegionCountOrderByAggregateInput: ["version_group_id", "region_id"],
  VersionGroupRegionAvgOrderByAggregateInput: ["version_group_id", "region_id"],
  VersionGroupRegionMaxOrderByAggregateInput: ["version_group_id", "region_id"],
  VersionGroupRegionMinOrderByAggregateInput: ["version_group_id", "region_id"],
  VersionGroupRegionSumOrderByAggregateInput: ["version_group_id", "region_id"],
  PokedexRelationFilter: ["is", "isNot"],
  PokedexVersionGroupCountOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupAvgOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupMaxOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupMinOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupSumOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  AbilityRelationFilter: ["is", "isNot"],
  PokemonAbilitiesPokemon_idAbility_idCompoundUniqueInput: ["pokemon_id", "ability_id"],
  PokemonAbilityCountOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilityAvgOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilityMaxOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilityMinOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitySumOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMovesPokemon_idVersion_group_idMove_idPokemon_move_method_idCompoundUniqueInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id"],
  PokemonMoveCountOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMoveAvgOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMoveMaxOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMoveMinOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMoveSumOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStatsPokemon_idStat_idCompoundUniqueInput: ["pokemon_id", "stat_id"],
  PokemonStatCountOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatAvgOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatMaxOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatMinOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatSumOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypesPokemon_idType_idCompoundUniqueInput: ["pokemon_id", "type_id"],
  PokemonTypeCountOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  PokemonTypeAvgOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  PokemonTypeMaxOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  PokemonTypeMinOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  PokemonTypeSumOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  EggGroupRelationFilter: ["is", "isNot"],
  PokemonEggGroupsSpecies_idEgg_group_idCompoundUniqueInput: ["species_id", "egg_group_id"],
  PokemonEggGroupCountOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonEggGroupAvgOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonEggGroupMaxOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonEggGroupMinOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonEggGroupSumOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonItemsPokemon_idVersion_idItem_idCompoundUniqueInput: ["pokemon_id", "version_id", "item_id"],
  PokemonItemCountOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemAvgOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemMaxOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemMinOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemSumOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndicesPokemon_idVersion_idCompoundUniqueInput: ["pokemon_id", "version_id"],
  PokemonGameIndexCountOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndexAvgOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndexMaxOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndexMinOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndexSumOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonDexNumbersSpecies_idPokedex_idCompoundUniqueInput: ["species_id", "pokedex_id"],
  PokemonDexNumberCountOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumberAvgOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumberMaxOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumberMinOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumberSumOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonFormRelationFilter: ["is", "isNot"],
  PokemonFormGenerationsPokemon_form_idGeneration_idCompoundUniqueInput: ["pokemon_form_id", "generation_id"],
  PokemonFormGenerationCountOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationAvgOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationMaxOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationMinOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationSumOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypesPokemon_form_idType_idCompoundUniqueInput: ["pokemon_form_id", "type_id"],
  PokemonFormTypeCountOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypeAvgOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypeMaxOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypeMinOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypeSumOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  TypeGameIndicesType_idGeneration_idCompoundUniqueInput: ["type_id", "generation_id"],
  TypeGameIndexCountOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  TypeGameIndexAvgOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  TypeGameIndexMaxOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  TypeGameIndexMinOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  TypeGameIndexSumOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  ItemGameIndicesItem_idGeneration_idCompoundUniqueInput: ["item_id", "generation_id"],
  ItemGameIndexCountOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  ItemGameIndexAvgOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  ItemGameIndexMaxOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  ItemGameIndexMinOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  ItemGameIndexSumOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  LocationGameIndicesLocation_idGeneration_idCompoundUniqueInput: ["location_id", "generation_id"],
  LocationGameIndexCountOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationGameIndexAvgOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationGameIndexMaxOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationGameIndexMinOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationGameIndexSumOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationAreaEncounterRatesLocation_area_idEncounter_method_idVersion_idCompoundUniqueInput: ["location_area_id", "encounter_method_id", "version_id"],
  LocationAreaEncounterRateCountOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRateAvgOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRateMaxOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRateMinOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRateSumOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  NatureRelationFilter: ["is", "isNot"],
  MoveBattleStyleRelationFilter: ["is", "isNot"],
  NatureBattleStylePreferenceCountOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferenceAvgOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferenceMaxOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferenceMinOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferenceSumOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  PokemonSpeciesCreateNestedOneWithoutPokemonInput: ["create", "connectOrCreate", "connect"],
  PokemonFormCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonAbilityCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonMoveCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonStatCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonTypeCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonItemCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonGameIndexCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncounterCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  IntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  StringFieldUpdateOperationsInput: ["set"],
  NullableIntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  GenerationCreateNestedOneWithoutPokemonSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutEvolvesToInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutEvolvesFromInput: ["create", "connectOrCreate", "createMany", "connect"],
  EvolutionChainCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonColorCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonShapeCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonHabitatCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  GrowthRatesCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedManyWithoutSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEggGroupCreateNestedManyWithoutSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonDexNumberCreateNestedManyWithoutSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutEvolvedSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutPartySpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutTradeSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonCreateNestedOneWithoutFormsInput: ["create", "connectOrCreate", "connect"],
  VersionGroupCreateNestedOneWithoutPokemonFormsInput: ["create", "connectOrCreate", "connect"],
  PokemonFormGenerationCreateNestedManyWithoutPokemonFormInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonFormTypeCreateNestedManyWithoutPokemonFormInput: ["create", "connectOrCreate", "createMany", "connect"],
  NullableStringFieldUpdateOperationsInput: ["set"],
  GenerationCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  MoveTargetCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  MoveDamageClassCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  MoveEffectCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  ContestTypeCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  ContestEffectCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  SuperContestEffectCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  PokemonMoveCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MachineCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveMetaCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveFlagMapCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  ContestComboCreateNestedManyWithoutFirstMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  ContestComboCreateNestedManyWithoutSecondMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  SuperContestComboCreateNestedManyWithoutFirstMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  SuperContestComboCreateNestedManyWithoutSecondMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutKnownMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveCreateNestedManyWithoutEffectInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveCreateNestedManyWithoutTargetInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveCreateNestedManyWithoutDamageClassInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeCreateNestedManyWithoutDamageClassInput: ["create", "connectOrCreate", "createMany", "connect"],
  GenerationCreateNestedOneWithoutTypesInput: ["create", "connectOrCreate", "connect"],
  MoveDamageClassCreateNestedOneWithoutTypesInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonTypeCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonFormTypeCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeGameIndexCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeEfficacyCreateNestedManyWithoutDamageTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeEfficacyCreateNestedManyWithoutTargetTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerryFlavorCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  NatureCreateNestedManyWithoutDecreasedStatTypesInput: ["create", "connectOrCreate", "connect"],
  NatureCreateNestedManyWithoutIncreasedStatTypesInput: ["create", "connectOrCreate", "connect"],
  PokemonEvolutionCreateNestedManyWithoutKnownMoveTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutPartyTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerryCreateNestedManyWithoutNaturalGiftTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  GenerationCreateNestedOneWithoutAbilitiesInput: ["create", "connectOrCreate", "connect"],
  PokemonAbilityCreateNestedManyWithoutAbilityInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemCategoryCreateNestedOneWithoutItemsInput: ["create", "connectOrCreate", "connect"],
  ItemFlingEffectCreateNestedOneWithoutItemsInput: ["create", "connectOrCreate", "connect"],
  PokemonItemCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  MachineCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerryCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemGameIndexCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemFlagMapCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  EvolutionChainCreateNestedManyWithoutBabyTriggerItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutTriggerItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutHeldItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemPocketCreateNestedOneWithoutCategoriesInput: ["create", "connectOrCreate", "connect"],
  ItemCreateNestedManyWithoutCategoryInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemCategoryCreateNestedManyWithoutPocketInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonStatCreateNestedManyWithoutStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveMetaStatChangesCreateNestedManyWithoutStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  CharacteristicCreateNestedManyWithoutStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  NatureCreateNestedManyWithoutDecreasedStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  NatureCreateNestedManyWithoutIncreasedStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  RegionCreateNestedOneWithoutGenerationsInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  AbilityCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonFormGenerationCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemGameIndexCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeGameIndexCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationGameIndexCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  GenerationCreateNestedOneWithoutVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  VersionCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncounterSlotCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  MachineCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupPokemonMoveMethodCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupRegionCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokedexVersionGroupCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonMoveCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonFormCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupCreateNestedOneWithoutVersionsInput: ["create", "connectOrCreate", "connect"],
  EncounterCreateNestedManyWithoutVersionInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonItemCreateNestedManyWithoutVersionInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonGameIndexCreateNestedManyWithoutVersionInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationAreaEncounterRateCreateNestedManyWithoutVersionInput: ["create", "connectOrCreate", "createMany", "connect"],
  GenerationCreateNestedManyWithoutRegionInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationCreateNestedManyWithoutRegionInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokedexCreateNestedManyWithoutRegionInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupRegionCreateNestedManyWithoutRegionInput: ["create", "connectOrCreate", "createMany", "connect"],
  RegionCreateNestedOneWithoutLocationsInput: ["create", "connectOrCreate", "connect"],
  LocationAreaCreateNestedManyWithoutLocationInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationGameIndexCreateNestedManyWithoutLocationInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutLocationInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationCreateNestedOneWithoutAreasInput: ["create", "connectOrCreate", "connect"],
  EncounterCreateNestedManyWithoutLocationAreaInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationAreaEncounterRateCreateNestedManyWithoutLocationAreaInput: ["create", "connectOrCreate", "createMany", "connect"],
  RegionCreateNestedOneWithoutPokedexesInput: ["create", "connectOrCreate", "connect"],
  PokemonDexNumberCreateNestedManyWithoutPokedexInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokedexVersionGroupCreateNestedManyWithoutPokedexInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemCreateNestedOneWithoutBabyTriggerItemsInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutEvolutionChainInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutEvolutionTriggerInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonSpeciesCreateNestedOneWithoutEvolutionInput: ["create", "connectOrCreate", "connect"],
  EvolutionTriggerCreateNestedOneWithoutEvolutionInput: ["create", "connectOrCreate", "connect"],
  ItemCreateNestedOneWithoutTriggerItemsInput: ["create", "connectOrCreate", "connect"],
  GenderCreateNestedOneWithoutEvolutionInput: ["create", "connectOrCreate", "connect"],
  LocationCreateNestedOneWithoutEvolutionInput: ["create", "connectOrCreate", "connect"],
  ItemCreateNestedOneWithoutHeldItemsInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedOneWithoutKnownMovesInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutKnownMoveTypesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutPartySpeciesInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutPartyTypesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutTradeSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutGrowthRateInput: ["create", "connectOrCreate", "createMany", "connect"],
  ExperienceCreateNestedManyWithoutGrowthRateInput: ["create", "connectOrCreate", "createMany", "connect"],
  GrowthRatesCreateNestedOneWithoutExperienceInput: ["create", "connectOrCreate", "connect"],
  PokemonEvolutionCreateNestedManyWithoutGenderInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEggGroupCreateNestedManyWithoutEggGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  StatCreateNestedOneWithoutNaturesInput: ["create", "connectOrCreate", "connect"],
  StatCreateNestedOneWithoutNaturesIncreasedInput: ["create", "connectOrCreate", "connect"],
  NatureBattleStylePreferenceCreateNestedManyWithoutNatureInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeCreateNestedManyWithoutNaturesInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedManyWithoutNaturesIncreasedInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedManyWithoutContestTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerryFlavorCreateNestedManyWithoutContestTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveCreateNestedManyWithoutContestEffectInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveCreateNestedManyWithoutSuperContestEffectInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupCreateNestedOneWithoutMachinesInput: ["create", "connectOrCreate", "connect"],
  ItemCreateNestedOneWithoutMachinesInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedOneWithoutMachinesInput: ["create", "connectOrCreate", "connect"],
  EncounterSlotCreateNestedManyWithoutEncounterMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationAreaEncounterRateCreateNestedManyWithoutEncounterMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupCreateNestedOneWithoutEncounterSlotsInput: ["create", "connectOrCreate", "connect"],
  EncounterMethodCreateNestedOneWithoutSlotsInput: ["create", "connectOrCreate", "connect"],
  EncounterCreateNestedManyWithoutEncounterSlotInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionCreateNestedOneWithoutEncountersInput: ["create", "connectOrCreate", "connect"],
  LocationAreaCreateNestedOneWithoutEncountersInput: ["create", "connectOrCreate", "connect"],
  EncounterSlotCreateNestedOneWithoutEncountersInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutEncountersInput: ["create", "connectOrCreate", "connect"],
  EncounterConditionValueMapCreateNestedManyWithoutEncounterInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncounterConditionValueCreateNestedManyWithoutConditionInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncounterConditionCreateNestedOneWithoutValuesInput: ["create", "connectOrCreate", "connect"],
  EncounterConditionValueMapCreateNestedManyWithoutConditionValueInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncounterCreateNestedOneWithoutConditionValueMapInput: ["create", "connectOrCreate", "connect"],
  EncounterConditionValueCreateNestedOneWithoutConditionValueMapInput: ["create", "connectOrCreate", "connect"],
  MoveMetaCreateNestedManyWithoutMetaCategoryInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveMetaCreateNestedManyWithoutMetaAilmentInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveCreateNestedOneWithoutMetaInput: ["create", "connectOrCreate", "connect"],
  MoveMetaCategoryCreateNestedOneWithoutMetaInput: ["create", "connectOrCreate", "connect"],
  MoveMetaAilmentCreateNestedOneWithoutMetaInput: ["create", "connectOrCreate", "connect"],
  MoveMetaStatChangesCreateNestedManyWithoutMetaInput: ["create", "connectOrCreate", "createMany", "connect"],
  StatCreateNestedOneWithoutMoveMetaStatChangesInput: ["create", "connectOrCreate", "connect"],
  MoveMetaCreateNestedOneWithoutStatChangesInput: ["create", "connectOrCreate", "connect"],
  MoveFlagMapCreateNestedManyWithoutFlagInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveCreateNestedOneWithoutFlagMapInput: ["create", "connectOrCreate", "connect"],
  MoveFlagCreateNestedOneWithoutFlagMapInput: ["create", "connectOrCreate", "connect"],
  NatureBattleStylePreferenceCreateNestedManyWithoutBattleStyleInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemFlagMapCreateNestedManyWithoutFlagInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemCreateNestedOneWithoutFlagMapInput: ["create", "connectOrCreate", "connect"],
  ItemFlagCreateNestedOneWithoutFlagMapInput: ["create", "connectOrCreate", "connect"],
  ItemCreateNestedManyWithoutFlingEffectInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemCreateNestedOneWithoutBerriesInput: ["create", "connectOrCreate", "connect"],
  BerryFirmnessCreateNestedOneWithoutBerriesInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutNaturalGiftTypesInput: ["create", "connectOrCreate", "connect"],
  BerryFlavorCreateNestedManyWithoutBerryInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerryCreateNestedManyWithoutFirmnessInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerryCreateNestedOneWithoutFlavorsInput: ["create", "connectOrCreate", "connect"],
  ContestTypeCreateNestedOneWithoutBerryFlavorsInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutBerryFlavorsInput: ["create", "connectOrCreate", "connect"],
  StatCreateNestedOneWithoutCharacteristicsInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedOneWithoutContestCombosInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedOneWithoutContestCombosSecondInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedOneWithoutSuperContestCombosInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedOneWithoutSuperContestCombosSecondInput: ["create", "connectOrCreate", "connect"],
  PokemonMoveCreateNestedManyWithoutMoveMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupPokemonMoveMethodCreateNestedManyWithoutMoveMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupCreateNestedOneWithoutVersionGroupPokemonMoveMethodsInput: ["create", "connectOrCreate", "connect"],
  PokemonMoveMethodCreateNestedOneWithoutVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutShapeInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonSpeciesCreateNestedManyWithoutColorInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonSpeciesCreateNestedManyWithoutHabitatInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeCreateNestedOneWithoutEfficacyInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutEfficacyTargetInput: ["create", "connectOrCreate", "connect"],
  VersionGroupCreateNestedOneWithoutVersionGroupRegionsInput: ["create", "connectOrCreate", "connect"],
  RegionCreateNestedOneWithoutVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  PokedexCreateNestedOneWithoutVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  VersionGroupCreateNestedOneWithoutPokedexVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutAbilitiesInput: ["create", "connectOrCreate", "connect"],
  AbilityCreateNestedOneWithoutPokemonAbilitiesInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  VersionGroupCreateNestedOneWithoutPokemonMovesInput: ["create", "connectOrCreate", "connect"],
  MoveCreateNestedOneWithoutPokemonMovesInput: ["create", "connectOrCreate", "connect"],
  PokemonMoveMethodCreateNestedOneWithoutPokemonMovesInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutStatsInput: ["create", "connectOrCreate", "connect"],
  StatCreateNestedOneWithoutPokemonStatsInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutTypesInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutPokemonTypesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutEggGroupsInput: ["create", "connectOrCreate", "connect"],
  EggGroupCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutItemsInput: ["create", "connectOrCreate", "connect"],
  VersionCreateNestedOneWithoutPokemonItemsInput: ["create", "connectOrCreate", "connect"],
  ItemCreateNestedOneWithoutPokemonItemsInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutGameIndicesInput: ["create", "connectOrCreate", "connect"],
  VersionCreateNestedOneWithoutPokemonGameIndicesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutDexNumbersInput: ["create", "connectOrCreate", "connect"],
  PokedexCreateNestedOneWithoutDexNumbersInput: ["create", "connectOrCreate", "connect"],
  PokemonFormCreateNestedOneWithoutGenerationsInput: ["create", "connectOrCreate", "connect"],
  GenerationCreateNestedOneWithoutPokemonFormGenerationsInput: ["create", "connectOrCreate", "connect"],
  PokemonFormCreateNestedOneWithoutTypesInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutFormTypesInput: ["create", "connectOrCreate", "connect"],
  TypeCreateNestedOneWithoutGameIndicesInput: ["create", "connectOrCreate", "connect"],
  GenerationCreateNestedOneWithoutTypeGameIndicesInput: ["create", "connectOrCreate", "connect"],
  ItemCreateNestedOneWithoutGameIndicesInput: ["create", "connectOrCreate", "connect"],
  GenerationCreateNestedOneWithoutItemGameIndicesInput: ["create", "connectOrCreate", "connect"],
  LocationCreateNestedOneWithoutGameIndicesInput: ["create", "connectOrCreate", "connect"],
  GenerationCreateNestedOneWithoutLocationGameIndicesInput: ["create", "connectOrCreate", "connect"],
  LocationAreaCreateNestedOneWithoutEncounterRatesInput: ["create", "connectOrCreate", "connect"],
  EncounterMethodCreateNestedOneWithoutEncounterRatesInput: ["create", "connectOrCreate", "connect"],
  VersionCreateNestedOneWithoutLocationAreaEncounterRatesInput: ["create", "connectOrCreate", "connect"],
  NatureCreateNestedOneWithoutBattleStylePreferencesInput: ["create", "connectOrCreate", "connect"],
  MoveBattleStyleCreateNestedOneWithoutNaturePreferencesInput: ["create", "connectOrCreate", "connect"],
  NestedIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
  NestedIntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedFloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
  NestedIntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedFloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
  NestedStringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
  PokemonSpeciesCreateWithoutPokemonInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonFormCreateWithoutPokemonInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "versionGroup", "generations", "types"],
  PokemonFormCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonAbilityCreateWithoutPokemonInput: ["is_hidden", "slot", "ability"],
  PokemonAbilityCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonMoveCreateWithoutPokemonInput: ["level", "order", "mastery", "versionGroup", "move", "moveMethod"],
  PokemonMoveCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonStatCreateWithoutPokemonInput: ["base_stat", "effort", "stat"],
  PokemonStatCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonTypeCreateWithoutPokemonInput: ["slot", "type"],
  PokemonTypeCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonItemCreateWithoutPokemonInput: ["rarity", "version", "item"],
  PokemonItemCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonGameIndexCreateWithoutPokemonInput: ["game_index", "version"],
  PokemonGameIndexCreateOrConnectWithoutPokemonInput: ["where", "create"],
  EncounterCreateWithoutPokemonInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "conditionValueMap"],
  EncounterCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonSpeciesUpsertWithoutPokemonInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutPokemonInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutPokemonInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonFormUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonFormUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonFormScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonAbilityUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonAbilityUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonAbilityScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMoveUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonMoveUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonMoveScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStatUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonStatUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonStatScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypeUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonTypeUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonTypeScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "type_id", "slot"],
  PokemonItemUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonItemUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonItemScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndexUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonGameIndexUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonGameIndexScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "game_index"],
  EncounterUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  EncounterUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  EncounterScalarWhereInput: ["AND", "OR", "NOT", "id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  GenerationCreateWithoutPokemonSpeciesInput: ["id", "identifier", "region", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutPokemonSpeciesInput: ["where", "create"],
  PokemonSpeciesCreateWithoutEvolvesToInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEvolvesToInput: ["where", "create"],
  PokemonSpeciesCreateWithoutEvolvesFromInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEvolvesFromInput: ["where", "create"],
  EvolutionChainCreateWithoutSpeciesInput: ["id", "babyTriggerItem"],
  EvolutionChainCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonColorCreateWithoutSpeciesInput: ["id", "identifier"],
  PokemonColorCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonShapeCreateWithoutSpeciesInput: ["id", "identifier"],
  PokemonShapeCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonHabitatCreateWithoutSpeciesInput: ["id", "identifier"],
  PokemonHabitatCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  GrowthRatesCreateWithoutSpeciesInput: ["id", "identifier", "formula", "experience"],
  GrowthRatesCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonCreateWithoutSpeciesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonEggGroupCreateWithoutSpeciesInput: ["eggGroup"],
  PokemonEggGroupCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonDexNumberCreateWithoutSpeciesInput: ["pokedex_number", "pokedex"],
  PokemonDexNumberCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonEvolutionCreateWithoutEvolvedSpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutEvolvedSpeciesInput: ["where", "create"],
  PokemonEvolutionCreateWithoutPartySpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutPartySpeciesInput: ["where", "create"],
  PokemonEvolutionCreateWithoutTradeSpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType"],
  PokemonEvolutionCreateOrConnectWithoutTradeSpeciesInput: ["where", "create"],
  GenerationUpsertWithoutPokemonSpeciesInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutPokemonSpeciesInput: ["where", "data"],
  GenerationUpdateWithoutPokemonSpeciesInput: ["id", "identifier", "region", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  PokemonSpeciesUpsertWithoutEvolvesToInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutEvolvesToInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutEvolvesToInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutEvolvesFromInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutEvolvesFromInput: ["where", "data"],
  PokemonSpeciesScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  EvolutionChainUpsertWithoutSpeciesInput: ["update", "create", "where"],
  EvolutionChainUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  EvolutionChainUpdateWithoutSpeciesInput: ["id", "babyTriggerItem"],
  PokemonColorUpsertWithoutSpeciesInput: ["update", "create", "where"],
  PokemonColorUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  PokemonColorUpdateWithoutSpeciesInput: ["id", "identifier"],
  PokemonShapeUpsertWithoutSpeciesInput: ["update", "create", "where"],
  PokemonShapeUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  PokemonShapeUpdateWithoutSpeciesInput: ["id", "identifier"],
  PokemonHabitatUpsertWithoutSpeciesInput: ["update", "create", "where"],
  PokemonHabitatUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  PokemonHabitatUpdateWithoutSpeciesInput: ["id", "identifier"],
  GrowthRatesUpsertWithoutSpeciesInput: ["update", "create", "where"],
  GrowthRatesUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  GrowthRatesUpdateWithoutSpeciesInput: ["id", "identifier", "formula", "experience"],
  PokemonUpsertWithWhereUniqueWithoutSpeciesInput: ["where", "update", "create"],
  PokemonUpdateWithWhereUniqueWithoutSpeciesInput: ["where", "data"],
  PokemonScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonEggGroupUpsertWithWhereUniqueWithoutSpeciesInput: ["where", "update", "create"],
  PokemonEggGroupUpdateWithWhereUniqueWithoutSpeciesInput: ["where", "data"],
  PokemonEggGroupScalarWhereInput: ["AND", "OR", "NOT", "species_id", "egg_group_id"],
  PokemonDexNumberUpsertWithWhereUniqueWithoutSpeciesInput: ["where", "update", "create"],
  PokemonDexNumberUpdateWithWhereUniqueWithoutSpeciesInput: ["where", "data"],
  PokemonDexNumberScalarWhereInput: ["AND", "OR", "NOT", "species_id", "pokedex_id", "pokedex_number"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutEvolvedSpeciesInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutEvolvedSpeciesInput: ["where", "data"],
  PokemonEvolutionScalarWhereInput: ["AND", "OR", "NOT", "id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutPartySpeciesInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutPartySpeciesInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutTradeSpeciesInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutTradeSpeciesInput: ["where", "data"],
  PokemonCreateWithoutFormsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutFormsInput: ["where", "create"],
  VersionGroupCreateWithoutPokemonFormsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves"],
  VersionGroupCreateOrConnectWithoutPokemonFormsInput: ["where", "create"],
  PokemonFormGenerationCreateWithoutPokemonFormInput: ["game_index", "generation"],
  PokemonFormGenerationCreateOrConnectWithoutPokemonFormInput: ["where", "create"],
  PokemonFormTypeCreateWithoutPokemonFormInput: ["slot", "type"],
  PokemonFormTypeCreateOrConnectWithoutPokemonFormInput: ["where", "create"],
  PokemonUpsertWithoutFormsInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutFormsInput: ["where", "data"],
  PokemonUpdateWithoutFormsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  VersionGroupUpsertWithoutPokemonFormsInput: ["update", "create", "where"],
  VersionGroupUpdateToOneWithWhereWithoutPokemonFormsInput: ["where", "data"],
  VersionGroupUpdateWithoutPokemonFormsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves"],
  PokemonFormGenerationUpsertWithWhereUniqueWithoutPokemonFormInput: ["where", "update", "create"],
  PokemonFormGenerationUpdateWithWhereUniqueWithoutPokemonFormInput: ["where", "data"],
  PokemonFormGenerationScalarWhereInput: ["AND", "OR", "NOT", "pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypeUpsertWithWhereUniqueWithoutPokemonFormInput: ["where", "update", "create"],
  PokemonFormTypeUpdateWithWhereUniqueWithoutPokemonFormInput: ["where", "data"],
  PokemonFormTypeScalarWhereInput: ["AND", "OR", "NOT", "pokemon_form_id", "type_id", "slot"],
  GenerationCreateWithoutMovesInput: ["id", "identifier", "region", "pokemonSpecies", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutMovesInput: ["where", "create"],
  TypeCreateWithoutMovesInput: ["id", "identifier", "generation", "damageClass", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutMovesInput: ["where", "create"],
  MoveTargetCreateWithoutMovesInput: ["id", "identifier"],
  MoveTargetCreateOrConnectWithoutMovesInput: ["where", "create"],
  MoveDamageClassCreateWithoutMovesInput: ["id", "identifier", "types"],
  MoveDamageClassCreateOrConnectWithoutMovesInput: ["where", "create"],
  MoveEffectCreateWithoutMovesInput: ["id"],
  MoveEffectCreateOrConnectWithoutMovesInput: ["where", "create"],
  ContestTypeCreateWithoutMovesInput: ["id", "identifier", "berryFlavors"],
  ContestTypeCreateOrConnectWithoutMovesInput: ["where", "create"],
  ContestEffectCreateWithoutMovesInput: ["id", "appeal", "jam"],
  ContestEffectCreateOrConnectWithoutMovesInput: ["where", "create"],
  SuperContestEffectCreateWithoutMovesInput: ["id", "appeal"],
  SuperContestEffectCreateOrConnectWithoutMovesInput: ["where", "create"],
  PokemonMoveCreateWithoutMoveInput: ["level", "order", "mastery", "pokemon", "versionGroup", "moveMethod"],
  PokemonMoveCreateOrConnectWithoutMoveInput: ["where", "create"],
  MachineCreateWithoutMoveInput: ["machine_number", "versionGroup", "item"],
  MachineCreateOrConnectWithoutMoveInput: ["where", "create"],
  MoveMetaCreateWithoutMoveInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaCreateOrConnectWithoutMoveInput: ["where", "create"],
  MoveFlagMapCreateWithoutMoveInput: ["flag"],
  MoveFlagMapCreateOrConnectWithoutMoveInput: ["where", "create"],
  ContestComboCreateWithoutFirstMoveInput: ["secondMove"],
  ContestComboCreateOrConnectWithoutFirstMoveInput: ["where", "create"],
  ContestComboCreateWithoutSecondMoveInput: ["firstMove"],
  ContestComboCreateOrConnectWithoutSecondMoveInput: ["where", "create"],
  SuperContestComboCreateWithoutFirstMoveInput: ["secondMove"],
  SuperContestComboCreateOrConnectWithoutFirstMoveInput: ["where", "create"],
  SuperContestComboCreateWithoutSecondMoveInput: ["firstMove"],
  SuperContestComboCreateOrConnectWithoutSecondMoveInput: ["where", "create"],
  PokemonEvolutionCreateWithoutKnownMoveInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutKnownMoveInput: ["where", "create"],
  GenerationUpsertWithoutMovesInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  GenerationUpdateWithoutMovesInput: ["id", "identifier", "region", "pokemonSpecies", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  TypeUpsertWithoutMovesInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  TypeUpdateWithoutMovesInput: ["id", "identifier", "generation", "damageClass", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  MoveTargetUpsertWithoutMovesInput: ["update", "create", "where"],
  MoveTargetUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  MoveTargetUpdateWithoutMovesInput: ["id", "identifier"],
  MoveDamageClassUpsertWithoutMovesInput: ["update", "create", "where"],
  MoveDamageClassUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  MoveDamageClassUpdateWithoutMovesInput: ["id", "identifier", "types"],
  MoveEffectUpsertWithoutMovesInput: ["update", "create", "where"],
  MoveEffectUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  MoveEffectUpdateWithoutMovesInput: ["id"],
  ContestTypeUpsertWithoutMovesInput: ["update", "create", "where"],
  ContestTypeUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  ContestTypeUpdateWithoutMovesInput: ["id", "identifier", "berryFlavors"],
  ContestEffectUpsertWithoutMovesInput: ["update", "create", "where"],
  ContestEffectUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  ContestEffectUpdateWithoutMovesInput: ["id", "appeal", "jam"],
  SuperContestEffectUpsertWithoutMovesInput: ["update", "create", "where"],
  SuperContestEffectUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  SuperContestEffectUpdateWithoutMovesInput: ["id", "appeal"],
  PokemonMoveUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  PokemonMoveUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MachineUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  MachineUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MachineScalarWhereInput: ["AND", "OR", "NOT", "machine_number", "version_group_id", "item_id", "move_id"],
  MoveMetaUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  MoveMetaUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MoveMetaScalarWhereInput: ["AND", "OR", "NOT", "move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveFlagMapUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  MoveFlagMapUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MoveFlagMapScalarWhereInput: ["AND", "OR", "NOT", "move_id", "move_flag_id"],
  ContestComboUpsertWithWhereUniqueWithoutFirstMoveInput: ["where", "update", "create"],
  ContestComboUpdateWithWhereUniqueWithoutFirstMoveInput: ["where", "data"],
  ContestComboScalarWhereInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id"],
  ContestComboUpsertWithWhereUniqueWithoutSecondMoveInput: ["where", "update", "create"],
  ContestComboUpdateWithWhereUniqueWithoutSecondMoveInput: ["where", "data"],
  SuperContestComboUpsertWithWhereUniqueWithoutFirstMoveInput: ["where", "update", "create"],
  SuperContestComboUpdateWithWhereUniqueWithoutFirstMoveInput: ["where", "data"],
  SuperContestComboScalarWhereInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id"],
  SuperContestComboUpsertWithWhereUniqueWithoutSecondMoveInput: ["where", "update", "create"],
  SuperContestComboUpdateWithWhereUniqueWithoutSecondMoveInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutKnownMoveInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutKnownMoveInput: ["where", "data"],
  MoveCreateWithoutEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutEffectInput: ["where", "create"],
  MoveUpsertWithWhereUniqueWithoutEffectInput: ["where", "update", "create"],
  MoveUpdateWithWhereUniqueWithoutEffectInput: ["where", "data"],
  MoveScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveCreateWithoutTargetInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutTargetInput: ["where", "create"],
  MoveUpsertWithWhereUniqueWithoutTargetInput: ["where", "update", "create"],
  MoveUpdateWithWhereUniqueWithoutTargetInput: ["where", "data"],
  MoveCreateWithoutDamageClassInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutDamageClassInput: ["where", "create"],
  TypeCreateWithoutDamageClassInput: ["id", "identifier", "generation", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutDamageClassInput: ["where", "create"],
  MoveUpsertWithWhereUniqueWithoutDamageClassInput: ["where", "update", "create"],
  MoveUpdateWithWhereUniqueWithoutDamageClassInput: ["where", "data"],
  TypeUpsertWithWhereUniqueWithoutDamageClassInput: ["where", "update", "create"],
  TypeUpdateWithWhereUniqueWithoutDamageClassInput: ["where", "data"],
  TypeScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "damage_class_id"],
  GenerationCreateWithoutTypesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutTypesInput: ["where", "create"],
  MoveDamageClassCreateWithoutTypesInput: ["id", "identifier", "moves"],
  MoveDamageClassCreateOrConnectWithoutTypesInput: ["where", "create"],
  MoveCreateWithoutTypeInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutTypeInput: ["where", "create"],
  PokemonTypeCreateWithoutTypeInput: ["slot", "pokemon"],
  PokemonTypeCreateOrConnectWithoutTypeInput: ["where", "create"],
  PokemonFormTypeCreateWithoutTypeInput: ["slot", "pokemonForm"],
  PokemonFormTypeCreateOrConnectWithoutTypeInput: ["where", "create"],
  TypeGameIndexCreateWithoutTypeInput: ["game_index", "generation"],
  TypeGameIndexCreateOrConnectWithoutTypeInput: ["where", "create"],
  TypeEfficacyCreateWithoutDamageTypeInput: ["damage_factor", "targetType"],
  TypeEfficacyCreateOrConnectWithoutDamageTypeInput: ["where", "create"],
  TypeEfficacyCreateWithoutTargetTypeInput: ["damage_factor", "damageType"],
  TypeEfficacyCreateOrConnectWithoutTargetTypeInput: ["where", "create"],
  BerryFlavorCreateWithoutTypeInput: ["flavor", "berry", "contestType"],
  BerryFlavorCreateOrConnectWithoutTypeInput: ["where", "create"],
  NatureCreateWithoutDecreasedStatTypesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "increasedStatTypes"],
  NatureCreateOrConnectWithoutDecreasedStatTypesInput: ["where", "create"],
  NatureCreateWithoutIncreasedStatTypesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes"],
  NatureCreateOrConnectWithoutIncreasedStatTypesInput: ["where", "create"],
  PokemonEvolutionCreateWithoutKnownMoveTypeInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutKnownMoveTypeInput: ["where", "create"],
  PokemonEvolutionCreateWithoutPartyTypeInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutPartyTypeInput: ["where", "create"],
  BerryCreateWithoutNaturalGiftTypeInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "flavors"],
  BerryCreateOrConnectWithoutNaturalGiftTypeInput: ["where", "create"],
  GenerationUpsertWithoutTypesInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutTypesInput: ["where", "data"],
  GenerationUpdateWithoutTypesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  MoveDamageClassUpsertWithoutTypesInput: ["update", "create", "where"],
  MoveDamageClassUpdateToOneWithWhereWithoutTypesInput: ["where", "data"],
  MoveDamageClassUpdateWithoutTypesInput: ["id", "identifier", "moves"],
  MoveUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  MoveUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  PokemonTypeUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  PokemonTypeUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  PokemonFormTypeUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  PokemonFormTypeUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  TypeGameIndexUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  TypeGameIndexUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  TypeGameIndexScalarWhereInput: ["AND", "OR", "NOT", "type_id", "generation_id", "game_index"],
  TypeEfficacyUpsertWithWhereUniqueWithoutDamageTypeInput: ["where", "update", "create"],
  TypeEfficacyUpdateWithWhereUniqueWithoutDamageTypeInput: ["where", "data"],
  TypeEfficacyScalarWhereInput: ["AND", "OR", "NOT", "damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyUpsertWithWhereUniqueWithoutTargetTypeInput: ["where", "update", "create"],
  TypeEfficacyUpdateWithWhereUniqueWithoutTargetTypeInput: ["where", "data"],
  BerryFlavorUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  BerryFlavorUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  BerryFlavorScalarWhereInput: ["AND", "OR", "NOT", "berry_id", "contest_type_id", "flavor"],
  NatureUpsertWithWhereUniqueWithoutDecreasedStatTypesInput: ["where", "update", "create"],
  NatureUpdateWithWhereUniqueWithoutDecreasedStatTypesInput: ["where", "data"],
  NatureScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NatureUpsertWithWhereUniqueWithoutIncreasedStatTypesInput: ["where", "update", "create"],
  NatureUpdateWithWhereUniqueWithoutIncreasedStatTypesInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutKnownMoveTypeInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutKnownMoveTypeInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutPartyTypeInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutPartyTypeInput: ["where", "data"],
  BerryUpsertWithWhereUniqueWithoutNaturalGiftTypeInput: ["where", "update", "create"],
  BerryUpdateWithWhereUniqueWithoutNaturalGiftTypeInput: ["where", "data"],
  BerryScalarWhereInput: ["AND", "OR", "NOT", "id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  GenerationCreateWithoutAbilitiesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutAbilitiesInput: ["where", "create"],
  PokemonAbilityCreateWithoutAbilityInput: ["is_hidden", "slot", "pokemon"],
  PokemonAbilityCreateOrConnectWithoutAbilityInput: ["where", "create"],
  GenerationUpsertWithoutAbilitiesInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutAbilitiesInput: ["where", "data"],
  GenerationUpdateWithoutAbilitiesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  PokemonAbilityUpsertWithWhereUniqueWithoutAbilityInput: ["where", "update", "create"],
  PokemonAbilityUpdateWithWhereUniqueWithoutAbilityInput: ["where", "data"],
  ItemCategoryCreateWithoutItemsInput: ["id", "identifier", "pocket"],
  ItemCategoryCreateOrConnectWithoutItemsInput: ["where", "create"],
  ItemFlingEffectCreateWithoutItemsInput: ["id", "identifier"],
  ItemFlingEffectCreateOrConnectWithoutItemsInput: ["where", "create"],
  PokemonItemCreateWithoutItemInput: ["rarity", "pokemon", "version"],
  PokemonItemCreateOrConnectWithoutItemInput: ["where", "create"],
  MachineCreateWithoutItemInput: ["machine_number", "versionGroup", "move"],
  MachineCreateOrConnectWithoutItemInput: ["where", "create"],
  BerryCreateWithoutItemInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "firmness", "naturalGiftType", "flavors"],
  BerryCreateOrConnectWithoutItemInput: ["where", "create"],
  ItemGameIndexCreateWithoutItemInput: ["game_index", "generation"],
  ItemGameIndexCreateOrConnectWithoutItemInput: ["where", "create"],
  ItemFlagMapCreateWithoutItemInput: ["flag"],
  ItemFlagMapCreateOrConnectWithoutItemInput: ["where", "create"],
  EvolutionChainCreateWithoutBabyTriggerItemInput: ["id", "species"],
  EvolutionChainCreateOrConnectWithoutBabyTriggerItemInput: ["where", "create"],
  PokemonEvolutionCreateWithoutTriggerItemInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutTriggerItemInput: ["where", "create"],
  PokemonEvolutionCreateWithoutHeldItemInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutHeldItemInput: ["where", "create"],
  ItemCategoryUpsertWithoutItemsInput: ["update", "create", "where"],
  ItemCategoryUpdateToOneWithWhereWithoutItemsInput: ["where", "data"],
  ItemCategoryUpdateWithoutItemsInput: ["id", "identifier", "pocket"],
  ItemFlingEffectUpsertWithoutItemsInput: ["update", "create", "where"],
  ItemFlingEffectUpdateToOneWithWhereWithoutItemsInput: ["where", "data"],
  ItemFlingEffectUpdateWithoutItemsInput: ["id", "identifier"],
  PokemonItemUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  PokemonItemUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  MachineUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  MachineUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  BerryUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  BerryUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  ItemGameIndexUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  ItemGameIndexUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  ItemGameIndexScalarWhereInput: ["AND", "OR", "NOT", "item_id", "generation_id", "game_index"],
  ItemFlagMapUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  ItemFlagMapUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  ItemFlagMapScalarWhereInput: ["AND", "OR", "NOT", "item_id", "item_flag_id"],
  EvolutionChainUpsertWithWhereUniqueWithoutBabyTriggerItemInput: ["where", "update", "create"],
  EvolutionChainUpdateWithWhereUniqueWithoutBabyTriggerItemInput: ["where", "data"],
  EvolutionChainScalarWhereInput: ["AND", "OR", "NOT", "id", "baby_trigger_item_id"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutTriggerItemInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutTriggerItemInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutHeldItemInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutHeldItemInput: ["where", "data"],
  ItemPocketCreateWithoutCategoriesInput: ["id", "identifier"],
  ItemPocketCreateOrConnectWithoutCategoriesInput: ["where", "create"],
  ItemCreateWithoutCategoryInput: ["id", "identifier", "cost", "fling_power", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCreateOrConnectWithoutCategoryInput: ["where", "create"],
  ItemPocketUpsertWithoutCategoriesInput: ["update", "create", "where"],
  ItemPocketUpdateToOneWithWhereWithoutCategoriesInput: ["where", "data"],
  ItemPocketUpdateWithoutCategoriesInput: ["id", "identifier"],
  ItemUpsertWithWhereUniqueWithoutCategoryInput: ["where", "update", "create"],
  ItemUpdateWithWhereUniqueWithoutCategoryInput: ["where", "data"],
  ItemScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemCategoryCreateWithoutPocketInput: ["id", "identifier", "items"],
  ItemCategoryCreateOrConnectWithoutPocketInput: ["where", "create"],
  ItemCategoryUpsertWithWhereUniqueWithoutPocketInput: ["where", "update", "create"],
  ItemCategoryUpdateWithWhereUniqueWithoutPocketInput: ["where", "data"],
  ItemCategoryScalarWhereInput: ["AND", "OR", "NOT", "id", "pocket_id", "identifier"],
  PokemonStatCreateWithoutStatInput: ["base_stat", "effort", "pokemon"],
  PokemonStatCreateOrConnectWithoutStatInput: ["where", "create"],
  MoveMetaStatChangesCreateWithoutStatInput: ["change", "meta"],
  MoveMetaStatChangesCreateOrConnectWithoutStatInput: ["where", "create"],
  CharacteristicCreateWithoutStatInput: ["id", "gene_mod_5"],
  CharacteristicCreateOrConnectWithoutStatInput: ["where", "create"],
  NatureCreateWithoutDecreasedStatInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NatureCreateOrConnectWithoutDecreasedStatInput: ["where", "create"],
  NatureCreateWithoutIncreasedStatInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NatureCreateOrConnectWithoutIncreasedStatInput: ["where", "create"],
  PokemonStatUpsertWithWhereUniqueWithoutStatInput: ["where", "update", "create"],
  PokemonStatUpdateWithWhereUniqueWithoutStatInput: ["where", "data"],
  MoveMetaStatChangesUpsertWithWhereUniqueWithoutStatInput: ["where", "update", "create"],
  MoveMetaStatChangesUpdateWithWhereUniqueWithoutStatInput: ["where", "data"],
  MoveMetaStatChangesScalarWhereInput: ["AND", "OR", "NOT", "move_id", "stat_id", "change"],
  CharacteristicUpsertWithWhereUniqueWithoutStatInput: ["where", "update", "create"],
  CharacteristicUpdateWithWhereUniqueWithoutStatInput: ["where", "data"],
  CharacteristicScalarWhereInput: ["AND", "OR", "NOT", "id", "stat_id", "gene_mod_5"],
  NatureUpsertWithWhereUniqueWithoutDecreasedStatInput: ["where", "update", "create"],
  NatureUpdateWithWhereUniqueWithoutDecreasedStatInput: ["where", "data"],
  NatureUpsertWithWhereUniqueWithoutIncreasedStatInput: ["where", "update", "create"],
  NatureUpdateWithWhereUniqueWithoutIncreasedStatInput: ["where", "data"],
  RegionCreateWithoutGenerationsInput: ["id", "identifier", "locations", "pokedexes", "versionGroups"],
  RegionCreateOrConnectWithoutGenerationsInput: ["where", "create"],
  PokemonSpeciesCreateWithoutGenerationInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutGenerationInput: ["where", "create"],
  MoveCreateWithoutGenerationInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutGenerationInput: ["where", "create"],
  TypeCreateWithoutGenerationInput: ["id", "identifier", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutGenerationInput: ["where", "create"],
  AbilityCreateWithoutGenerationInput: ["id", "identifier", "is_main_series", "pokemonAbilities"],
  AbilityCreateOrConnectWithoutGenerationInput: ["where", "create"],
  PokemonFormGenerationCreateWithoutGenerationInput: ["game_index", "pokemonForm"],
  PokemonFormGenerationCreateOrConnectWithoutGenerationInput: ["where", "create"],
  ItemGameIndexCreateWithoutGenerationInput: ["game_index", "item"],
  ItemGameIndexCreateOrConnectWithoutGenerationInput: ["where", "create"],
  TypeGameIndexCreateWithoutGenerationInput: ["game_index", "type"],
  TypeGameIndexCreateOrConnectWithoutGenerationInput: ["where", "create"],
  LocationGameIndexCreateWithoutGenerationInput: ["game_index", "location"],
  LocationGameIndexCreateOrConnectWithoutGenerationInput: ["where", "create"],
  VersionGroupCreateWithoutGenerationInput: ["id", "identifier", "order", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupCreateOrConnectWithoutGenerationInput: ["where", "create"],
  RegionUpsertWithoutGenerationsInput: ["update", "create", "where"],
  RegionUpdateToOneWithWhereWithoutGenerationsInput: ["where", "data"],
  RegionUpdateWithoutGenerationsInput: ["id", "identifier", "locations", "pokedexes", "versionGroups"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  MoveUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  MoveUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  TypeUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  TypeUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  AbilityUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  AbilityUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  AbilityScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "is_main_series"],
  PokemonFormGenerationUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  PokemonFormGenerationUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  ItemGameIndexUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  ItemGameIndexUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  TypeGameIndexUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  TypeGameIndexUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  LocationGameIndexUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  LocationGameIndexUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  LocationGameIndexScalarWhereInput: ["AND", "OR", "NOT", "location_id", "generation_id", "game_index"],
  VersionGroupUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  VersionGroupUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  VersionGroupScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "order"],
  GenerationCreateWithoutVersionGroupsInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices"],
  GenerationCreateOrConnectWithoutVersionGroupsInput: ["where", "create"],
  VersionCreateWithoutVersionGroupInput: ["id", "identifier", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  EncounterSlotCreateWithoutVersionGroupInput: ["id", "slot", "rarity", "encounterMethod", "encounters"],
  EncounterSlotCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  MachineCreateWithoutVersionGroupInput: ["machine_number", "item", "move"],
  MachineCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  VersionGroupPokemonMoveMethodCreateWithoutVersionGroupInput: ["moveMethod"],
  VersionGroupPokemonMoveMethodCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  VersionGroupRegionCreateWithoutVersionGroupInput: ["region"],
  VersionGroupRegionCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  PokedexVersionGroupCreateWithoutVersionGroupInput: ["pokedex"],
  PokedexVersionGroupCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  PokemonMoveCreateWithoutVersionGroupInput: ["level", "order", "mastery", "pokemon", "move", "moveMethod"],
  PokemonMoveCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  PokemonFormCreateWithoutVersionGroupInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "generations", "types"],
  PokemonFormCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  GenerationUpsertWithoutVersionGroupsInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutVersionGroupsInput: ["where", "data"],
  GenerationUpdateWithoutVersionGroupsInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices"],
  VersionUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  VersionUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionScalarWhereInput: ["AND", "OR", "NOT", "id", "version_group_id", "identifier"],
  EncounterSlotUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  EncounterSlotUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  EncounterSlotScalarWhereInput: ["AND", "OR", "NOT", "id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  MachineUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  MachineUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionGroupPokemonMoveMethodUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  VersionGroupPokemonMoveMethodUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionGroupPokemonMoveMethodScalarWhereInput: ["AND", "OR", "NOT", "version_group_id", "pokemon_move_method_id"],
  VersionGroupRegionUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  VersionGroupRegionUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionGroupRegionScalarWhereInput: ["AND", "OR", "NOT", "version_group_id", "region_id"],
  PokedexVersionGroupUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  PokedexVersionGroupUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  PokedexVersionGroupScalarWhereInput: ["AND", "OR", "NOT", "pokedex_id", "version_group_id"],
  PokemonMoveUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  PokemonMoveUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  PokemonFormUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  PokemonFormUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionGroupCreateWithoutVersionsInput: ["id", "identifier", "order", "generation", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupCreateOrConnectWithoutVersionsInput: ["where", "create"],
  EncounterCreateWithoutVersionInput: ["id", "min_level", "max_level", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterCreateOrConnectWithoutVersionInput: ["where", "create"],
  PokemonItemCreateWithoutVersionInput: ["rarity", "pokemon", "item"],
  PokemonItemCreateOrConnectWithoutVersionInput: ["where", "create"],
  PokemonGameIndexCreateWithoutVersionInput: ["game_index", "pokemon"],
  PokemonGameIndexCreateOrConnectWithoutVersionInput: ["where", "create"],
  LocationAreaEncounterRateCreateWithoutVersionInput: ["rate", "locationArea", "encounterMethod"],
  LocationAreaEncounterRateCreateOrConnectWithoutVersionInput: ["where", "create"],
  VersionGroupUpsertWithoutVersionsInput: ["update", "create", "where"],
  VersionGroupUpdateToOneWithWhereWithoutVersionsInput: ["where", "data"],
  VersionGroupUpdateWithoutVersionsInput: ["id", "identifier", "order", "generation", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  EncounterUpsertWithWhereUniqueWithoutVersionInput: ["where", "update", "create"],
  EncounterUpdateWithWhereUniqueWithoutVersionInput: ["where", "data"],
  PokemonItemUpsertWithWhereUniqueWithoutVersionInput: ["where", "update", "create"],
  PokemonItemUpdateWithWhereUniqueWithoutVersionInput: ["where", "data"],
  PokemonGameIndexUpsertWithWhereUniqueWithoutVersionInput: ["where", "update", "create"],
  PokemonGameIndexUpdateWithWhereUniqueWithoutVersionInput: ["where", "data"],
  LocationAreaEncounterRateUpsertWithWhereUniqueWithoutVersionInput: ["where", "update", "create"],
  LocationAreaEncounterRateUpdateWithWhereUniqueWithoutVersionInput: ["where", "data"],
  LocationAreaEncounterRateScalarWhereInput: ["AND", "OR", "NOT", "location_area_id", "encounter_method_id", "version_id", "rate"],
  GenerationCreateWithoutRegionInput: ["id", "identifier", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutRegionInput: ["where", "create"],
  LocationCreateWithoutRegionInput: ["id", "identifier", "areas", "gameIndices", "evolution"],
  LocationCreateOrConnectWithoutRegionInput: ["where", "create"],
  PokedexCreateWithoutRegionInput: ["id", "identifier", "is_main_series", "dexNumbers", "versionGroups"],
  PokedexCreateOrConnectWithoutRegionInput: ["where", "create"],
  VersionGroupRegionCreateWithoutRegionInput: ["versionGroup"],
  VersionGroupRegionCreateOrConnectWithoutRegionInput: ["where", "create"],
  GenerationUpsertWithWhereUniqueWithoutRegionInput: ["where", "update", "create"],
  GenerationUpdateWithWhereUniqueWithoutRegionInput: ["where", "data"],
  GenerationScalarWhereInput: ["AND", "OR", "NOT", "id", "main_region_id", "identifier"],
  LocationUpsertWithWhereUniqueWithoutRegionInput: ["where", "update", "create"],
  LocationUpdateWithWhereUniqueWithoutRegionInput: ["where", "data"],
  LocationScalarWhereInput: ["AND", "OR", "NOT", "id", "region_id", "identifier"],
  PokedexUpsertWithWhereUniqueWithoutRegionInput: ["where", "update", "create"],
  PokedexUpdateWithWhereUniqueWithoutRegionInput: ["where", "data"],
  PokedexScalarWhereInput: ["AND", "OR", "NOT", "id", "region_id", "identifier", "is_main_series"],
  VersionGroupRegionUpsertWithWhereUniqueWithoutRegionInput: ["where", "update", "create"],
  VersionGroupRegionUpdateWithWhereUniqueWithoutRegionInput: ["where", "data"],
  RegionCreateWithoutLocationsInput: ["id", "identifier", "generations", "pokedexes", "versionGroups"],
  RegionCreateOrConnectWithoutLocationsInput: ["where", "create"],
  LocationAreaCreateWithoutLocationInput: ["id", "game_index", "identifier", "encounters", "encounterRates"],
  LocationAreaCreateOrConnectWithoutLocationInput: ["where", "create"],
  LocationGameIndexCreateWithoutLocationInput: ["game_index", "generation"],
  LocationGameIndexCreateOrConnectWithoutLocationInput: ["where", "create"],
  PokemonEvolutionCreateWithoutLocationInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutLocationInput: ["where", "create"],
  RegionUpsertWithoutLocationsInput: ["update", "create", "where"],
  RegionUpdateToOneWithWhereWithoutLocationsInput: ["where", "data"],
  RegionUpdateWithoutLocationsInput: ["id", "identifier", "generations", "pokedexes", "versionGroups"],
  LocationAreaUpsertWithWhereUniqueWithoutLocationInput: ["where", "update", "create"],
  LocationAreaUpdateWithWhereUniqueWithoutLocationInput: ["where", "data"],
  LocationAreaScalarWhereInput: ["AND", "OR", "NOT", "id", "location_id", "game_index", "identifier"],
  LocationGameIndexUpsertWithWhereUniqueWithoutLocationInput: ["where", "update", "create"],
  LocationGameIndexUpdateWithWhereUniqueWithoutLocationInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutLocationInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutLocationInput: ["where", "data"],
  LocationCreateWithoutAreasInput: ["id", "identifier", "region", "gameIndices", "evolution"],
  LocationCreateOrConnectWithoutAreasInput: ["where", "create"],
  EncounterCreateWithoutLocationAreaInput: ["id", "min_level", "max_level", "version", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterCreateOrConnectWithoutLocationAreaInput: ["where", "create"],
  LocationAreaEncounterRateCreateWithoutLocationAreaInput: ["rate", "encounterMethod", "version"],
  LocationAreaEncounterRateCreateOrConnectWithoutLocationAreaInput: ["where", "create"],
  LocationUpsertWithoutAreasInput: ["update", "create", "where"],
  LocationUpdateToOneWithWhereWithoutAreasInput: ["where", "data"],
  LocationUpdateWithoutAreasInput: ["id", "identifier", "region", "gameIndices", "evolution"],
  EncounterUpsertWithWhereUniqueWithoutLocationAreaInput: ["where", "update", "create"],
  EncounterUpdateWithWhereUniqueWithoutLocationAreaInput: ["where", "data"],
  LocationAreaEncounterRateUpsertWithWhereUniqueWithoutLocationAreaInput: ["where", "update", "create"],
  LocationAreaEncounterRateUpdateWithWhereUniqueWithoutLocationAreaInput: ["where", "data"],
  RegionCreateWithoutPokedexesInput: ["id", "identifier", "generations", "locations", "versionGroups"],
  RegionCreateOrConnectWithoutPokedexesInput: ["where", "create"],
  PokemonDexNumberCreateWithoutPokedexInput: ["pokedex_number", "species"],
  PokemonDexNumberCreateOrConnectWithoutPokedexInput: ["where", "create"],
  PokedexVersionGroupCreateWithoutPokedexInput: ["versionGroup"],
  PokedexVersionGroupCreateOrConnectWithoutPokedexInput: ["where", "create"],
  RegionUpsertWithoutPokedexesInput: ["update", "create", "where"],
  RegionUpdateToOneWithWhereWithoutPokedexesInput: ["where", "data"],
  RegionUpdateWithoutPokedexesInput: ["id", "identifier", "generations", "locations", "versionGroups"],
  PokemonDexNumberUpsertWithWhereUniqueWithoutPokedexInput: ["where", "update", "create"],
  PokemonDexNumberUpdateWithWhereUniqueWithoutPokedexInput: ["where", "data"],
  PokedexVersionGroupUpsertWithWhereUniqueWithoutPokedexInput: ["where", "update", "create"],
  PokedexVersionGroupUpdateWithWhereUniqueWithoutPokedexInput: ["where", "data"],
  ItemCreateWithoutBabyTriggerItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "triggerItems", "heldItems"],
  ItemCreateOrConnectWithoutBabyTriggerItemsInput: ["where", "create"],
  PokemonSpeciesCreateWithoutEvolutionChainInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEvolutionChainInput: ["where", "create"],
  ItemUpsertWithoutBabyTriggerItemsInput: ["update", "create", "where"],
  ItemUpdateToOneWithWhereWithoutBabyTriggerItemsInput: ["where", "data"],
  ItemUpdateWithoutBabyTriggerItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "triggerItems", "heldItems"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutEvolutionChainInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutEvolutionChainInput: ["where", "data"],
  PokemonEvolutionCreateWithoutEvolutionTriggerInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutEvolutionTriggerInput: ["where", "create"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutEvolutionTriggerInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutEvolutionTriggerInput: ["where", "data"],
  PokemonSpeciesCreateWithoutEvolutionInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEvolutionInput: ["where", "create"],
  EvolutionTriggerCreateWithoutEvolutionInput: ["id", "identifier"],
  EvolutionTriggerCreateOrConnectWithoutEvolutionInput: ["where", "create"],
  ItemCreateWithoutTriggerItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "heldItems"],
  ItemCreateOrConnectWithoutTriggerItemsInput: ["where", "create"],
  GenderCreateWithoutEvolutionInput: ["id", "identifier"],
  GenderCreateOrConnectWithoutEvolutionInput: ["where", "create"],
  LocationCreateWithoutEvolutionInput: ["id", "identifier", "region", "areas", "gameIndices"],
  LocationCreateOrConnectWithoutEvolutionInput: ["where", "create"],
  ItemCreateWithoutHeldItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems"],
  ItemCreateOrConnectWithoutHeldItemsInput: ["where", "create"],
  MoveCreateWithoutKnownMovesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond"],
  MoveCreateOrConnectWithoutKnownMovesInput: ["where", "create"],
  TypeCreateWithoutKnownMoveTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutKnownMoveTypesInput: ["where", "create"],
  PokemonSpeciesCreateWithoutPartySpeciesInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutPartySpeciesInput: ["where", "create"],
  TypeCreateWithoutPartyTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutPartyTypesInput: ["where", "create"],
  PokemonSpeciesCreateWithoutTradeSpeciesInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies"],
  PokemonSpeciesCreateOrConnectWithoutTradeSpeciesInput: ["where", "create"],
  PokemonSpeciesUpsertWithoutEvolutionInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutEvolutionInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutEvolutionInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "partySpecies", "tradeSpecies"],
  EvolutionTriggerUpsertWithoutEvolutionInput: ["update", "create", "where"],
  EvolutionTriggerUpdateToOneWithWhereWithoutEvolutionInput: ["where", "data"],
  EvolutionTriggerUpdateWithoutEvolutionInput: ["id", "identifier"],
  ItemUpsertWithoutTriggerItemsInput: ["update", "create", "where"],
  ItemUpdateToOneWithWhereWithoutTriggerItemsInput: ["where", "data"],
  ItemUpdateWithoutTriggerItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "heldItems"],
  GenderUpsertWithoutEvolutionInput: ["update", "create", "where"],
  GenderUpdateToOneWithWhereWithoutEvolutionInput: ["where", "data"],
  GenderUpdateWithoutEvolutionInput: ["id", "identifier"],
  LocationUpsertWithoutEvolutionInput: ["update", "create", "where"],
  LocationUpdateToOneWithWhereWithoutEvolutionInput: ["where", "data"],
  LocationUpdateWithoutEvolutionInput: ["id", "identifier", "region", "areas", "gameIndices"],
  ItemUpsertWithoutHeldItemsInput: ["update", "create", "where"],
  ItemUpdateToOneWithWhereWithoutHeldItemsInput: ["where", "data"],
  ItemUpdateWithoutHeldItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems"],
  MoveUpsertWithoutKnownMovesInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutKnownMovesInput: ["where", "data"],
  MoveUpdateWithoutKnownMovesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond"],
  TypeUpsertWithoutKnownMoveTypesInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutKnownMoveTypesInput: ["where", "data"],
  TypeUpdateWithoutKnownMoveTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "partyTypes", "naturalGiftTypes"],
  PokemonSpeciesUpsertWithoutPartySpeciesInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutPartySpeciesInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutPartySpeciesInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "tradeSpecies"],
  TypeUpsertWithoutPartyTypesInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutPartyTypesInput: ["where", "data"],
  TypeUpdateWithoutPartyTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "naturalGiftTypes"],
  PokemonSpeciesUpsertWithoutTradeSpeciesInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutTradeSpeciesInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutTradeSpeciesInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies"],
  PokemonSpeciesCreateWithoutGrowthRateInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutGrowthRateInput: ["where", "create"],
  ExperienceCreateWithoutGrowthRateInput: ["level", "experience"],
  ExperienceCreateOrConnectWithoutGrowthRateInput: ["where", "create"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutGrowthRateInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutGrowthRateInput: ["where", "data"],
  ExperienceUpsertWithWhereUniqueWithoutGrowthRateInput: ["where", "update", "create"],
  ExperienceUpdateWithWhereUniqueWithoutGrowthRateInput: ["where", "data"],
  ExperienceScalarWhereInput: ["AND", "OR", "NOT", "growth_rate_id", "level", "experience"],
  GrowthRatesCreateWithoutExperienceInput: ["id", "identifier", "formula", "species"],
  GrowthRatesCreateOrConnectWithoutExperienceInput: ["where", "create"],
  GrowthRatesUpsertWithoutExperienceInput: ["update", "create", "where"],
  GrowthRatesUpdateToOneWithWhereWithoutExperienceInput: ["where", "data"],
  GrowthRatesUpdateWithoutExperienceInput: ["id", "identifier", "formula", "species"],
  PokemonEvolutionCreateWithoutGenderInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutGenderInput: ["where", "create"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutGenderInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutGenderInput: ["where", "data"],
  PokemonEggGroupCreateWithoutEggGroupInput: ["species"],
  PokemonEggGroupCreateOrConnectWithoutEggGroupInput: ["where", "create"],
  PokemonEggGroupUpsertWithWhereUniqueWithoutEggGroupInput: ["where", "update", "create"],
  PokemonEggGroupUpdateWithWhereUniqueWithoutEggGroupInput: ["where", "data"],
  StatCreateWithoutNaturesInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "naturesIncreased"],
  StatCreateOrConnectWithoutNaturesInput: ["where", "create"],
  StatCreateWithoutNaturesIncreasedInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures"],
  StatCreateOrConnectWithoutNaturesIncreasedInput: ["where", "create"],
  NatureBattleStylePreferenceCreateWithoutNatureInput: ["low_hp_preference", "high_hp_preference", "battleStyle"],
  NatureBattleStylePreferenceCreateOrConnectWithoutNatureInput: ["where", "create"],
  TypeCreateWithoutNaturesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutNaturesInput: ["where", "create"],
  TypeCreateWithoutNaturesIncreasedInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutNaturesIncreasedInput: ["where", "create"],
  StatUpsertWithoutNaturesInput: ["update", "create", "where"],
  StatUpdateToOneWithWhereWithoutNaturesInput: ["where", "data"],
  StatUpdateWithoutNaturesInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "naturesIncreased"],
  StatUpsertWithoutNaturesIncreasedInput: ["update", "create", "where"],
  StatUpdateToOneWithWhereWithoutNaturesIncreasedInput: ["where", "data"],
  StatUpdateWithoutNaturesIncreasedInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures"],
  NatureBattleStylePreferenceUpsertWithWhereUniqueWithoutNatureInput: ["where", "update", "create"],
  NatureBattleStylePreferenceUpdateWithWhereUniqueWithoutNatureInput: ["where", "data"],
  NatureBattleStylePreferenceScalarWhereInput: ["AND", "OR", "NOT", "nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  TypeUpsertWithWhereUniqueWithoutNaturesInput: ["where", "update", "create"],
  TypeUpdateWithWhereUniqueWithoutNaturesInput: ["where", "data"],
  TypeUpsertWithWhereUniqueWithoutNaturesIncreasedInput: ["where", "update", "create"],
  TypeUpdateWithWhereUniqueWithoutNaturesIncreasedInput: ["where", "data"],
  MoveCreateWithoutContestTypeInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutContestTypeInput: ["where", "create"],
  BerryFlavorCreateWithoutContestTypeInput: ["flavor", "berry", "type"],
  BerryFlavorCreateOrConnectWithoutContestTypeInput: ["where", "create"],
  MoveUpsertWithWhereUniqueWithoutContestTypeInput: ["where", "update", "create"],
  MoveUpdateWithWhereUniqueWithoutContestTypeInput: ["where", "data"],
  BerryFlavorUpsertWithWhereUniqueWithoutContestTypeInput: ["where", "update", "create"],
  BerryFlavorUpdateWithWhereUniqueWithoutContestTypeInput: ["where", "data"],
  MoveCreateWithoutContestEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutContestEffectInput: ["where", "create"],
  MoveUpsertWithWhereUniqueWithoutContestEffectInput: ["where", "update", "create"],
  MoveUpdateWithWhereUniqueWithoutContestEffectInput: ["where", "data"],
  MoveCreateWithoutSuperContestEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutSuperContestEffectInput: ["where", "create"],
  MoveUpsertWithWhereUniqueWithoutSuperContestEffectInput: ["where", "update", "create"],
  MoveUpdateWithWhereUniqueWithoutSuperContestEffectInput: ["where", "data"],
  VersionGroupCreateWithoutMachinesInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupCreateOrConnectWithoutMachinesInput: ["where", "create"],
  ItemCreateWithoutMachinesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCreateOrConnectWithoutMachinesInput: ["where", "create"],
  MoveCreateWithoutMachinesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutMachinesInput: ["where", "create"],
  VersionGroupUpsertWithoutMachinesInput: ["update", "create", "where"],
  VersionGroupUpdateToOneWithWhereWithoutMachinesInput: ["where", "data"],
  VersionGroupUpdateWithoutMachinesInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  ItemUpsertWithoutMachinesInput: ["update", "create", "where"],
  ItemUpdateToOneWithWhereWithoutMachinesInput: ["where", "data"],
  ItemUpdateWithoutMachinesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  MoveUpsertWithoutMachinesInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutMachinesInput: ["where", "data"],
  MoveUpdateWithoutMachinesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  EncounterSlotCreateWithoutEncounterMethodInput: ["id", "slot", "rarity", "versionGroup", "encounters"],
  EncounterSlotCreateOrConnectWithoutEncounterMethodInput: ["where", "create"],
  LocationAreaEncounterRateCreateWithoutEncounterMethodInput: ["rate", "locationArea", "version"],
  LocationAreaEncounterRateCreateOrConnectWithoutEncounterMethodInput: ["where", "create"],
  EncounterSlotUpsertWithWhereUniqueWithoutEncounterMethodInput: ["where", "update", "create"],
  EncounterSlotUpdateWithWhereUniqueWithoutEncounterMethodInput: ["where", "data"],
  LocationAreaEncounterRateUpsertWithWhereUniqueWithoutEncounterMethodInput: ["where", "update", "create"],
  LocationAreaEncounterRateUpdateWithWhereUniqueWithoutEncounterMethodInput: ["where", "data"],
  VersionGroupCreateWithoutEncounterSlotsInput: ["id", "identifier", "order", "generation", "versions", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupCreateOrConnectWithoutEncounterSlotsInput: ["where", "create"],
  EncounterMethodCreateWithoutSlotsInput: ["id", "identifier", "order", "encounterRates"],
  EncounterMethodCreateOrConnectWithoutSlotsInput: ["where", "create"],
  EncounterCreateWithoutEncounterSlotInput: ["id", "min_level", "max_level", "version", "locationArea", "pokemon", "conditionValueMap"],
  EncounterCreateOrConnectWithoutEncounterSlotInput: ["where", "create"],
  VersionGroupUpsertWithoutEncounterSlotsInput: ["update", "create", "where"],
  VersionGroupUpdateToOneWithWhereWithoutEncounterSlotsInput: ["where", "data"],
  VersionGroupUpdateWithoutEncounterSlotsInput: ["id", "identifier", "order", "generation", "versions", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  EncounterMethodUpsertWithoutSlotsInput: ["update", "create", "where"],
  EncounterMethodUpdateToOneWithWhereWithoutSlotsInput: ["where", "data"],
  EncounterMethodUpdateWithoutSlotsInput: ["id", "identifier", "order", "encounterRates"],
  EncounterUpsertWithWhereUniqueWithoutEncounterSlotInput: ["where", "update", "create"],
  EncounterUpdateWithWhereUniqueWithoutEncounterSlotInput: ["where", "data"],
  VersionCreateWithoutEncountersInput: ["id", "identifier", "versionGroup", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionCreateOrConnectWithoutEncountersInput: ["where", "create"],
  LocationAreaCreateWithoutEncountersInput: ["id", "game_index", "identifier", "location", "encounterRates"],
  LocationAreaCreateOrConnectWithoutEncountersInput: ["where", "create"],
  EncounterSlotCreateWithoutEncountersInput: ["id", "slot", "rarity", "versionGroup", "encounterMethod"],
  EncounterSlotCreateOrConnectWithoutEncountersInput: ["where", "create"],
  PokemonCreateWithoutEncountersInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices"],
  PokemonCreateOrConnectWithoutEncountersInput: ["where", "create"],
  EncounterConditionValueMapCreateWithoutEncounterInput: ["conditionValue"],
  EncounterConditionValueMapCreateOrConnectWithoutEncounterInput: ["where", "create"],
  VersionUpsertWithoutEncountersInput: ["update", "create", "where"],
  VersionUpdateToOneWithWhereWithoutEncountersInput: ["where", "data"],
  VersionUpdateWithoutEncountersInput: ["id", "identifier", "versionGroup", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  LocationAreaUpsertWithoutEncountersInput: ["update", "create", "where"],
  LocationAreaUpdateToOneWithWhereWithoutEncountersInput: ["where", "data"],
  LocationAreaUpdateWithoutEncountersInput: ["id", "game_index", "identifier", "location", "encounterRates"],
  EncounterSlotUpsertWithoutEncountersInput: ["update", "create", "where"],
  EncounterSlotUpdateToOneWithWhereWithoutEncountersInput: ["where", "data"],
  EncounterSlotUpdateWithoutEncountersInput: ["id", "slot", "rarity", "versionGroup", "encounterMethod"],
  PokemonUpsertWithoutEncountersInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutEncountersInput: ["where", "data"],
  PokemonUpdateWithoutEncountersInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices"],
  EncounterConditionValueMapUpsertWithWhereUniqueWithoutEncounterInput: ["where", "update", "create"],
  EncounterConditionValueMapUpdateWithWhereUniqueWithoutEncounterInput: ["where", "data"],
  EncounterConditionValueMapScalarWhereInput: ["AND", "OR", "NOT", "encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueCreateWithoutConditionInput: ["id", "identifier", "is_default", "conditionValueMap"],
  EncounterConditionValueCreateOrConnectWithoutConditionInput: ["where", "create"],
  EncounterConditionValueUpsertWithWhereUniqueWithoutConditionInput: ["where", "update", "create"],
  EncounterConditionValueUpdateWithWhereUniqueWithoutConditionInput: ["where", "data"],
  EncounterConditionValueScalarWhereInput: ["AND", "OR", "NOT", "id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionCreateWithoutValuesInput: ["id", "identifier"],
  EncounterConditionCreateOrConnectWithoutValuesInput: ["where", "create"],
  EncounterConditionValueMapCreateWithoutConditionValueInput: ["encounter"],
  EncounterConditionValueMapCreateOrConnectWithoutConditionValueInput: ["where", "create"],
  EncounterConditionUpsertWithoutValuesInput: ["update", "create", "where"],
  EncounterConditionUpdateToOneWithWhereWithoutValuesInput: ["where", "data"],
  EncounterConditionUpdateWithoutValuesInput: ["id", "identifier"],
  EncounterConditionValueMapUpsertWithWhereUniqueWithoutConditionValueInput: ["where", "update", "create"],
  EncounterConditionValueMapUpdateWithWhereUniqueWithoutConditionValueInput: ["where", "data"],
  EncounterCreateWithoutConditionValueMapInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon"],
  EncounterCreateOrConnectWithoutConditionValueMapInput: ["where", "create"],
  EncounterConditionValueCreateWithoutConditionValueMapInput: ["id", "identifier", "is_default", "condition"],
  EncounterConditionValueCreateOrConnectWithoutConditionValueMapInput: ["where", "create"],
  EncounterUpsertWithoutConditionValueMapInput: ["update", "create", "where"],
  EncounterUpdateToOneWithWhereWithoutConditionValueMapInput: ["where", "data"],
  EncounterUpdateWithoutConditionValueMapInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon"],
  EncounterConditionValueUpsertWithoutConditionValueMapInput: ["update", "create", "where"],
  EncounterConditionValueUpdateToOneWithWhereWithoutConditionValueMapInput: ["where", "data"],
  EncounterConditionValueUpdateWithoutConditionValueMapInput: ["id", "identifier", "is_default", "condition"],
  MoveMetaCreateWithoutMetaCategoryInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaAilment", "statChanges"],
  MoveMetaCreateOrConnectWithoutMetaCategoryInput: ["where", "create"],
  MoveMetaUpsertWithWhereUniqueWithoutMetaCategoryInput: ["where", "update", "create"],
  MoveMetaUpdateWithWhereUniqueWithoutMetaCategoryInput: ["where", "data"],
  MoveMetaCreateWithoutMetaAilmentInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "statChanges"],
  MoveMetaCreateOrConnectWithoutMetaAilmentInput: ["where", "create"],
  MoveMetaUpsertWithWhereUniqueWithoutMetaAilmentInput: ["where", "update", "create"],
  MoveMetaUpdateWithWhereUniqueWithoutMetaAilmentInput: ["where", "data"],
  MoveCreateWithoutMetaInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutMetaInput: ["where", "create"],
  MoveMetaCategoryCreateWithoutMetaInput: ["id", "identifier"],
  MoveMetaCategoryCreateOrConnectWithoutMetaInput: ["where", "create"],
  MoveMetaAilmentCreateWithoutMetaInput: ["id", "identifier"],
  MoveMetaAilmentCreateOrConnectWithoutMetaInput: ["where", "create"],
  MoveMetaStatChangesCreateWithoutMetaInput: ["change", "stat"],
  MoveMetaStatChangesCreateOrConnectWithoutMetaInput: ["where", "create"],
  MoveUpsertWithoutMetaInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutMetaInput: ["where", "data"],
  MoveUpdateWithoutMetaInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveMetaCategoryUpsertWithoutMetaInput: ["update", "create", "where"],
  MoveMetaCategoryUpdateToOneWithWhereWithoutMetaInput: ["where", "data"],
  MoveMetaCategoryUpdateWithoutMetaInput: ["id", "identifier"],
  MoveMetaAilmentUpsertWithoutMetaInput: ["update", "create", "where"],
  MoveMetaAilmentUpdateToOneWithWhereWithoutMetaInput: ["where", "data"],
  MoveMetaAilmentUpdateWithoutMetaInput: ["id", "identifier"],
  MoveMetaStatChangesUpsertWithWhereUniqueWithoutMetaInput: ["where", "update", "create"],
  MoveMetaStatChangesUpdateWithWhereUniqueWithoutMetaInput: ["where", "data"],
  StatCreateWithoutMoveMetaStatChangesInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "characteristics", "natures", "naturesIncreased"],
  StatCreateOrConnectWithoutMoveMetaStatChangesInput: ["where", "create"],
  MoveMetaCreateWithoutStatChangesInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment"],
  MoveMetaCreateOrConnectWithoutStatChangesInput: ["where", "create"],
  StatUpsertWithoutMoveMetaStatChangesInput: ["update", "create", "where"],
  StatUpdateToOneWithWhereWithoutMoveMetaStatChangesInput: ["where", "data"],
  StatUpdateWithoutMoveMetaStatChangesInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "characteristics", "natures", "naturesIncreased"],
  MoveMetaUpsertWithoutStatChangesInput: ["update", "create", "where"],
  MoveMetaUpdateToOneWithWhereWithoutStatChangesInput: ["where", "data"],
  MoveMetaUpdateWithoutStatChangesInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment"],
  MoveFlagMapCreateWithoutFlagInput: ["move"],
  MoveFlagMapCreateOrConnectWithoutFlagInput: ["where", "create"],
  MoveFlagMapUpsertWithWhereUniqueWithoutFlagInput: ["where", "update", "create"],
  MoveFlagMapUpdateWithWhereUniqueWithoutFlagInput: ["where", "data"],
  MoveCreateWithoutFlagMapInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutFlagMapInput: ["where", "create"],
  MoveFlagCreateWithoutFlagMapInput: ["id", "identifier"],
  MoveFlagCreateOrConnectWithoutFlagMapInput: ["where", "create"],
  MoveUpsertWithoutFlagMapInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutFlagMapInput: ["where", "data"],
  MoveUpdateWithoutFlagMapInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveFlagUpsertWithoutFlagMapInput: ["update", "create", "where"],
  MoveFlagUpdateToOneWithWhereWithoutFlagMapInput: ["where", "data"],
  MoveFlagUpdateWithoutFlagMapInput: ["id", "identifier"],
  NatureBattleStylePreferenceCreateWithoutBattleStyleInput: ["low_hp_preference", "high_hp_preference", "nature"],
  NatureBattleStylePreferenceCreateOrConnectWithoutBattleStyleInput: ["where", "create"],
  NatureBattleStylePreferenceUpsertWithWhereUniqueWithoutBattleStyleInput: ["where", "update", "create"],
  NatureBattleStylePreferenceUpdateWithWhereUniqueWithoutBattleStyleInput: ["where", "data"],
  ItemFlagMapCreateWithoutFlagInput: ["item"],
  ItemFlagMapCreateOrConnectWithoutFlagInput: ["where", "create"],
  ItemFlagMapUpsertWithWhereUniqueWithoutFlagInput: ["where", "update", "create"],
  ItemFlagMapUpdateWithWhereUniqueWithoutFlagInput: ["where", "data"],
  ItemCreateWithoutFlagMapInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCreateOrConnectWithoutFlagMapInput: ["where", "create"],
  ItemFlagCreateWithoutFlagMapInput: ["id", "identifier"],
  ItemFlagCreateOrConnectWithoutFlagMapInput: ["where", "create"],
  ItemUpsertWithoutFlagMapInput: ["update", "create", "where"],
  ItemUpdateToOneWithWhereWithoutFlagMapInput: ["where", "data"],
  ItemUpdateWithoutFlagMapInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemFlagUpsertWithoutFlagMapInput: ["update", "create", "where"],
  ItemFlagUpdateToOneWithWhereWithoutFlagMapInput: ["where", "data"],
  ItemFlagUpdateWithoutFlagMapInput: ["id", "identifier"],
  ItemCreateWithoutFlingEffectInput: ["id", "identifier", "cost", "fling_power", "category", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCreateOrConnectWithoutFlingEffectInput: ["where", "create"],
  ItemUpsertWithWhereUniqueWithoutFlingEffectInput: ["where", "update", "create"],
  ItemUpdateWithWhereUniqueWithoutFlingEffectInput: ["where", "data"],
  ItemCreateWithoutBerriesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCreateOrConnectWithoutBerriesInput: ["where", "create"],
  BerryFirmnessCreateWithoutBerriesInput: ["id", "identifier"],
  BerryFirmnessCreateOrConnectWithoutBerriesInput: ["where", "create"],
  TypeCreateWithoutNaturalGiftTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes"],
  TypeCreateOrConnectWithoutNaturalGiftTypesInput: ["where", "create"],
  BerryFlavorCreateWithoutBerryInput: ["flavor", "contestType", "type"],
  BerryFlavorCreateOrConnectWithoutBerryInput: ["where", "create"],
  ItemUpsertWithoutBerriesInput: ["update", "create", "where"],
  ItemUpdateToOneWithWhereWithoutBerriesInput: ["where", "data"],
  ItemUpdateWithoutBerriesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  BerryFirmnessUpsertWithoutBerriesInput: ["update", "create", "where"],
  BerryFirmnessUpdateToOneWithWhereWithoutBerriesInput: ["where", "data"],
  BerryFirmnessUpdateWithoutBerriesInput: ["id", "identifier"],
  TypeUpsertWithoutNaturalGiftTypesInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutNaturalGiftTypesInput: ["where", "data"],
  TypeUpdateWithoutNaturalGiftTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes"],
  BerryFlavorUpsertWithWhereUniqueWithoutBerryInput: ["where", "update", "create"],
  BerryFlavorUpdateWithWhereUniqueWithoutBerryInput: ["where", "data"],
  BerryCreateWithoutFirmnessInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "naturalGiftType", "flavors"],
  BerryCreateOrConnectWithoutFirmnessInput: ["where", "create"],
  BerryUpsertWithWhereUniqueWithoutFirmnessInput: ["where", "update", "create"],
  BerryUpdateWithWhereUniqueWithoutFirmnessInput: ["where", "data"],
  BerryCreateWithoutFlavorsInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType"],
  BerryCreateOrConnectWithoutFlavorsInput: ["where", "create"],
  ContestTypeCreateWithoutBerryFlavorsInput: ["id", "identifier", "moves"],
  ContestTypeCreateOrConnectWithoutBerryFlavorsInput: ["where", "create"],
  TypeCreateWithoutBerryFlavorsInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutBerryFlavorsInput: ["where", "create"],
  BerryUpsertWithoutFlavorsInput: ["update", "create", "where"],
  BerryUpdateToOneWithWhereWithoutFlavorsInput: ["where", "data"],
  BerryUpdateWithoutFlavorsInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType"],
  ContestTypeUpsertWithoutBerryFlavorsInput: ["update", "create", "where"],
  ContestTypeUpdateToOneWithWhereWithoutBerryFlavorsInput: ["where", "data"],
  ContestTypeUpdateWithoutBerryFlavorsInput: ["id", "identifier", "moves"],
  TypeUpsertWithoutBerryFlavorsInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutBerryFlavorsInput: ["where", "data"],
  TypeUpdateWithoutBerryFlavorsInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  StatCreateWithoutCharacteristicsInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "natures", "naturesIncreased"],
  StatCreateOrConnectWithoutCharacteristicsInput: ["where", "create"],
  StatUpsertWithoutCharacteristicsInput: ["update", "create", "where"],
  StatUpdateToOneWithWhereWithoutCharacteristicsInput: ["where", "data"],
  StatUpdateWithoutCharacteristicsInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "natures", "naturesIncreased"],
  MoveCreateWithoutContestCombosInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutContestCombosInput: ["where", "create"],
  MoveCreateWithoutContestCombosSecondInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutContestCombosSecondInput: ["where", "create"],
  MoveUpsertWithoutContestCombosInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutContestCombosInput: ["where", "data"],
  MoveUpdateWithoutContestCombosInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveUpsertWithoutContestCombosSecondInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutContestCombosSecondInput: ["where", "data"],
  MoveUpdateWithoutContestCombosSecondInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateWithoutSuperContestCombosInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutSuperContestCombosInput: ["where", "create"],
  MoveCreateWithoutSuperContestCombosSecondInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "knownMoves"],
  MoveCreateOrConnectWithoutSuperContestCombosSecondInput: ["where", "create"],
  MoveUpsertWithoutSuperContestCombosInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutSuperContestCombosInput: ["where", "data"],
  MoveUpdateWithoutSuperContestCombosInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombosSecond", "knownMoves"],
  MoveUpsertWithoutSuperContestCombosSecondInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutSuperContestCombosSecondInput: ["where", "data"],
  MoveUpdateWithoutSuperContestCombosSecondInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "knownMoves"],
  PokemonMoveCreateWithoutMoveMethodInput: ["level", "order", "mastery", "pokemon", "versionGroup", "move"],
  PokemonMoveCreateOrConnectWithoutMoveMethodInput: ["where", "create"],
  VersionGroupPokemonMoveMethodCreateWithoutMoveMethodInput: ["versionGroup"],
  VersionGroupPokemonMoveMethodCreateOrConnectWithoutMoveMethodInput: ["where", "create"],
  PokemonMoveUpsertWithWhereUniqueWithoutMoveMethodInput: ["where", "update", "create"],
  PokemonMoveUpdateWithWhereUniqueWithoutMoveMethodInput: ["where", "data"],
  VersionGroupPokemonMoveMethodUpsertWithWhereUniqueWithoutMoveMethodInput: ["where", "update", "create"],
  VersionGroupPokemonMoveMethodUpdateWithWhereUniqueWithoutMoveMethodInput: ["where", "data"],
  VersionGroupCreateWithoutVersionGroupPokemonMoveMethodsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupCreateOrConnectWithoutVersionGroupPokemonMoveMethodsInput: ["where", "create"],
  PokemonMoveMethodCreateWithoutVersionGroupsInput: ["id", "identifier", "pokemonMoves"],
  PokemonMoveMethodCreateOrConnectWithoutVersionGroupsInput: ["where", "create"],
  VersionGroupUpsertWithoutVersionGroupPokemonMoveMethodsInput: ["update", "create", "where"],
  VersionGroupUpdateToOneWithWhereWithoutVersionGroupPokemonMoveMethodsInput: ["where", "data"],
  VersionGroupUpdateWithoutVersionGroupPokemonMoveMethodsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  PokemonMoveMethodUpsertWithoutVersionGroupsInput: ["update", "create", "where"],
  PokemonMoveMethodUpdateToOneWithWhereWithoutVersionGroupsInput: ["where", "data"],
  PokemonMoveMethodUpdateWithoutVersionGroupsInput: ["id", "identifier", "pokemonMoves"],
  PokemonSpeciesCreateWithoutShapeInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutShapeInput: ["where", "create"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutShapeInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutShapeInput: ["where", "data"],
  PokemonSpeciesCreateWithoutColorInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutColorInput: ["where", "create"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutColorInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutColorInput: ["where", "data"],
  PokemonSpeciesCreateWithoutHabitatInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutHabitatInput: ["where", "create"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutHabitatInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutHabitatInput: ["where", "data"],
  TypeCreateWithoutEfficacyInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutEfficacyInput: ["where", "create"],
  TypeCreateWithoutEfficacyTargetInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutEfficacyTargetInput: ["where", "create"],
  TypeUpsertWithoutEfficacyInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutEfficacyInput: ["where", "data"],
  TypeUpdateWithoutEfficacyInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeUpsertWithoutEfficacyTargetInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutEfficacyTargetInput: ["where", "data"],
  TypeUpdateWithoutEfficacyTargetInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  VersionGroupCreateWithoutVersionGroupRegionsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupCreateOrConnectWithoutVersionGroupRegionsInput: ["where", "create"],
  RegionCreateWithoutVersionGroupsInput: ["id", "identifier", "generations", "locations", "pokedexes"],
  RegionCreateOrConnectWithoutVersionGroupsInput: ["where", "create"],
  VersionGroupUpsertWithoutVersionGroupRegionsInput: ["update", "create", "where"],
  VersionGroupUpdateToOneWithWhereWithoutVersionGroupRegionsInput: ["where", "data"],
  VersionGroupUpdateWithoutVersionGroupRegionsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  RegionUpsertWithoutVersionGroupsInput: ["update", "create", "where"],
  RegionUpdateToOneWithWhereWithoutVersionGroupsInput: ["where", "data"],
  RegionUpdateWithoutVersionGroupsInput: ["id", "identifier", "generations", "locations", "pokedexes"],
  PokedexCreateWithoutVersionGroupsInput: ["id", "identifier", "is_main_series", "region", "dexNumbers"],
  PokedexCreateOrConnectWithoutVersionGroupsInput: ["where", "create"],
  VersionGroupCreateWithoutPokedexVersionGroupsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokemonMoves", "pokemonForms"],
  VersionGroupCreateOrConnectWithoutPokedexVersionGroupsInput: ["where", "create"],
  PokedexUpsertWithoutVersionGroupsInput: ["update", "create", "where"],
  PokedexUpdateToOneWithWhereWithoutVersionGroupsInput: ["where", "data"],
  PokedexUpdateWithoutVersionGroupsInput: ["id", "identifier", "is_main_series", "region", "dexNumbers"],
  VersionGroupUpsertWithoutPokedexVersionGroupsInput: ["update", "create", "where"],
  VersionGroupUpdateToOneWithWhereWithoutPokedexVersionGroupsInput: ["where", "data"],
  VersionGroupUpdateWithoutPokedexVersionGroupsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokemonMoves", "pokemonForms"],
  PokemonCreateWithoutAbilitiesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutAbilitiesInput: ["where", "create"],
  AbilityCreateWithoutPokemonAbilitiesInput: ["id", "identifier", "is_main_series", "generation"],
  AbilityCreateOrConnectWithoutPokemonAbilitiesInput: ["where", "create"],
  PokemonUpsertWithoutAbilitiesInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutAbilitiesInput: ["where", "data"],
  PokemonUpdateWithoutAbilitiesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  AbilityUpsertWithoutPokemonAbilitiesInput: ["update", "create", "where"],
  AbilityUpdateToOneWithWhereWithoutPokemonAbilitiesInput: ["where", "data"],
  AbilityUpdateWithoutPokemonAbilitiesInput: ["id", "identifier", "is_main_series", "generation"],
  PokemonCreateWithoutMovesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutMovesInput: ["where", "create"],
  VersionGroupCreateWithoutPokemonMovesInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonForms"],
  VersionGroupCreateOrConnectWithoutPokemonMovesInput: ["where", "create"],
  MoveCreateWithoutPokemonMovesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveCreateOrConnectWithoutPokemonMovesInput: ["where", "create"],
  PokemonMoveMethodCreateWithoutPokemonMovesInput: ["id", "identifier", "versionGroups"],
  PokemonMoveMethodCreateOrConnectWithoutPokemonMovesInput: ["where", "create"],
  PokemonUpsertWithoutMovesInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  PokemonUpdateWithoutMovesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "stats", "types", "items", "gameIndices", "encounters"],
  VersionGroupUpsertWithoutPokemonMovesInput: ["update", "create", "where"],
  VersionGroupUpdateToOneWithWhereWithoutPokemonMovesInput: ["where", "data"],
  VersionGroupUpdateWithoutPokemonMovesInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonForms"],
  MoveUpsertWithoutPokemonMovesInput: ["update", "create", "where"],
  MoveUpdateToOneWithWhereWithoutPokemonMovesInput: ["where", "data"],
  MoveUpdateWithoutPokemonMovesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  PokemonMoveMethodUpsertWithoutPokemonMovesInput: ["update", "create", "where"],
  PokemonMoveMethodUpdateToOneWithWhereWithoutPokemonMovesInput: ["where", "data"],
  PokemonMoveMethodUpdateWithoutPokemonMovesInput: ["id", "identifier", "versionGroups"],
  PokemonCreateWithoutStatsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutStatsInput: ["where", "create"],
  StatCreateWithoutPokemonStatsInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatCreateOrConnectWithoutPokemonStatsInput: ["where", "create"],
  PokemonUpsertWithoutStatsInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutStatsInput: ["where", "data"],
  PokemonUpdateWithoutStatsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "types", "items", "gameIndices", "encounters"],
  StatUpsertWithoutPokemonStatsInput: ["update", "create", "where"],
  StatUpdateToOneWithWhereWithoutPokemonStatsInput: ["where", "data"],
  StatUpdateWithoutPokemonStatsInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  PokemonCreateWithoutTypesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutTypesInput: ["where", "create"],
  TypeCreateWithoutPokemonTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutPokemonTypesInput: ["where", "create"],
  PokemonUpsertWithoutTypesInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutTypesInput: ["where", "data"],
  PokemonUpdateWithoutTypesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "items", "gameIndices", "encounters"],
  TypeUpsertWithoutPokemonTypesInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutPokemonTypesInput: ["where", "data"],
  TypeUpdateWithoutPokemonTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  PokemonSpeciesCreateWithoutEggGroupsInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEggGroupsInput: ["where", "create"],
  EggGroupCreateWithoutSpeciesInput: ["id", "identifier"],
  EggGroupCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonSpeciesUpsertWithoutEggGroupsInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutEggGroupsInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutEggGroupsInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  EggGroupUpsertWithoutSpeciesInput: ["update", "create", "where"],
  EggGroupUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  EggGroupUpdateWithoutSpeciesInput: ["id", "identifier"],
  PokemonCreateWithoutItemsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutItemsInput: ["where", "create"],
  VersionCreateWithoutPokemonItemsInput: ["id", "identifier", "versionGroup", "encounters", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionCreateOrConnectWithoutPokemonItemsInput: ["where", "create"],
  ItemCreateWithoutPokemonItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCreateOrConnectWithoutPokemonItemsInput: ["where", "create"],
  PokemonUpsertWithoutItemsInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutItemsInput: ["where", "data"],
  PokemonUpdateWithoutItemsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "gameIndices", "encounters"],
  VersionUpsertWithoutPokemonItemsInput: ["update", "create", "where"],
  VersionUpdateToOneWithWhereWithoutPokemonItemsInput: ["where", "data"],
  VersionUpdateWithoutPokemonItemsInput: ["id", "identifier", "versionGroup", "encounters", "pokemonGameIndices", "locationAreaEncounterRates"],
  ItemUpsertWithoutPokemonItemsInput: ["update", "create", "where"],
  ItemUpdateToOneWithWhereWithoutPokemonItemsInput: ["where", "data"],
  ItemUpdateWithoutPokemonItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  PokemonCreateWithoutGameIndicesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "encounters"],
  PokemonCreateOrConnectWithoutGameIndicesInput: ["where", "create"],
  VersionCreateWithoutPokemonGameIndicesInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "locationAreaEncounterRates"],
  VersionCreateOrConnectWithoutPokemonGameIndicesInput: ["where", "create"],
  PokemonUpsertWithoutGameIndicesInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutGameIndicesInput: ["where", "data"],
  PokemonUpdateWithoutGameIndicesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "encounters"],
  VersionUpsertWithoutPokemonGameIndicesInput: ["update", "create", "where"],
  VersionUpdateToOneWithWhereWithoutPokemonGameIndicesInput: ["where", "data"],
  VersionUpdateWithoutPokemonGameIndicesInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "locationAreaEncounterRates"],
  PokemonSpeciesCreateWithoutDexNumbersInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutDexNumbersInput: ["where", "create"],
  PokedexCreateWithoutDexNumbersInput: ["id", "identifier", "is_main_series", "region", "versionGroups"],
  PokedexCreateOrConnectWithoutDexNumbersInput: ["where", "create"],
  PokemonSpeciesUpsertWithoutDexNumbersInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutDexNumbersInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutDexNumbersInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "evolution", "partySpecies", "tradeSpecies"],
  PokedexUpsertWithoutDexNumbersInput: ["update", "create", "where"],
  PokedexUpdateToOneWithWhereWithoutDexNumbersInput: ["where", "data"],
  PokedexUpdateWithoutDexNumbersInput: ["id", "identifier", "is_main_series", "region", "versionGroups"],
  PokemonFormCreateWithoutGenerationsInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "types"],
  PokemonFormCreateOrConnectWithoutGenerationsInput: ["where", "create"],
  GenerationCreateWithoutPokemonFormGenerationsInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutPokemonFormGenerationsInput: ["where", "create"],
  PokemonFormUpsertWithoutGenerationsInput: ["update", "create", "where"],
  PokemonFormUpdateToOneWithWhereWithoutGenerationsInput: ["where", "data"],
  PokemonFormUpdateWithoutGenerationsInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "types"],
  GenerationUpsertWithoutPokemonFormGenerationsInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutPokemonFormGenerationsInput: ["where", "data"],
  GenerationUpdateWithoutPokemonFormGenerationsInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  PokemonFormCreateWithoutTypesInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations"],
  PokemonFormCreateOrConnectWithoutTypesInput: ["where", "create"],
  TypeCreateWithoutFormTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutFormTypesInput: ["where", "create"],
  PokemonFormUpsertWithoutTypesInput: ["update", "create", "where"],
  PokemonFormUpdateToOneWithWhereWithoutTypesInput: ["where", "data"],
  PokemonFormUpdateWithoutTypesInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations"],
  TypeUpsertWithoutFormTypesInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutFormTypesInput: ["where", "data"],
  TypeUpdateWithoutFormTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateWithoutGameIndicesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeCreateOrConnectWithoutGameIndicesInput: ["where", "create"],
  GenerationCreateWithoutTypeGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutTypeGameIndicesInput: ["where", "create"],
  TypeUpsertWithoutGameIndicesInput: ["update", "create", "where"],
  TypeUpdateToOneWithWhereWithoutGameIndicesInput: ["where", "data"],
  TypeUpdateWithoutGameIndicesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  GenerationUpsertWithoutTypeGameIndicesInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutTypeGameIndicesInput: ["where", "data"],
  GenerationUpdateWithoutTypeGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "locationGameIndices", "versionGroups"],
  ItemCreateWithoutGameIndicesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCreateOrConnectWithoutGameIndicesInput: ["where", "create"],
  GenerationCreateWithoutItemGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutItemGameIndicesInput: ["where", "create"],
  ItemUpsertWithoutGameIndicesInput: ["update", "create", "where"],
  ItemUpdateToOneWithWhereWithoutGameIndicesInput: ["where", "data"],
  ItemUpdateWithoutGameIndicesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  GenerationUpsertWithoutItemGameIndicesInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutItemGameIndicesInput: ["where", "data"],
  GenerationUpdateWithoutItemGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "typeGameIndices", "locationGameIndices", "versionGroups"],
  LocationCreateWithoutGameIndicesInput: ["id", "identifier", "region", "areas", "evolution"],
  LocationCreateOrConnectWithoutGameIndicesInput: ["where", "create"],
  GenerationCreateWithoutLocationGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "versionGroups"],
  GenerationCreateOrConnectWithoutLocationGameIndicesInput: ["where", "create"],
  LocationUpsertWithoutGameIndicesInput: ["update", "create", "where"],
  LocationUpdateToOneWithWhereWithoutGameIndicesInput: ["where", "data"],
  LocationUpdateWithoutGameIndicesInput: ["id", "identifier", "region", "areas", "evolution"],
  GenerationUpsertWithoutLocationGameIndicesInput: ["update", "create", "where"],
  GenerationUpdateToOneWithWhereWithoutLocationGameIndicesInput: ["where", "data"],
  GenerationUpdateWithoutLocationGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "versionGroups"],
  LocationAreaCreateWithoutEncounterRatesInput: ["id", "game_index", "identifier", "location", "encounters"],
  LocationAreaCreateOrConnectWithoutEncounterRatesInput: ["where", "create"],
  EncounterMethodCreateWithoutEncounterRatesInput: ["id", "identifier", "order", "slots"],
  EncounterMethodCreateOrConnectWithoutEncounterRatesInput: ["where", "create"],
  VersionCreateWithoutLocationAreaEncounterRatesInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices"],
  VersionCreateOrConnectWithoutLocationAreaEncounterRatesInput: ["where", "create"],
  LocationAreaUpsertWithoutEncounterRatesInput: ["update", "create", "where"],
  LocationAreaUpdateToOneWithWhereWithoutEncounterRatesInput: ["where", "data"],
  LocationAreaUpdateWithoutEncounterRatesInput: ["id", "game_index", "identifier", "location", "encounters"],
  EncounterMethodUpsertWithoutEncounterRatesInput: ["update", "create", "where"],
  EncounterMethodUpdateToOneWithWhereWithoutEncounterRatesInput: ["where", "data"],
  EncounterMethodUpdateWithoutEncounterRatesInput: ["id", "identifier", "order", "slots"],
  VersionUpsertWithoutLocationAreaEncounterRatesInput: ["update", "create", "where"],
  VersionUpdateToOneWithWhereWithoutLocationAreaEncounterRatesInput: ["where", "data"],
  VersionUpdateWithoutLocationAreaEncounterRatesInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices"],
  NatureCreateWithoutBattleStylePreferencesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "decreasedStatTypes", "increasedStatTypes"],
  NatureCreateOrConnectWithoutBattleStylePreferencesInput: ["where", "create"],
  MoveBattleStyleCreateWithoutNaturePreferencesInput: ["id", "identifier"],
  MoveBattleStyleCreateOrConnectWithoutNaturePreferencesInput: ["where", "create"],
  NatureUpsertWithoutBattleStylePreferencesInput: ["update", "create", "where"],
  NatureUpdateToOneWithWhereWithoutBattleStylePreferencesInput: ["where", "data"],
  NatureUpdateWithoutBattleStylePreferencesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "decreasedStatTypes", "increasedStatTypes"],
  MoveBattleStyleUpsertWithoutNaturePreferencesInput: ["update", "create", "where"],
  MoveBattleStyleUpdateToOneWithWhereWithoutNaturePreferencesInput: ["where", "data"],
  MoveBattleStyleUpdateWithoutNaturePreferencesInput: ["id", "identifier"],
  PokemonFormUpdateWithoutPokemonInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "versionGroup", "generations", "types"],
  PokemonAbilityUpdateWithoutPokemonInput: ["is_hidden", "slot", "ability"],
  PokemonMoveUpdateWithoutPokemonInput: ["level", "order", "mastery", "versionGroup", "move", "moveMethod"],
  PokemonStatUpdateWithoutPokemonInput: ["base_stat", "effort", "stat"],
  PokemonTypeUpdateWithoutPokemonInput: ["slot", "type"],
  PokemonItemUpdateWithoutPokemonInput: ["rarity", "version", "item"],
  PokemonGameIndexUpdateWithoutPokemonInput: ["game_index", "version"],
  EncounterUpdateWithoutPokemonInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "conditionValueMap"],
  PokemonSpeciesUpdateWithoutEvolvesFromInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonUpdateWithoutSpeciesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonEggGroupUpdateWithoutSpeciesInput: ["eggGroup"],
  PokemonDexNumberUpdateWithoutSpeciesInput: ["pokedex_number", "pokedex"],
  PokemonEvolutionUpdateWithoutEvolvedSpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutPartySpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutTradeSpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType"],
  PokemonFormGenerationUpdateWithoutPokemonFormInput: ["game_index", "generation"],
  PokemonFormTypeUpdateWithoutPokemonFormInput: ["slot", "type"],
  PokemonMoveUpdateWithoutMoveInput: ["level", "order", "mastery", "pokemon", "versionGroup", "moveMethod"],
  MachineUpdateWithoutMoveInput: ["machine_number", "versionGroup", "item"],
  MoveMetaUpdateWithoutMoveInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "metaCategory", "metaAilment", "statChanges"],
  MoveFlagMapUpdateWithoutMoveInput: ["flag"],
  ContestComboUpdateWithoutFirstMoveInput: ["secondMove"],
  ContestComboUpdateWithoutSecondMoveInput: ["firstMove"],
  SuperContestComboUpdateWithoutFirstMoveInput: ["secondMove"],
  SuperContestComboUpdateWithoutSecondMoveInput: ["firstMove"],
  PokemonEvolutionUpdateWithoutKnownMoveInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  MoveUpdateWithoutEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveUpdateWithoutTargetInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveUpdateWithoutDamageClassInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  TypeUpdateWithoutDamageClassInput: ["id", "identifier", "generation", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  MoveUpdateWithoutTypeInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  PokemonTypeUpdateWithoutTypeInput: ["slot", "pokemon"],
  PokemonFormTypeUpdateWithoutTypeInput: ["slot", "pokemonForm"],
  TypeGameIndexUpdateWithoutTypeInput: ["game_index", "generation"],
  TypeEfficacyUpdateWithoutDamageTypeInput: ["damage_factor", "targetType"],
  TypeEfficacyUpdateWithoutTargetTypeInput: ["damage_factor", "damageType"],
  BerryFlavorUpdateWithoutTypeInput: ["flavor", "berry", "contestType"],
  NatureUpdateWithoutDecreasedStatTypesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "increasedStatTypes"],
  NatureUpdateWithoutIncreasedStatTypesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes"],
  PokemonEvolutionUpdateWithoutKnownMoveTypeInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutPartyTypeInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "tradeSpecies"],
  BerryUpdateWithoutNaturalGiftTypeInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "flavors"],
  PokemonAbilityUpdateWithoutAbilityInput: ["is_hidden", "slot", "pokemon"],
  PokemonItemUpdateWithoutItemInput: ["rarity", "pokemon", "version"],
  MachineUpdateWithoutItemInput: ["machine_number", "versionGroup", "move"],
  BerryUpdateWithoutItemInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "firmness", "naturalGiftType", "flavors"],
  ItemGameIndexUpdateWithoutItemInput: ["game_index", "generation"],
  ItemFlagMapUpdateWithoutItemInput: ["flag"],
  EvolutionChainUpdateWithoutBabyTriggerItemInput: ["id", "species"],
  PokemonEvolutionUpdateWithoutTriggerItemInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutHeldItemInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  ItemUpdateWithoutCategoryInput: ["id", "identifier", "cost", "fling_power", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCategoryUpdateWithoutPocketInput: ["id", "identifier", "items"],
  PokemonStatUpdateWithoutStatInput: ["base_stat", "effort", "pokemon"],
  MoveMetaStatChangesUpdateWithoutStatInput: ["change", "meta"],
  CharacteristicUpdateWithoutStatInput: ["id", "gene_mod_5"],
  NatureUpdateWithoutDecreasedStatInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NatureUpdateWithoutIncreasedStatInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  PokemonSpeciesUpdateWithoutGenerationInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  MoveUpdateWithoutGenerationInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  TypeUpdateWithoutGenerationInput: ["id", "identifier", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  AbilityUpdateWithoutGenerationInput: ["id", "identifier", "is_main_series", "pokemonAbilities"],
  PokemonFormGenerationUpdateWithoutGenerationInput: ["game_index", "pokemonForm"],
  ItemGameIndexUpdateWithoutGenerationInput: ["game_index", "item"],
  TypeGameIndexUpdateWithoutGenerationInput: ["game_index", "type"],
  LocationGameIndexUpdateWithoutGenerationInput: ["game_index", "location"],
  VersionGroupUpdateWithoutGenerationInput: ["id", "identifier", "order", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionUpdateWithoutVersionGroupInput: ["id", "identifier", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  EncounterSlotUpdateWithoutVersionGroupInput: ["id", "slot", "rarity", "encounterMethod", "encounters"],
  MachineUpdateWithoutVersionGroupInput: ["machine_number", "item", "move"],
  VersionGroupPokemonMoveMethodUpdateWithoutVersionGroupInput: ["moveMethod"],
  VersionGroupRegionUpdateWithoutVersionGroupInput: ["region"],
  PokedexVersionGroupUpdateWithoutVersionGroupInput: ["pokedex"],
  PokemonMoveUpdateWithoutVersionGroupInput: ["level", "order", "mastery", "pokemon", "move", "moveMethod"],
  PokemonFormUpdateWithoutVersionGroupInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "generations", "types"],
  EncounterUpdateWithoutVersionInput: ["id", "min_level", "max_level", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  PokemonItemUpdateWithoutVersionInput: ["rarity", "pokemon", "item"],
  PokemonGameIndexUpdateWithoutVersionInput: ["game_index", "pokemon"],
  LocationAreaEncounterRateUpdateWithoutVersionInput: ["rate", "locationArea", "encounterMethod"],
  GenerationUpdateWithoutRegionInput: ["id", "identifier", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  LocationUpdateWithoutRegionInput: ["id", "identifier", "areas", "gameIndices", "evolution"],
  PokedexUpdateWithoutRegionInput: ["id", "identifier", "is_main_series", "dexNumbers", "versionGroups"],
  VersionGroupRegionUpdateWithoutRegionInput: ["versionGroup"],
  LocationAreaUpdateWithoutLocationInput: ["id", "game_index", "identifier", "encounters", "encounterRates"],
  LocationGameIndexUpdateWithoutLocationInput: ["game_index", "generation"],
  PokemonEvolutionUpdateWithoutLocationInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  EncounterUpdateWithoutLocationAreaInput: ["id", "min_level", "max_level", "version", "encounterSlot", "pokemon", "conditionValueMap"],
  LocationAreaEncounterRateUpdateWithoutLocationAreaInput: ["rate", "encounterMethod", "version"],
  PokemonDexNumberUpdateWithoutPokedexInput: ["pokedex_number", "species"],
  PokedexVersionGroupUpdateWithoutPokedexInput: ["versionGroup"],
  PokemonSpeciesUpdateWithoutEvolutionChainInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutEvolutionTriggerInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonSpeciesUpdateWithoutGrowthRateInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  ExperienceUpdateWithoutGrowthRateInput: ["level", "experience"],
  PokemonEvolutionUpdateWithoutGenderInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEggGroupUpdateWithoutEggGroupInput: ["species"],
  NatureBattleStylePreferenceUpdateWithoutNatureInput: ["low_hp_preference", "high_hp_preference", "battleStyle"],
  TypeUpdateWithoutNaturesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypeUpdateWithoutNaturesIncreasedInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  MoveUpdateWithoutContestTypeInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  BerryFlavorUpdateWithoutContestTypeInput: ["flavor", "berry", "type"],
  MoveUpdateWithoutContestEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveUpdateWithoutSuperContestEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  EncounterSlotUpdateWithoutEncounterMethodInput: ["id", "slot", "rarity", "versionGroup", "encounters"],
  LocationAreaEncounterRateUpdateWithoutEncounterMethodInput: ["rate", "locationArea", "version"],
  EncounterUpdateWithoutEncounterSlotInput: ["id", "min_level", "max_level", "version", "locationArea", "pokemon", "conditionValueMap"],
  EncounterConditionValueMapUpdateWithoutEncounterInput: ["conditionValue"],
  EncounterConditionValueUpdateWithoutConditionInput: ["id", "identifier", "is_default", "conditionValueMap"],
  EncounterConditionValueMapUpdateWithoutConditionValueInput: ["encounter"],
  MoveMetaUpdateWithoutMetaCategoryInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaAilment", "statChanges"],
  MoveMetaUpdateWithoutMetaAilmentInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "statChanges"],
  MoveMetaStatChangesUpdateWithoutMetaInput: ["change", "stat"],
  MoveFlagMapUpdateWithoutFlagInput: ["move"],
  NatureBattleStylePreferenceUpdateWithoutBattleStyleInput: ["low_hp_preference", "high_hp_preference", "nature"],
  ItemFlagMapUpdateWithoutFlagInput: ["item"],
  ItemUpdateWithoutFlingEffectInput: ["id", "identifier", "cost", "fling_power", "category", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  BerryFlavorUpdateWithoutBerryInput: ["flavor", "contestType", "type"],
  BerryUpdateWithoutFirmnessInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "naturalGiftType", "flavors"],
  PokemonMoveUpdateWithoutMoveMethodInput: ["level", "order", "mastery", "pokemon", "versionGroup", "move"],
  VersionGroupPokemonMoveMethodUpdateWithoutMoveMethodInput: ["versionGroup"],
  PokemonSpeciesUpdateWithoutShapeInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesUpdateWithoutColorInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesUpdateWithoutHabitatInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"]
};

type InputTypesNames = keyof typeof inputTypes;

type InputTypeFieldNames<TInput extends InputTypesNames> = Exclude<
  keyof typeof inputTypes[TInput]["prototype"],
  number | symbol
>;

type InputTypeFieldsConfig<
  TInput extends InputTypesNames
> = FieldsConfig<InputTypeFieldNames<TInput>>;

export type InputTypeConfig<TInput extends InputTypesNames> = {
  class?: ClassDecorator[];
  fields?: InputTypeFieldsConfig<TInput>;
};

export type InputTypesEnhanceMap = {
  [TInput in InputTypesNames]?: InputTypeConfig<TInput>;
};

export function applyInputTypesEnhanceMap(
  inputTypesEnhanceMap: InputTypesEnhanceMap,
) {
  for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
    const inputTypeName = inputTypeEnhanceMapKey as keyof typeof inputTypesEnhanceMap;
    const typeConfig = inputTypesEnhanceMap[inputTypeName]!;
    const typeClass = inputTypes[inputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      inputsInfo[inputTypeName as keyof typeof inputsInfo],
    );
  }
}

