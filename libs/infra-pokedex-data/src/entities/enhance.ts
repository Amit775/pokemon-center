import { ClassType } from "type-graphql";
import * as tslib from "tslib";
import * as crudResolvers from "./resolvers/crud/resolvers-crud.index";
import * as argsTypes from "./resolvers/crud/args.index";
import * as actionResolvers from "./resolvers/crud/resolvers-actions.index";
import * as relationResolvers from "./resolvers/relations/resolvers.index";
import * as models from "./models";
import * as outputTypes from "./resolvers/outputs";
import * as inputTypes from "./resolvers/inputs";

export type MethodDecoratorOverrideFn = (decorators: MethodDecorator[]) => MethodDecorator[];

const crudResolversMap = {
  Pokemon: crudResolvers.PokemonCrudResolver,
  PokemonSpecies: crudResolvers.PokemonSpeciesCrudResolver,
  PokemonForms: crudResolvers.PokemonFormsCrudResolver,
  Moves: crudResolvers.MovesCrudResolver,
  MoveEffects: crudResolvers.MoveEffectsCrudResolver,
  MoveTargets: crudResolvers.MoveTargetsCrudResolver,
  MoveDamageClasses: crudResolvers.MoveDamageClassesCrudResolver,
  Types: crudResolvers.TypesCrudResolver,
  Abilities: crudResolvers.AbilitiesCrudResolver,
  Items: crudResolvers.ItemsCrudResolver,
  ItemCategories: crudResolvers.ItemCategoriesCrudResolver,
  ItemPockets: crudResolvers.ItemPocketsCrudResolver,
  Stats: crudResolvers.StatsCrudResolver,
  Generations: crudResolvers.GenerationsCrudResolver,
  VersionGroups: crudResolvers.VersionGroupsCrudResolver,
  Versions: crudResolvers.VersionsCrudResolver,
  Regions: crudResolvers.RegionsCrudResolver,
  Locations: crudResolvers.LocationsCrudResolver,
  LocationAreas: crudResolvers.LocationAreasCrudResolver,
  Pokedexes: crudResolvers.PokedexesCrudResolver,
  EvolutionChains: crudResolvers.EvolutionChainsCrudResolver,
  EvolutionTriggers: crudResolvers.EvolutionTriggersCrudResolver,
  PokemonEvolution: crudResolvers.PokemonEvolutionCrudResolver,
  GrowthRates: crudResolvers.GrowthRatesCrudResolver,
  Experience: crudResolvers.ExperienceCrudResolver,
  Genders: crudResolvers.GendersCrudResolver,
  Languages: crudResolvers.LanguagesCrudResolver,
  EggGroups: crudResolvers.EggGroupsCrudResolver,
  Natures: crudResolvers.NaturesCrudResolver,
  ContestTypes: crudResolvers.ContestTypesCrudResolver,
  ContestEffects: crudResolvers.ContestEffectsCrudResolver,
  SuperContestEffects: crudResolvers.SuperContestEffectsCrudResolver,
  Machines: crudResolvers.MachinesCrudResolver,
  EncounterMethods: crudResolvers.EncounterMethodsCrudResolver,
  EncounterSlots: crudResolvers.EncounterSlotsCrudResolver,
  Encounters: crudResolvers.EncountersCrudResolver,
  EncounterConditions: crudResolvers.EncounterConditionsCrudResolver,
  EncounterConditionValues: crudResolvers.EncounterConditionValuesCrudResolver,
  EncounterConditionValueMap: crudResolvers.EncounterConditionValueMapCrudResolver,
  MoveMetaCategories: crudResolvers.MoveMetaCategoriesCrudResolver,
  MoveMetaAilments: crudResolvers.MoveMetaAilmentsCrudResolver,
  MoveMeta: crudResolvers.MoveMetaCrudResolver,
  MoveMetaStatChanges: crudResolvers.MoveMetaStatChangesCrudResolver,
  MoveFlags: crudResolvers.MoveFlagsCrudResolver,
  MoveFlagMap: crudResolvers.MoveFlagMapCrudResolver,
  MoveBattleStyles: crudResolvers.MoveBattleStylesCrudResolver,
  ItemFlags: crudResolvers.ItemFlagsCrudResolver,
  ItemFlagMap: crudResolvers.ItemFlagMapCrudResolver,
  ItemFlingEffects: crudResolvers.ItemFlingEffectsCrudResolver,
  Berries: crudResolvers.BerriesCrudResolver,
  BerryFirmness: crudResolvers.BerryFirmnessCrudResolver,
  BerryFlavors: crudResolvers.BerryFlavorsCrudResolver,
  Characteristics: crudResolvers.CharacteristicsCrudResolver,
  ContestCombos: crudResolvers.ContestCombosCrudResolver,
  SuperContestCombos: crudResolvers.SuperContestCombosCrudResolver,
  PokemonMoveMethods: crudResolvers.PokemonMoveMethodsCrudResolver,
  VersionGroupPokemonMoveMethods: crudResolvers.VersionGroupPokemonMoveMethodsCrudResolver,
  PokemonShapes: crudResolvers.PokemonShapesCrudResolver,
  PokemonColors: crudResolvers.PokemonColorsCrudResolver,
  PokemonHabitats: crudResolvers.PokemonHabitatsCrudResolver,
  TypeEfficacy: crudResolvers.TypeEfficacyCrudResolver,
  VersionGroupRegions: crudResolvers.VersionGroupRegionsCrudResolver,
  PokedexVersionGroups: crudResolvers.PokedexVersionGroupsCrudResolver,
  PokemonAbilities: crudResolvers.PokemonAbilitiesCrudResolver,
  PokemonMoves: crudResolvers.PokemonMovesCrudResolver,
  PokemonStats: crudResolvers.PokemonStatsCrudResolver,
  PokemonTypes: crudResolvers.PokemonTypesCrudResolver,
  PokemonEggGroups: crudResolvers.PokemonEggGroupsCrudResolver,
  PokemonItems: crudResolvers.PokemonItemsCrudResolver,
  PokemonGameIndices: crudResolvers.PokemonGameIndicesCrudResolver,
  PokemonDexNumbers: crudResolvers.PokemonDexNumbersCrudResolver,
  PokemonFormGenerations: crudResolvers.PokemonFormGenerationsCrudResolver,
  PokemonFormTypes: crudResolvers.PokemonFormTypesCrudResolver,
  TypeGameIndices: crudResolvers.TypeGameIndicesCrudResolver,
  ItemGameIndices: crudResolvers.ItemGameIndicesCrudResolver,
  LocationGameIndices: crudResolvers.LocationGameIndicesCrudResolver,
  LocationAreaEncounterRates: crudResolvers.LocationAreaEncounterRatesCrudResolver,
  NatureBattleStylePreferences: crudResolvers.NatureBattleStylePreferencesCrudResolver
};
const actionResolversMap = {
  Pokemon: {
    aggregatePokemon: actionResolvers.AggregatePokemonResolver,
    findFirstPokemon: actionResolvers.FindFirstPokemonResolver,
    findFirstPokemonOrThrow: actionResolvers.FindFirstPokemonOrThrowResolver,
    findManyPokemon: actionResolvers.FindManyPokemonResolver,
    findUniquePokemon: actionResolvers.FindUniquePokemonResolver,
    findUniquePokemonOrThrow: actionResolvers.FindUniquePokemonOrThrowResolver,
    groupByPokemon: actionResolvers.GroupByPokemonResolver,
  },
  PokemonSpecies: {
    aggregatePokemonSpecies: actionResolvers.AggregatePokemonSpeciesResolver,
    findFirstPokemonSpecies: actionResolvers.FindFirstPokemonSpeciesResolver,
    findFirstPokemonSpeciesOrThrow: actionResolvers.FindFirstPokemonSpeciesOrThrowResolver,
    findManyPokemonSpecies: actionResolvers.FindManyPokemonSpeciesResolver,
    findUniquePokemonSpecies: actionResolvers.FindUniquePokemonSpeciesResolver,
    findUniquePokemonSpeciesOrThrow: actionResolvers.FindUniquePokemonSpeciesOrThrowResolver,
    groupByPokemonSpecies: actionResolvers.GroupByPokemonSpeciesResolver,
  },
  PokemonForms: {
    aggregatePokemonForms: actionResolvers.AggregatePokemonFormsResolver,
    findFirstPokemonForms: actionResolvers.FindFirstPokemonFormsResolver,
    findFirstPokemonFormsOrThrow: actionResolvers.FindFirstPokemonFormsOrThrowResolver,
    findManyPokemonForms: actionResolvers.FindManyPokemonFormsResolver,
    findUniquePokemonForms: actionResolvers.FindUniquePokemonFormsResolver,
    findUniquePokemonFormsOrThrow: actionResolvers.FindUniquePokemonFormsOrThrowResolver,
    groupByPokemonForms: actionResolvers.GroupByPokemonFormsResolver,
  },
  Moves: {
    aggregateMoves: actionResolvers.AggregateMovesResolver,
    findFirstMoves: actionResolvers.FindFirstMovesResolver,
    findFirstMovesOrThrow: actionResolvers.FindFirstMovesOrThrowResolver,
    findManyMoves: actionResolvers.FindManyMovesResolver,
    findUniqueMoves: actionResolvers.FindUniqueMovesResolver,
    findUniqueMovesOrThrow: actionResolvers.FindUniqueMovesOrThrowResolver,
    groupByMoves: actionResolvers.GroupByMovesResolver,
  },
  MoveEffects: {
    aggregateMoveEffects: actionResolvers.AggregateMoveEffectsResolver,
    findFirstMoveEffects: actionResolvers.FindFirstMoveEffectsResolver,
    findFirstMoveEffectsOrThrow: actionResolvers.FindFirstMoveEffectsOrThrowResolver,
    findManyMoveEffects: actionResolvers.FindManyMoveEffectsResolver,
    findUniqueMoveEffects: actionResolvers.FindUniqueMoveEffectsResolver,
    findUniqueMoveEffectsOrThrow: actionResolvers.FindUniqueMoveEffectsOrThrowResolver,
    groupByMoveEffects: actionResolvers.GroupByMoveEffectsResolver,
  },
  MoveTargets: {
    aggregateMoveTargets: actionResolvers.AggregateMoveTargetsResolver,
    findFirstMoveTargets: actionResolvers.FindFirstMoveTargetsResolver,
    findFirstMoveTargetsOrThrow: actionResolvers.FindFirstMoveTargetsOrThrowResolver,
    findManyMoveTargets: actionResolvers.FindManyMoveTargetsResolver,
    findUniqueMoveTargets: actionResolvers.FindUniqueMoveTargetsResolver,
    findUniqueMoveTargetsOrThrow: actionResolvers.FindUniqueMoveTargetsOrThrowResolver,
    groupByMoveTargets: actionResolvers.GroupByMoveTargetsResolver,
  },
  MoveDamageClasses: {
    aggregateMoveDamageClasses: actionResolvers.AggregateMoveDamageClassesResolver,
    findFirstMoveDamageClasses: actionResolvers.FindFirstMoveDamageClassesResolver,
    findFirstMoveDamageClassesOrThrow: actionResolvers.FindFirstMoveDamageClassesOrThrowResolver,
    findManyMoveDamageClasses: actionResolvers.FindManyMoveDamageClassesResolver,
    findUniqueMoveDamageClasses: actionResolvers.FindUniqueMoveDamageClassesResolver,
    findUniqueMoveDamageClassesOrThrow: actionResolvers.FindUniqueMoveDamageClassesOrThrowResolver,
    groupByMoveDamageClasses: actionResolvers.GroupByMoveDamageClassesResolver,
  },
  Types: {
    aggregateTypes: actionResolvers.AggregateTypesResolver,
    findFirstTypes: actionResolvers.FindFirstTypesResolver,
    findFirstTypesOrThrow: actionResolvers.FindFirstTypesOrThrowResolver,
    findManyTypes: actionResolvers.FindManyTypesResolver,
    findUniqueTypes: actionResolvers.FindUniqueTypesResolver,
    findUniqueTypesOrThrow: actionResolvers.FindUniqueTypesOrThrowResolver,
    groupByTypes: actionResolvers.GroupByTypesResolver,
  },
  Abilities: {
    aggregateAbilities: actionResolvers.AggregateAbilitiesResolver,
    findFirstAbilities: actionResolvers.FindFirstAbilitiesResolver,
    findFirstAbilitiesOrThrow: actionResolvers.FindFirstAbilitiesOrThrowResolver,
    findManyAbilities: actionResolvers.FindManyAbilitiesResolver,
    findUniqueAbilities: actionResolvers.FindUniqueAbilitiesResolver,
    findUniqueAbilitiesOrThrow: actionResolvers.FindUniqueAbilitiesOrThrowResolver,
    groupByAbilities: actionResolvers.GroupByAbilitiesResolver,
  },
  Items: {
    aggregateItems: actionResolvers.AggregateItemsResolver,
    findFirstItems: actionResolvers.FindFirstItemsResolver,
    findFirstItemsOrThrow: actionResolvers.FindFirstItemsOrThrowResolver,
    findManyItems: actionResolvers.FindManyItemsResolver,
    findUniqueItems: actionResolvers.FindUniqueItemsResolver,
    findUniqueItemsOrThrow: actionResolvers.FindUniqueItemsOrThrowResolver,
    groupByItems: actionResolvers.GroupByItemsResolver,
  },
  ItemCategories: {
    aggregateItemCategories: actionResolvers.AggregateItemCategoriesResolver,
    findFirstItemCategories: actionResolvers.FindFirstItemCategoriesResolver,
    findFirstItemCategoriesOrThrow: actionResolvers.FindFirstItemCategoriesOrThrowResolver,
    findManyItemCategories: actionResolvers.FindManyItemCategoriesResolver,
    findUniqueItemCategories: actionResolvers.FindUniqueItemCategoriesResolver,
    findUniqueItemCategoriesOrThrow: actionResolvers.FindUniqueItemCategoriesOrThrowResolver,
    groupByItemCategories: actionResolvers.GroupByItemCategoriesResolver,
  },
  ItemPockets: {
    aggregateItemPockets: actionResolvers.AggregateItemPocketsResolver,
    findFirstItemPockets: actionResolvers.FindFirstItemPocketsResolver,
    findFirstItemPocketsOrThrow: actionResolvers.FindFirstItemPocketsOrThrowResolver,
    findManyItemPockets: actionResolvers.FindManyItemPocketsResolver,
    findUniqueItemPockets: actionResolvers.FindUniqueItemPocketsResolver,
    findUniqueItemPocketsOrThrow: actionResolvers.FindUniqueItemPocketsOrThrowResolver,
    groupByItemPockets: actionResolvers.GroupByItemPocketsResolver,
  },
  Stats: {
    aggregateStats: actionResolvers.AggregateStatsResolver,
    findFirstStats: actionResolvers.FindFirstStatsResolver,
    findFirstStatsOrThrow: actionResolvers.FindFirstStatsOrThrowResolver,
    findManyStats: actionResolvers.FindManyStatsResolver,
    findUniqueStats: actionResolvers.FindUniqueStatsResolver,
    findUniqueStatsOrThrow: actionResolvers.FindUniqueStatsOrThrowResolver,
    groupByStats: actionResolvers.GroupByStatsResolver,
  },
  Generations: {
    aggregateGenerations: actionResolvers.AggregateGenerationsResolver,
    findFirstGenerations: actionResolvers.FindFirstGenerationsResolver,
    findFirstGenerationsOrThrow: actionResolvers.FindFirstGenerationsOrThrowResolver,
    findManyGenerations: actionResolvers.FindManyGenerationsResolver,
    findUniqueGenerations: actionResolvers.FindUniqueGenerationsResolver,
    findUniqueGenerationsOrThrow: actionResolvers.FindUniqueGenerationsOrThrowResolver,
    groupByGenerations: actionResolvers.GroupByGenerationsResolver,
  },
  VersionGroups: {
    aggregateVersionGroups: actionResolvers.AggregateVersionGroupsResolver,
    findFirstVersionGroups: actionResolvers.FindFirstVersionGroupsResolver,
    findFirstVersionGroupsOrThrow: actionResolvers.FindFirstVersionGroupsOrThrowResolver,
    findManyVersionGroups: actionResolvers.FindManyVersionGroupsResolver,
    findUniqueVersionGroups: actionResolvers.FindUniqueVersionGroupsResolver,
    findUniqueVersionGroupsOrThrow: actionResolvers.FindUniqueVersionGroupsOrThrowResolver,
    groupByVersionGroups: actionResolvers.GroupByVersionGroupsResolver,
  },
  Versions: {
    aggregateVersions: actionResolvers.AggregateVersionsResolver,
    findFirstVersions: actionResolvers.FindFirstVersionsResolver,
    findFirstVersionsOrThrow: actionResolvers.FindFirstVersionsOrThrowResolver,
    findManyVersions: actionResolvers.FindManyVersionsResolver,
    findUniqueVersions: actionResolvers.FindUniqueVersionsResolver,
    findUniqueVersionsOrThrow: actionResolvers.FindUniqueVersionsOrThrowResolver,
    groupByVersions: actionResolvers.GroupByVersionsResolver,
  },
  Regions: {
    aggregateRegions: actionResolvers.AggregateRegionsResolver,
    findFirstRegions: actionResolvers.FindFirstRegionsResolver,
    findFirstRegionsOrThrow: actionResolvers.FindFirstRegionsOrThrowResolver,
    findManyRegions: actionResolvers.FindManyRegionsResolver,
    findUniqueRegions: actionResolvers.FindUniqueRegionsResolver,
    findUniqueRegionsOrThrow: actionResolvers.FindUniqueRegionsOrThrowResolver,
    groupByRegions: actionResolvers.GroupByRegionsResolver,
  },
  Locations: {
    aggregateLocations: actionResolvers.AggregateLocationsResolver,
    findFirstLocations: actionResolvers.FindFirstLocationsResolver,
    findFirstLocationsOrThrow: actionResolvers.FindFirstLocationsOrThrowResolver,
    findManyLocations: actionResolvers.FindManyLocationsResolver,
    findUniqueLocations: actionResolvers.FindUniqueLocationsResolver,
    findUniqueLocationsOrThrow: actionResolvers.FindUniqueLocationsOrThrowResolver,
    groupByLocations: actionResolvers.GroupByLocationsResolver,
  },
  LocationAreas: {
    aggregateLocationAreas: actionResolvers.AggregateLocationAreasResolver,
    findFirstLocationAreas: actionResolvers.FindFirstLocationAreasResolver,
    findFirstLocationAreasOrThrow: actionResolvers.FindFirstLocationAreasOrThrowResolver,
    findManyLocationAreas: actionResolvers.FindManyLocationAreasResolver,
    findUniqueLocationAreas: actionResolvers.FindUniqueLocationAreasResolver,
    findUniqueLocationAreasOrThrow: actionResolvers.FindUniqueLocationAreasOrThrowResolver,
    groupByLocationAreas: actionResolvers.GroupByLocationAreasResolver,
  },
  Pokedexes: {
    aggregatePokedexes: actionResolvers.AggregatePokedexesResolver,
    findFirstPokedexes: actionResolvers.FindFirstPokedexesResolver,
    findFirstPokedexesOrThrow: actionResolvers.FindFirstPokedexesOrThrowResolver,
    findManyPokedexes: actionResolvers.FindManyPokedexesResolver,
    findUniquePokedexes: actionResolvers.FindUniquePokedexesResolver,
    findUniquePokedexesOrThrow: actionResolvers.FindUniquePokedexesOrThrowResolver,
    groupByPokedexes: actionResolvers.GroupByPokedexesResolver,
  },
  EvolutionChains: {
    aggregateEvolutionChains: actionResolvers.AggregateEvolutionChainsResolver,
    findFirstEvolutionChains: actionResolvers.FindFirstEvolutionChainsResolver,
    findFirstEvolutionChainsOrThrow: actionResolvers.FindFirstEvolutionChainsOrThrowResolver,
    findManyEvolutionChains: actionResolvers.FindManyEvolutionChainsResolver,
    findUniqueEvolutionChains: actionResolvers.FindUniqueEvolutionChainsResolver,
    findUniqueEvolutionChainsOrThrow: actionResolvers.FindUniqueEvolutionChainsOrThrowResolver,
    groupByEvolutionChains: actionResolvers.GroupByEvolutionChainsResolver,
  },
  EvolutionTriggers: {
    aggregateEvolutionTriggers: actionResolvers.AggregateEvolutionTriggersResolver,
    findFirstEvolutionTriggers: actionResolvers.FindFirstEvolutionTriggersResolver,
    findFirstEvolutionTriggersOrThrow: actionResolvers.FindFirstEvolutionTriggersOrThrowResolver,
    findManyEvolutionTriggers: actionResolvers.FindManyEvolutionTriggersResolver,
    findUniqueEvolutionTriggers: actionResolvers.FindUniqueEvolutionTriggersResolver,
    findUniqueEvolutionTriggersOrThrow: actionResolvers.FindUniqueEvolutionTriggersOrThrowResolver,
    groupByEvolutionTriggers: actionResolvers.GroupByEvolutionTriggersResolver,
  },
  PokemonEvolution: {
    aggregatePokemonEvolution: actionResolvers.AggregatePokemonEvolutionResolver,
    findFirstPokemonEvolution: actionResolvers.FindFirstPokemonEvolutionResolver,
    findFirstPokemonEvolutionOrThrow: actionResolvers.FindFirstPokemonEvolutionOrThrowResolver,
    pokemonEvolutions: actionResolvers.FindManyPokemonEvolutionResolver,
    pokemonEvolution: actionResolvers.FindUniquePokemonEvolutionResolver,
    getPokemonEvolution: actionResolvers.FindUniquePokemonEvolutionOrThrowResolver,
    groupByPokemonEvolution: actionResolvers.GroupByPokemonEvolutionResolver,
  },
  GrowthRates: {
    aggregateGrowthRates: actionResolvers.AggregateGrowthRatesResolver,
    findFirstGrowthRates: actionResolvers.FindFirstGrowthRatesResolver,
    findFirstGrowthRatesOrThrow: actionResolvers.FindFirstGrowthRatesOrThrowResolver,
    findManyGrowthRates: actionResolvers.FindManyGrowthRatesResolver,
    findUniqueGrowthRates: actionResolvers.FindUniqueGrowthRatesResolver,
    findUniqueGrowthRatesOrThrow: actionResolvers.FindUniqueGrowthRatesOrThrowResolver,
    groupByGrowthRates: actionResolvers.GroupByGrowthRatesResolver,
  },
  Experience: {
    aggregateExperience: actionResolvers.AggregateExperienceResolver,
    findFirstExperience: actionResolvers.FindFirstExperienceResolver,
    findFirstExperienceOrThrow: actionResolvers.FindFirstExperienceOrThrowResolver,
    experiences: actionResolvers.FindManyExperienceResolver,
    experience: actionResolvers.FindUniqueExperienceResolver,
    getExperience: actionResolvers.FindUniqueExperienceOrThrowResolver,
    groupByExperience: actionResolvers.GroupByExperienceResolver,
  },
  Genders: {
    aggregateGenders: actionResolvers.AggregateGendersResolver,
    findFirstGenders: actionResolvers.FindFirstGendersResolver,
    findFirstGendersOrThrow: actionResolvers.FindFirstGendersOrThrowResolver,
    findManyGenders: actionResolvers.FindManyGendersResolver,
    findUniqueGenders: actionResolvers.FindUniqueGendersResolver,
    findUniqueGendersOrThrow: actionResolvers.FindUniqueGendersOrThrowResolver,
    groupByGenders: actionResolvers.GroupByGendersResolver,
  },
  Languages: {
    aggregateLanguages: actionResolvers.AggregateLanguagesResolver,
    findFirstLanguages: actionResolvers.FindFirstLanguagesResolver,
    findFirstLanguagesOrThrow: actionResolvers.FindFirstLanguagesOrThrowResolver,
    findManyLanguages: actionResolvers.FindManyLanguagesResolver,
    findUniqueLanguages: actionResolvers.FindUniqueLanguagesResolver,
    findUniqueLanguagesOrThrow: actionResolvers.FindUniqueLanguagesOrThrowResolver,
    groupByLanguages: actionResolvers.GroupByLanguagesResolver,
  },
  EggGroups: {
    aggregateEggGroups: actionResolvers.AggregateEggGroupsResolver,
    findFirstEggGroups: actionResolvers.FindFirstEggGroupsResolver,
    findFirstEggGroupsOrThrow: actionResolvers.FindFirstEggGroupsOrThrowResolver,
    findManyEggGroups: actionResolvers.FindManyEggGroupsResolver,
    findUniqueEggGroups: actionResolvers.FindUniqueEggGroupsResolver,
    findUniqueEggGroupsOrThrow: actionResolvers.FindUniqueEggGroupsOrThrowResolver,
    groupByEggGroups: actionResolvers.GroupByEggGroupsResolver,
  },
  Natures: {
    aggregateNatures: actionResolvers.AggregateNaturesResolver,
    findFirstNatures: actionResolvers.FindFirstNaturesResolver,
    findFirstNaturesOrThrow: actionResolvers.FindFirstNaturesOrThrowResolver,
    findManyNatures: actionResolvers.FindManyNaturesResolver,
    findUniqueNatures: actionResolvers.FindUniqueNaturesResolver,
    findUniqueNaturesOrThrow: actionResolvers.FindUniqueNaturesOrThrowResolver,
    groupByNatures: actionResolvers.GroupByNaturesResolver,
  },
  ContestTypes: {
    aggregateContestTypes: actionResolvers.AggregateContestTypesResolver,
    findFirstContestTypes: actionResolvers.FindFirstContestTypesResolver,
    findFirstContestTypesOrThrow: actionResolvers.FindFirstContestTypesOrThrowResolver,
    findManyContestTypes: actionResolvers.FindManyContestTypesResolver,
    findUniqueContestTypes: actionResolvers.FindUniqueContestTypesResolver,
    findUniqueContestTypesOrThrow: actionResolvers.FindUniqueContestTypesOrThrowResolver,
    groupByContestTypes: actionResolvers.GroupByContestTypesResolver,
  },
  ContestEffects: {
    aggregateContestEffects: actionResolvers.AggregateContestEffectsResolver,
    findFirstContestEffects: actionResolvers.FindFirstContestEffectsResolver,
    findFirstContestEffectsOrThrow: actionResolvers.FindFirstContestEffectsOrThrowResolver,
    findManyContestEffects: actionResolvers.FindManyContestEffectsResolver,
    findUniqueContestEffects: actionResolvers.FindUniqueContestEffectsResolver,
    findUniqueContestEffectsOrThrow: actionResolvers.FindUniqueContestEffectsOrThrowResolver,
    groupByContestEffects: actionResolvers.GroupByContestEffectsResolver,
  },
  SuperContestEffects: {
    aggregateSuperContestEffects: actionResolvers.AggregateSuperContestEffectsResolver,
    findFirstSuperContestEffects: actionResolvers.FindFirstSuperContestEffectsResolver,
    findFirstSuperContestEffectsOrThrow: actionResolvers.FindFirstSuperContestEffectsOrThrowResolver,
    findManySuperContestEffects: actionResolvers.FindManySuperContestEffectsResolver,
    findUniqueSuperContestEffects: actionResolvers.FindUniqueSuperContestEffectsResolver,
    findUniqueSuperContestEffectsOrThrow: actionResolvers.FindUniqueSuperContestEffectsOrThrowResolver,
    groupBySuperContestEffects: actionResolvers.GroupBySuperContestEffectsResolver,
  },
  Machines: {
    aggregateMachines: actionResolvers.AggregateMachinesResolver,
    findFirstMachines: actionResolvers.FindFirstMachinesResolver,
    findFirstMachinesOrThrow: actionResolvers.FindFirstMachinesOrThrowResolver,
    findManyMachines: actionResolvers.FindManyMachinesResolver,
    findUniqueMachines: actionResolvers.FindUniqueMachinesResolver,
    findUniqueMachinesOrThrow: actionResolvers.FindUniqueMachinesOrThrowResolver,
    groupByMachines: actionResolvers.GroupByMachinesResolver,
  },
  EncounterMethods: {
    aggregateEncounterMethods: actionResolvers.AggregateEncounterMethodsResolver,
    findFirstEncounterMethods: actionResolvers.FindFirstEncounterMethodsResolver,
    findFirstEncounterMethodsOrThrow: actionResolvers.FindFirstEncounterMethodsOrThrowResolver,
    findManyEncounterMethods: actionResolvers.FindManyEncounterMethodsResolver,
    findUniqueEncounterMethods: actionResolvers.FindUniqueEncounterMethodsResolver,
    findUniqueEncounterMethodsOrThrow: actionResolvers.FindUniqueEncounterMethodsOrThrowResolver,
    groupByEncounterMethods: actionResolvers.GroupByEncounterMethodsResolver,
  },
  EncounterSlots: {
    aggregateEncounterSlots: actionResolvers.AggregateEncounterSlotsResolver,
    findFirstEncounterSlots: actionResolvers.FindFirstEncounterSlotsResolver,
    findFirstEncounterSlotsOrThrow: actionResolvers.FindFirstEncounterSlotsOrThrowResolver,
    findManyEncounterSlots: actionResolvers.FindManyEncounterSlotsResolver,
    findUniqueEncounterSlots: actionResolvers.FindUniqueEncounterSlotsResolver,
    findUniqueEncounterSlotsOrThrow: actionResolvers.FindUniqueEncounterSlotsOrThrowResolver,
    groupByEncounterSlots: actionResolvers.GroupByEncounterSlotsResolver,
  },
  Encounters: {
    aggregateEncounters: actionResolvers.AggregateEncountersResolver,
    findFirstEncounters: actionResolvers.FindFirstEncountersResolver,
    findFirstEncountersOrThrow: actionResolvers.FindFirstEncountersOrThrowResolver,
    findManyEncounters: actionResolvers.FindManyEncountersResolver,
    findUniqueEncounters: actionResolvers.FindUniqueEncountersResolver,
    findUniqueEncountersOrThrow: actionResolvers.FindUniqueEncountersOrThrowResolver,
    groupByEncounters: actionResolvers.GroupByEncountersResolver,
  },
  EncounterConditions: {
    aggregateEncounterConditions: actionResolvers.AggregateEncounterConditionsResolver,
    findFirstEncounterConditions: actionResolvers.FindFirstEncounterConditionsResolver,
    findFirstEncounterConditionsOrThrow: actionResolvers.FindFirstEncounterConditionsOrThrowResolver,
    findManyEncounterConditions: actionResolvers.FindManyEncounterConditionsResolver,
    findUniqueEncounterConditions: actionResolvers.FindUniqueEncounterConditionsResolver,
    findUniqueEncounterConditionsOrThrow: actionResolvers.FindUniqueEncounterConditionsOrThrowResolver,
    groupByEncounterConditions: actionResolvers.GroupByEncounterConditionsResolver,
  },
  EncounterConditionValues: {
    aggregateEncounterConditionValues: actionResolvers.AggregateEncounterConditionValuesResolver,
    findFirstEncounterConditionValues: actionResolvers.FindFirstEncounterConditionValuesResolver,
    findFirstEncounterConditionValuesOrThrow: actionResolvers.FindFirstEncounterConditionValuesOrThrowResolver,
    findManyEncounterConditionValues: actionResolvers.FindManyEncounterConditionValuesResolver,
    findUniqueEncounterConditionValues: actionResolvers.FindUniqueEncounterConditionValuesResolver,
    findUniqueEncounterConditionValuesOrThrow: actionResolvers.FindUniqueEncounterConditionValuesOrThrowResolver,
    groupByEncounterConditionValues: actionResolvers.GroupByEncounterConditionValuesResolver,
  },
  EncounterConditionValueMap: {
    aggregateEncounterConditionValueMap: actionResolvers.AggregateEncounterConditionValueMapResolver,
    findFirstEncounterConditionValueMap: actionResolvers.FindFirstEncounterConditionValueMapResolver,
    findFirstEncounterConditionValueMapOrThrow: actionResolvers.FindFirstEncounterConditionValueMapOrThrowResolver,
    encounterConditionValueMaps: actionResolvers.FindManyEncounterConditionValueMapResolver,
    encounterConditionValueMap: actionResolvers.FindUniqueEncounterConditionValueMapResolver,
    getEncounterConditionValueMap: actionResolvers.FindUniqueEncounterConditionValueMapOrThrowResolver,
    groupByEncounterConditionValueMap: actionResolvers.GroupByEncounterConditionValueMapResolver,
  },
  MoveMetaCategories: {
    aggregateMoveMetaCategories: actionResolvers.AggregateMoveMetaCategoriesResolver,
    findFirstMoveMetaCategories: actionResolvers.FindFirstMoveMetaCategoriesResolver,
    findFirstMoveMetaCategoriesOrThrow: actionResolvers.FindFirstMoveMetaCategoriesOrThrowResolver,
    findManyMoveMetaCategories: actionResolvers.FindManyMoveMetaCategoriesResolver,
    findUniqueMoveMetaCategories: actionResolvers.FindUniqueMoveMetaCategoriesResolver,
    findUniqueMoveMetaCategoriesOrThrow: actionResolvers.FindUniqueMoveMetaCategoriesOrThrowResolver,
    groupByMoveMetaCategories: actionResolvers.GroupByMoveMetaCategoriesResolver,
  },
  MoveMetaAilments: {
    aggregateMoveMetaAilments: actionResolvers.AggregateMoveMetaAilmentsResolver,
    findFirstMoveMetaAilments: actionResolvers.FindFirstMoveMetaAilmentsResolver,
    findFirstMoveMetaAilmentsOrThrow: actionResolvers.FindFirstMoveMetaAilmentsOrThrowResolver,
    findManyMoveMetaAilments: actionResolvers.FindManyMoveMetaAilmentsResolver,
    findUniqueMoveMetaAilments: actionResolvers.FindUniqueMoveMetaAilmentsResolver,
    findUniqueMoveMetaAilmentsOrThrow: actionResolvers.FindUniqueMoveMetaAilmentsOrThrowResolver,
    groupByMoveMetaAilments: actionResolvers.GroupByMoveMetaAilmentsResolver,
  },
  MoveMeta: {
    aggregateMoveMeta: actionResolvers.AggregateMoveMetaResolver,
    findFirstMoveMeta: actionResolvers.FindFirstMoveMetaResolver,
    findFirstMoveMetaOrThrow: actionResolvers.FindFirstMoveMetaOrThrowResolver,
    moveMetas: actionResolvers.FindManyMoveMetaResolver,
    moveMeta: actionResolvers.FindUniqueMoveMetaResolver,
    getMoveMeta: actionResolvers.FindUniqueMoveMetaOrThrowResolver,
    groupByMoveMeta: actionResolvers.GroupByMoveMetaResolver,
  },
  MoveMetaStatChanges: {
    aggregateMoveMetaStatChanges: actionResolvers.AggregateMoveMetaStatChangesResolver,
    findFirstMoveMetaStatChanges: actionResolvers.FindFirstMoveMetaStatChangesResolver,
    findFirstMoveMetaStatChangesOrThrow: actionResolvers.FindFirstMoveMetaStatChangesOrThrowResolver,
    findManyMoveMetaStatChanges: actionResolvers.FindManyMoveMetaStatChangesResolver,
    findUniqueMoveMetaStatChanges: actionResolvers.FindUniqueMoveMetaStatChangesResolver,
    findUniqueMoveMetaStatChangesOrThrow: actionResolvers.FindUniqueMoveMetaStatChangesOrThrowResolver,
    groupByMoveMetaStatChanges: actionResolvers.GroupByMoveMetaStatChangesResolver,
  },
  MoveFlags: {
    aggregateMoveFlags: actionResolvers.AggregateMoveFlagsResolver,
    findFirstMoveFlags: actionResolvers.FindFirstMoveFlagsResolver,
    findFirstMoveFlagsOrThrow: actionResolvers.FindFirstMoveFlagsOrThrowResolver,
    findManyMoveFlags: actionResolvers.FindManyMoveFlagsResolver,
    findUniqueMoveFlags: actionResolvers.FindUniqueMoveFlagsResolver,
    findUniqueMoveFlagsOrThrow: actionResolvers.FindUniqueMoveFlagsOrThrowResolver,
    groupByMoveFlags: actionResolvers.GroupByMoveFlagsResolver,
  },
  MoveFlagMap: {
    aggregateMoveFlagMap: actionResolvers.AggregateMoveFlagMapResolver,
    findFirstMoveFlagMap: actionResolvers.FindFirstMoveFlagMapResolver,
    findFirstMoveFlagMapOrThrow: actionResolvers.FindFirstMoveFlagMapOrThrowResolver,
    moveFlagMaps: actionResolvers.FindManyMoveFlagMapResolver,
    moveFlagMap: actionResolvers.FindUniqueMoveFlagMapResolver,
    getMoveFlagMap: actionResolvers.FindUniqueMoveFlagMapOrThrowResolver,
    groupByMoveFlagMap: actionResolvers.GroupByMoveFlagMapResolver,
  },
  MoveBattleStyles: {
    aggregateMoveBattleStyles: actionResolvers.AggregateMoveBattleStylesResolver,
    findFirstMoveBattleStyles: actionResolvers.FindFirstMoveBattleStylesResolver,
    findFirstMoveBattleStylesOrThrow: actionResolvers.FindFirstMoveBattleStylesOrThrowResolver,
    findManyMoveBattleStyles: actionResolvers.FindManyMoveBattleStylesResolver,
    findUniqueMoveBattleStyles: actionResolvers.FindUniqueMoveBattleStylesResolver,
    findUniqueMoveBattleStylesOrThrow: actionResolvers.FindUniqueMoveBattleStylesOrThrowResolver,
    groupByMoveBattleStyles: actionResolvers.GroupByMoveBattleStylesResolver,
  },
  ItemFlags: {
    aggregateItemFlags: actionResolvers.AggregateItemFlagsResolver,
    findFirstItemFlags: actionResolvers.FindFirstItemFlagsResolver,
    findFirstItemFlagsOrThrow: actionResolvers.FindFirstItemFlagsOrThrowResolver,
    findManyItemFlags: actionResolvers.FindManyItemFlagsResolver,
    findUniqueItemFlags: actionResolvers.FindUniqueItemFlagsResolver,
    findUniqueItemFlagsOrThrow: actionResolvers.FindUniqueItemFlagsOrThrowResolver,
    groupByItemFlags: actionResolvers.GroupByItemFlagsResolver,
  },
  ItemFlagMap: {
    aggregateItemFlagMap: actionResolvers.AggregateItemFlagMapResolver,
    findFirstItemFlagMap: actionResolvers.FindFirstItemFlagMapResolver,
    findFirstItemFlagMapOrThrow: actionResolvers.FindFirstItemFlagMapOrThrowResolver,
    itemFlagMaps: actionResolvers.FindManyItemFlagMapResolver,
    itemFlagMap: actionResolvers.FindUniqueItemFlagMapResolver,
    getItemFlagMap: actionResolvers.FindUniqueItemFlagMapOrThrowResolver,
    groupByItemFlagMap: actionResolvers.GroupByItemFlagMapResolver,
  },
  ItemFlingEffects: {
    aggregateItemFlingEffects: actionResolvers.AggregateItemFlingEffectsResolver,
    findFirstItemFlingEffects: actionResolvers.FindFirstItemFlingEffectsResolver,
    findFirstItemFlingEffectsOrThrow: actionResolvers.FindFirstItemFlingEffectsOrThrowResolver,
    findManyItemFlingEffects: actionResolvers.FindManyItemFlingEffectsResolver,
    findUniqueItemFlingEffects: actionResolvers.FindUniqueItemFlingEffectsResolver,
    findUniqueItemFlingEffectsOrThrow: actionResolvers.FindUniqueItemFlingEffectsOrThrowResolver,
    groupByItemFlingEffects: actionResolvers.GroupByItemFlingEffectsResolver,
  },
  Berries: {
    aggregateBerries: actionResolvers.AggregateBerriesResolver,
    findFirstBerries: actionResolvers.FindFirstBerriesResolver,
    findFirstBerriesOrThrow: actionResolvers.FindFirstBerriesOrThrowResolver,
    findManyBerries: actionResolvers.FindManyBerriesResolver,
    findUniqueBerries: actionResolvers.FindUniqueBerriesResolver,
    findUniqueBerriesOrThrow: actionResolvers.FindUniqueBerriesOrThrowResolver,
    groupByBerries: actionResolvers.GroupByBerriesResolver,
  },
  BerryFirmness: {
    aggregateBerryFirmness: actionResolvers.AggregateBerryFirmnessResolver,
    findFirstBerryFirmness: actionResolvers.FindFirstBerryFirmnessResolver,
    findFirstBerryFirmnessOrThrow: actionResolvers.FindFirstBerryFirmnessOrThrowResolver,
    berryFirmnesses: actionResolvers.FindManyBerryFirmnessResolver,
    berryFirmness: actionResolvers.FindUniqueBerryFirmnessResolver,
    getBerryFirmness: actionResolvers.FindUniqueBerryFirmnessOrThrowResolver,
    groupByBerryFirmness: actionResolvers.GroupByBerryFirmnessResolver,
  },
  BerryFlavors: {
    aggregateBerryFlavors: actionResolvers.AggregateBerryFlavorsResolver,
    findFirstBerryFlavors: actionResolvers.FindFirstBerryFlavorsResolver,
    findFirstBerryFlavorsOrThrow: actionResolvers.FindFirstBerryFlavorsOrThrowResolver,
    findManyBerryFlavors: actionResolvers.FindManyBerryFlavorsResolver,
    findUniqueBerryFlavors: actionResolvers.FindUniqueBerryFlavorsResolver,
    findUniqueBerryFlavorsOrThrow: actionResolvers.FindUniqueBerryFlavorsOrThrowResolver,
    groupByBerryFlavors: actionResolvers.GroupByBerryFlavorsResolver,
  },
  Characteristics: {
    aggregateCharacteristics: actionResolvers.AggregateCharacteristicsResolver,
    findFirstCharacteristics: actionResolvers.FindFirstCharacteristicsResolver,
    findFirstCharacteristicsOrThrow: actionResolvers.FindFirstCharacteristicsOrThrowResolver,
    findManyCharacteristics: actionResolvers.FindManyCharacteristicsResolver,
    findUniqueCharacteristics: actionResolvers.FindUniqueCharacteristicsResolver,
    findUniqueCharacteristicsOrThrow: actionResolvers.FindUniqueCharacteristicsOrThrowResolver,
    groupByCharacteristics: actionResolvers.GroupByCharacteristicsResolver,
  },
  ContestCombos: {
    aggregateContestCombos: actionResolvers.AggregateContestCombosResolver,
    findFirstContestCombos: actionResolvers.FindFirstContestCombosResolver,
    findFirstContestCombosOrThrow: actionResolvers.FindFirstContestCombosOrThrowResolver,
    findManyContestCombos: actionResolvers.FindManyContestCombosResolver,
    findUniqueContestCombos: actionResolvers.FindUniqueContestCombosResolver,
    findUniqueContestCombosOrThrow: actionResolvers.FindUniqueContestCombosOrThrowResolver,
    groupByContestCombos: actionResolvers.GroupByContestCombosResolver,
  },
  SuperContestCombos: {
    aggregateSuperContestCombos: actionResolvers.AggregateSuperContestCombosResolver,
    findFirstSuperContestCombos: actionResolvers.FindFirstSuperContestCombosResolver,
    findFirstSuperContestCombosOrThrow: actionResolvers.FindFirstSuperContestCombosOrThrowResolver,
    findManySuperContestCombos: actionResolvers.FindManySuperContestCombosResolver,
    findUniqueSuperContestCombos: actionResolvers.FindUniqueSuperContestCombosResolver,
    findUniqueSuperContestCombosOrThrow: actionResolvers.FindUniqueSuperContestCombosOrThrowResolver,
    groupBySuperContestCombos: actionResolvers.GroupBySuperContestCombosResolver,
  },
  PokemonMoveMethods: {
    aggregatePokemonMoveMethods: actionResolvers.AggregatePokemonMoveMethodsResolver,
    findFirstPokemonMoveMethods: actionResolvers.FindFirstPokemonMoveMethodsResolver,
    findFirstPokemonMoveMethodsOrThrow: actionResolvers.FindFirstPokemonMoveMethodsOrThrowResolver,
    findManyPokemonMoveMethods: actionResolvers.FindManyPokemonMoveMethodsResolver,
    findUniquePokemonMoveMethods: actionResolvers.FindUniquePokemonMoveMethodsResolver,
    findUniquePokemonMoveMethodsOrThrow: actionResolvers.FindUniquePokemonMoveMethodsOrThrowResolver,
    groupByPokemonMoveMethods: actionResolvers.GroupByPokemonMoveMethodsResolver,
  },
  VersionGroupPokemonMoveMethods: {
    aggregateVersionGroupPokemonMoveMethods: actionResolvers.AggregateVersionGroupPokemonMoveMethodsResolver,
    findFirstVersionGroupPokemonMoveMethods: actionResolvers.FindFirstVersionGroupPokemonMoveMethodsResolver,
    findFirstVersionGroupPokemonMoveMethodsOrThrow: actionResolvers.FindFirstVersionGroupPokemonMoveMethodsOrThrowResolver,
    findManyVersionGroupPokemonMoveMethods: actionResolvers.FindManyVersionGroupPokemonMoveMethodsResolver,
    findUniqueVersionGroupPokemonMoveMethods: actionResolvers.FindUniqueVersionGroupPokemonMoveMethodsResolver,
    findUniqueVersionGroupPokemonMoveMethodsOrThrow: actionResolvers.FindUniqueVersionGroupPokemonMoveMethodsOrThrowResolver,
    groupByVersionGroupPokemonMoveMethods: actionResolvers.GroupByVersionGroupPokemonMoveMethodsResolver,
  },
  PokemonShapes: {
    aggregatePokemonShapes: actionResolvers.AggregatePokemonShapesResolver,
    findFirstPokemonShapes: actionResolvers.FindFirstPokemonShapesResolver,
    findFirstPokemonShapesOrThrow: actionResolvers.FindFirstPokemonShapesOrThrowResolver,
    findManyPokemonShapes: actionResolvers.FindManyPokemonShapesResolver,
    findUniquePokemonShapes: actionResolvers.FindUniquePokemonShapesResolver,
    findUniquePokemonShapesOrThrow: actionResolvers.FindUniquePokemonShapesOrThrowResolver,
    groupByPokemonShapes: actionResolvers.GroupByPokemonShapesResolver,
  },
  PokemonColors: {
    aggregatePokemonColors: actionResolvers.AggregatePokemonColorsResolver,
    findFirstPokemonColors: actionResolvers.FindFirstPokemonColorsResolver,
    findFirstPokemonColorsOrThrow: actionResolvers.FindFirstPokemonColorsOrThrowResolver,
    findManyPokemonColors: actionResolvers.FindManyPokemonColorsResolver,
    findUniquePokemonColors: actionResolvers.FindUniquePokemonColorsResolver,
    findUniquePokemonColorsOrThrow: actionResolvers.FindUniquePokemonColorsOrThrowResolver,
    groupByPokemonColors: actionResolvers.GroupByPokemonColorsResolver,
  },
  PokemonHabitats: {
    aggregatePokemonHabitats: actionResolvers.AggregatePokemonHabitatsResolver,
    findFirstPokemonHabitats: actionResolvers.FindFirstPokemonHabitatsResolver,
    findFirstPokemonHabitatsOrThrow: actionResolvers.FindFirstPokemonHabitatsOrThrowResolver,
    findManyPokemonHabitats: actionResolvers.FindManyPokemonHabitatsResolver,
    findUniquePokemonHabitats: actionResolvers.FindUniquePokemonHabitatsResolver,
    findUniquePokemonHabitatsOrThrow: actionResolvers.FindUniquePokemonHabitatsOrThrowResolver,
    groupByPokemonHabitats: actionResolvers.GroupByPokemonHabitatsResolver,
  },
  TypeEfficacy: {
    aggregateTypeEfficacy: actionResolvers.AggregateTypeEfficacyResolver,
    findFirstTypeEfficacy: actionResolvers.FindFirstTypeEfficacyResolver,
    findFirstTypeEfficacyOrThrow: actionResolvers.FindFirstTypeEfficacyOrThrowResolver,
    typeEfficacies: actionResolvers.FindManyTypeEfficacyResolver,
    typeEfficacy: actionResolvers.FindUniqueTypeEfficacyResolver,
    getTypeEfficacy: actionResolvers.FindUniqueTypeEfficacyOrThrowResolver,
    groupByTypeEfficacy: actionResolvers.GroupByTypeEfficacyResolver,
  },
  VersionGroupRegions: {
    aggregateVersionGroupRegions: actionResolvers.AggregateVersionGroupRegionsResolver,
    findFirstVersionGroupRegions: actionResolvers.FindFirstVersionGroupRegionsResolver,
    findFirstVersionGroupRegionsOrThrow: actionResolvers.FindFirstVersionGroupRegionsOrThrowResolver,
    findManyVersionGroupRegions: actionResolvers.FindManyVersionGroupRegionsResolver,
    findUniqueVersionGroupRegions: actionResolvers.FindUniqueVersionGroupRegionsResolver,
    findUniqueVersionGroupRegionsOrThrow: actionResolvers.FindUniqueVersionGroupRegionsOrThrowResolver,
    groupByVersionGroupRegions: actionResolvers.GroupByVersionGroupRegionsResolver,
  },
  PokedexVersionGroups: {
    aggregatePokedexVersionGroups: actionResolvers.AggregatePokedexVersionGroupsResolver,
    findFirstPokedexVersionGroups: actionResolvers.FindFirstPokedexVersionGroupsResolver,
    findFirstPokedexVersionGroupsOrThrow: actionResolvers.FindFirstPokedexVersionGroupsOrThrowResolver,
    findManyPokedexVersionGroups: actionResolvers.FindManyPokedexVersionGroupsResolver,
    findUniquePokedexVersionGroups: actionResolvers.FindUniquePokedexVersionGroupsResolver,
    findUniquePokedexVersionGroupsOrThrow: actionResolvers.FindUniquePokedexVersionGroupsOrThrowResolver,
    groupByPokedexVersionGroups: actionResolvers.GroupByPokedexVersionGroupsResolver,
  },
  PokemonAbilities: {
    aggregatePokemonAbilities: actionResolvers.AggregatePokemonAbilitiesResolver,
    findFirstPokemonAbilities: actionResolvers.FindFirstPokemonAbilitiesResolver,
    findFirstPokemonAbilitiesOrThrow: actionResolvers.FindFirstPokemonAbilitiesOrThrowResolver,
    findManyPokemonAbilities: actionResolvers.FindManyPokemonAbilitiesResolver,
    findUniquePokemonAbilities: actionResolvers.FindUniquePokemonAbilitiesResolver,
    findUniquePokemonAbilitiesOrThrow: actionResolvers.FindUniquePokemonAbilitiesOrThrowResolver,
    groupByPokemonAbilities: actionResolvers.GroupByPokemonAbilitiesResolver,
  },
  PokemonMoves: {
    aggregatePokemonMoves: actionResolvers.AggregatePokemonMovesResolver,
    findFirstPokemonMoves: actionResolvers.FindFirstPokemonMovesResolver,
    findFirstPokemonMovesOrThrow: actionResolvers.FindFirstPokemonMovesOrThrowResolver,
    findManyPokemonMoves: actionResolvers.FindManyPokemonMovesResolver,
    findUniquePokemonMoves: actionResolvers.FindUniquePokemonMovesResolver,
    findUniquePokemonMovesOrThrow: actionResolvers.FindUniquePokemonMovesOrThrowResolver,
    groupByPokemonMoves: actionResolvers.GroupByPokemonMovesResolver,
  },
  PokemonStats: {
    aggregatePokemonStats: actionResolvers.AggregatePokemonStatsResolver,
    findFirstPokemonStats: actionResolvers.FindFirstPokemonStatsResolver,
    findFirstPokemonStatsOrThrow: actionResolvers.FindFirstPokemonStatsOrThrowResolver,
    findManyPokemonStats: actionResolvers.FindManyPokemonStatsResolver,
    findUniquePokemonStats: actionResolvers.FindUniquePokemonStatsResolver,
    findUniquePokemonStatsOrThrow: actionResolvers.FindUniquePokemonStatsOrThrowResolver,
    groupByPokemonStats: actionResolvers.GroupByPokemonStatsResolver,
  },
  PokemonTypes: {
    aggregatePokemonTypes: actionResolvers.AggregatePokemonTypesResolver,
    findFirstPokemonTypes: actionResolvers.FindFirstPokemonTypesResolver,
    findFirstPokemonTypesOrThrow: actionResolvers.FindFirstPokemonTypesOrThrowResolver,
    findManyPokemonTypes: actionResolvers.FindManyPokemonTypesResolver,
    findUniquePokemonTypes: actionResolvers.FindUniquePokemonTypesResolver,
    findUniquePokemonTypesOrThrow: actionResolvers.FindUniquePokemonTypesOrThrowResolver,
    groupByPokemonTypes: actionResolvers.GroupByPokemonTypesResolver,
  },
  PokemonEggGroups: {
    aggregatePokemonEggGroups: actionResolvers.AggregatePokemonEggGroupsResolver,
    findFirstPokemonEggGroups: actionResolvers.FindFirstPokemonEggGroupsResolver,
    findFirstPokemonEggGroupsOrThrow: actionResolvers.FindFirstPokemonEggGroupsOrThrowResolver,
    findManyPokemonEggGroups: actionResolvers.FindManyPokemonEggGroupsResolver,
    findUniquePokemonEggGroups: actionResolvers.FindUniquePokemonEggGroupsResolver,
    findUniquePokemonEggGroupsOrThrow: actionResolvers.FindUniquePokemonEggGroupsOrThrowResolver,
    groupByPokemonEggGroups: actionResolvers.GroupByPokemonEggGroupsResolver,
  },
  PokemonItems: {
    aggregatePokemonItems: actionResolvers.AggregatePokemonItemsResolver,
    findFirstPokemonItems: actionResolvers.FindFirstPokemonItemsResolver,
    findFirstPokemonItemsOrThrow: actionResolvers.FindFirstPokemonItemsOrThrowResolver,
    findManyPokemonItems: actionResolvers.FindManyPokemonItemsResolver,
    findUniquePokemonItems: actionResolvers.FindUniquePokemonItemsResolver,
    findUniquePokemonItemsOrThrow: actionResolvers.FindUniquePokemonItemsOrThrowResolver,
    groupByPokemonItems: actionResolvers.GroupByPokemonItemsResolver,
  },
  PokemonGameIndices: {
    aggregatePokemonGameIndices: actionResolvers.AggregatePokemonGameIndicesResolver,
    findFirstPokemonGameIndices: actionResolvers.FindFirstPokemonGameIndicesResolver,
    findFirstPokemonGameIndicesOrThrow: actionResolvers.FindFirstPokemonGameIndicesOrThrowResolver,
    findManyPokemonGameIndices: actionResolvers.FindManyPokemonGameIndicesResolver,
    findUniquePokemonGameIndices: actionResolvers.FindUniquePokemonGameIndicesResolver,
    findUniquePokemonGameIndicesOrThrow: actionResolvers.FindUniquePokemonGameIndicesOrThrowResolver,
    groupByPokemonGameIndices: actionResolvers.GroupByPokemonGameIndicesResolver,
  },
  PokemonDexNumbers: {
    aggregatePokemonDexNumbers: actionResolvers.AggregatePokemonDexNumbersResolver,
    findFirstPokemonDexNumbers: actionResolvers.FindFirstPokemonDexNumbersResolver,
    findFirstPokemonDexNumbersOrThrow: actionResolvers.FindFirstPokemonDexNumbersOrThrowResolver,
    findManyPokemonDexNumbers: actionResolvers.FindManyPokemonDexNumbersResolver,
    findUniquePokemonDexNumbers: actionResolvers.FindUniquePokemonDexNumbersResolver,
    findUniquePokemonDexNumbersOrThrow: actionResolvers.FindUniquePokemonDexNumbersOrThrowResolver,
    groupByPokemonDexNumbers: actionResolvers.GroupByPokemonDexNumbersResolver,
  },
  PokemonFormGenerations: {
    aggregatePokemonFormGenerations: actionResolvers.AggregatePokemonFormGenerationsResolver,
    findFirstPokemonFormGenerations: actionResolvers.FindFirstPokemonFormGenerationsResolver,
    findFirstPokemonFormGenerationsOrThrow: actionResolvers.FindFirstPokemonFormGenerationsOrThrowResolver,
    findManyPokemonFormGenerations: actionResolvers.FindManyPokemonFormGenerationsResolver,
    findUniquePokemonFormGenerations: actionResolvers.FindUniquePokemonFormGenerationsResolver,
    findUniquePokemonFormGenerationsOrThrow: actionResolvers.FindUniquePokemonFormGenerationsOrThrowResolver,
    groupByPokemonFormGenerations: actionResolvers.GroupByPokemonFormGenerationsResolver,
  },
  PokemonFormTypes: {
    aggregatePokemonFormTypes: actionResolvers.AggregatePokemonFormTypesResolver,
    findFirstPokemonFormTypes: actionResolvers.FindFirstPokemonFormTypesResolver,
    findFirstPokemonFormTypesOrThrow: actionResolvers.FindFirstPokemonFormTypesOrThrowResolver,
    findManyPokemonFormTypes: actionResolvers.FindManyPokemonFormTypesResolver,
    findUniquePokemonFormTypes: actionResolvers.FindUniquePokemonFormTypesResolver,
    findUniquePokemonFormTypesOrThrow: actionResolvers.FindUniquePokemonFormTypesOrThrowResolver,
    groupByPokemonFormTypes: actionResolvers.GroupByPokemonFormTypesResolver,
  },
  TypeGameIndices: {
    aggregateTypeGameIndices: actionResolvers.AggregateTypeGameIndicesResolver,
    findFirstTypeGameIndices: actionResolvers.FindFirstTypeGameIndicesResolver,
    findFirstTypeGameIndicesOrThrow: actionResolvers.FindFirstTypeGameIndicesOrThrowResolver,
    findManyTypeGameIndices: actionResolvers.FindManyTypeGameIndicesResolver,
    findUniqueTypeGameIndices: actionResolvers.FindUniqueTypeGameIndicesResolver,
    findUniqueTypeGameIndicesOrThrow: actionResolvers.FindUniqueTypeGameIndicesOrThrowResolver,
    groupByTypeGameIndices: actionResolvers.GroupByTypeGameIndicesResolver,
  },
  ItemGameIndices: {
    aggregateItemGameIndices: actionResolvers.AggregateItemGameIndicesResolver,
    findFirstItemGameIndices: actionResolvers.FindFirstItemGameIndicesResolver,
    findFirstItemGameIndicesOrThrow: actionResolvers.FindFirstItemGameIndicesOrThrowResolver,
    findManyItemGameIndices: actionResolvers.FindManyItemGameIndicesResolver,
    findUniqueItemGameIndices: actionResolvers.FindUniqueItemGameIndicesResolver,
    findUniqueItemGameIndicesOrThrow: actionResolvers.FindUniqueItemGameIndicesOrThrowResolver,
    groupByItemGameIndices: actionResolvers.GroupByItemGameIndicesResolver,
  },
  LocationGameIndices: {
    aggregateLocationGameIndices: actionResolvers.AggregateLocationGameIndicesResolver,
    findFirstLocationGameIndices: actionResolvers.FindFirstLocationGameIndicesResolver,
    findFirstLocationGameIndicesOrThrow: actionResolvers.FindFirstLocationGameIndicesOrThrowResolver,
    findManyLocationGameIndices: actionResolvers.FindManyLocationGameIndicesResolver,
    findUniqueLocationGameIndices: actionResolvers.FindUniqueLocationGameIndicesResolver,
    findUniqueLocationGameIndicesOrThrow: actionResolvers.FindUniqueLocationGameIndicesOrThrowResolver,
    groupByLocationGameIndices: actionResolvers.GroupByLocationGameIndicesResolver,
  },
  LocationAreaEncounterRates: {
    aggregateLocationAreaEncounterRates: actionResolvers.AggregateLocationAreaEncounterRatesResolver,
    findFirstLocationAreaEncounterRates: actionResolvers.FindFirstLocationAreaEncounterRatesResolver,
    findFirstLocationAreaEncounterRatesOrThrow: actionResolvers.FindFirstLocationAreaEncounterRatesOrThrowResolver,
    findManyLocationAreaEncounterRates: actionResolvers.FindManyLocationAreaEncounterRatesResolver,
    findUniqueLocationAreaEncounterRates: actionResolvers.FindUniqueLocationAreaEncounterRatesResolver,
    findUniqueLocationAreaEncounterRatesOrThrow: actionResolvers.FindUniqueLocationAreaEncounterRatesOrThrowResolver,
    groupByLocationAreaEncounterRates: actionResolvers.GroupByLocationAreaEncounterRatesResolver,
  },
  NatureBattleStylePreferences: {
    aggregateNatureBattleStylePreferences: actionResolvers.AggregateNatureBattleStylePreferencesResolver,
    findFirstNatureBattleStylePreferences: actionResolvers.FindFirstNatureBattleStylePreferencesResolver,
    findFirstNatureBattleStylePreferencesOrThrow: actionResolvers.FindFirstNatureBattleStylePreferencesOrThrowResolver,
    findManyNatureBattleStylePreferences: actionResolvers.FindManyNatureBattleStylePreferencesResolver,
    findUniqueNatureBattleStylePreferences: actionResolvers.FindUniqueNatureBattleStylePreferencesResolver,
    findUniqueNatureBattleStylePreferencesOrThrow: actionResolvers.FindUniqueNatureBattleStylePreferencesOrThrowResolver,
    groupByNatureBattleStylePreferences: actionResolvers.GroupByNatureBattleStylePreferencesResolver,
  }
};
const crudResolversInfo = {
  Pokemon: ["aggregatePokemon", "createManyPokemon", "createManyAndReturnPokemon", "createOnePokemon", "deleteManyPokemon", "deleteOnePokemon", "findFirstPokemon", "findFirstPokemonOrThrow", "findManyPokemon", "findUniquePokemon", "findUniquePokemonOrThrow", "groupByPokemon", "updateManyPokemon", "updateOnePokemon", "upsertOnePokemon"],
  PokemonSpecies: ["aggregatePokemonSpecies", "createManyPokemonSpecies", "createManyAndReturnPokemonSpecies", "createOnePokemonSpecies", "deleteManyPokemonSpecies", "deleteOnePokemonSpecies", "findFirstPokemonSpecies", "findFirstPokemonSpeciesOrThrow", "findManyPokemonSpecies", "findUniquePokemonSpecies", "findUniquePokemonSpeciesOrThrow", "groupByPokemonSpecies", "updateManyPokemonSpecies", "updateOnePokemonSpecies", "upsertOnePokemonSpecies"],
  PokemonForms: ["aggregatePokemonForms", "createManyPokemonForms", "createManyAndReturnPokemonForms", "createOnePokemonForms", "deleteManyPokemonForms", "deleteOnePokemonForms", "findFirstPokemonForms", "findFirstPokemonFormsOrThrow", "findManyPokemonForms", "findUniquePokemonForms", "findUniquePokemonFormsOrThrow", "groupByPokemonForms", "updateManyPokemonForms", "updateOnePokemonForms", "upsertOnePokemonForms"],
  Moves: ["aggregateMoves", "createManyMoves", "createManyAndReturnMoves", "createOneMoves", "deleteManyMoves", "deleteOneMoves", "findFirstMoves", "findFirstMovesOrThrow", "findManyMoves", "findUniqueMoves", "findUniqueMovesOrThrow", "groupByMoves", "updateManyMoves", "updateOneMoves", "upsertOneMoves"],
  MoveEffects: ["aggregateMoveEffects", "createManyMoveEffects", "createManyAndReturnMoveEffects", "createOneMoveEffects", "deleteManyMoveEffects", "deleteOneMoveEffects", "findFirstMoveEffects", "findFirstMoveEffectsOrThrow", "findManyMoveEffects", "findUniqueMoveEffects", "findUniqueMoveEffectsOrThrow", "groupByMoveEffects", "updateManyMoveEffects", "updateOneMoveEffects", "upsertOneMoveEffects"],
  MoveTargets: ["aggregateMoveTargets", "createManyMoveTargets", "createManyAndReturnMoveTargets", "createOneMoveTargets", "deleteManyMoveTargets", "deleteOneMoveTargets", "findFirstMoveTargets", "findFirstMoveTargetsOrThrow", "findManyMoveTargets", "findUniqueMoveTargets", "findUniqueMoveTargetsOrThrow", "groupByMoveTargets", "updateManyMoveTargets", "updateOneMoveTargets", "upsertOneMoveTargets"],
  MoveDamageClasses: ["aggregateMoveDamageClasses", "createManyMoveDamageClasses", "createManyAndReturnMoveDamageClasses", "createOneMoveDamageClasses", "deleteManyMoveDamageClasses", "deleteOneMoveDamageClasses", "findFirstMoveDamageClasses", "findFirstMoveDamageClassesOrThrow", "findManyMoveDamageClasses", "findUniqueMoveDamageClasses", "findUniqueMoveDamageClassesOrThrow", "groupByMoveDamageClasses", "updateManyMoveDamageClasses", "updateOneMoveDamageClasses", "upsertOneMoveDamageClasses"],
  Types: ["aggregateTypes", "createManyTypes", "createManyAndReturnTypes", "createOneTypes", "deleteManyTypes", "deleteOneTypes", "findFirstTypes", "findFirstTypesOrThrow", "findManyTypes", "findUniqueTypes", "findUniqueTypesOrThrow", "groupByTypes", "updateManyTypes", "updateOneTypes", "upsertOneTypes"],
  Abilities: ["aggregateAbilities", "createManyAbilities", "createManyAndReturnAbilities", "createOneAbilities", "deleteManyAbilities", "deleteOneAbilities", "findFirstAbilities", "findFirstAbilitiesOrThrow", "findManyAbilities", "findUniqueAbilities", "findUniqueAbilitiesOrThrow", "groupByAbilities", "updateManyAbilities", "updateOneAbilities", "upsertOneAbilities"],
  Items: ["aggregateItems", "createManyItems", "createManyAndReturnItems", "createOneItems", "deleteManyItems", "deleteOneItems", "findFirstItems", "findFirstItemsOrThrow", "findManyItems", "findUniqueItems", "findUniqueItemsOrThrow", "groupByItems", "updateManyItems", "updateOneItems", "upsertOneItems"],
  ItemCategories: ["aggregateItemCategories", "createManyItemCategories", "createManyAndReturnItemCategories", "createOneItemCategories", "deleteManyItemCategories", "deleteOneItemCategories", "findFirstItemCategories", "findFirstItemCategoriesOrThrow", "findManyItemCategories", "findUniqueItemCategories", "findUniqueItemCategoriesOrThrow", "groupByItemCategories", "updateManyItemCategories", "updateOneItemCategories", "upsertOneItemCategories"],
  ItemPockets: ["aggregateItemPockets", "createManyItemPockets", "createManyAndReturnItemPockets", "createOneItemPockets", "deleteManyItemPockets", "deleteOneItemPockets", "findFirstItemPockets", "findFirstItemPocketsOrThrow", "findManyItemPockets", "findUniqueItemPockets", "findUniqueItemPocketsOrThrow", "groupByItemPockets", "updateManyItemPockets", "updateOneItemPockets", "upsertOneItemPockets"],
  Stats: ["aggregateStats", "createManyStats", "createManyAndReturnStats", "createOneStats", "deleteManyStats", "deleteOneStats", "findFirstStats", "findFirstStatsOrThrow", "findManyStats", "findUniqueStats", "findUniqueStatsOrThrow", "groupByStats", "updateManyStats", "updateOneStats", "upsertOneStats"],
  Generations: ["aggregateGenerations", "createManyGenerations", "createManyAndReturnGenerations", "createOneGenerations", "deleteManyGenerations", "deleteOneGenerations", "findFirstGenerations", "findFirstGenerationsOrThrow", "findManyGenerations", "findUniqueGenerations", "findUniqueGenerationsOrThrow", "groupByGenerations", "updateManyGenerations", "updateOneGenerations", "upsertOneGenerations"],
  VersionGroups: ["aggregateVersionGroups", "createManyVersionGroups", "createManyAndReturnVersionGroups", "createOneVersionGroups", "deleteManyVersionGroups", "deleteOneVersionGroups", "findFirstVersionGroups", "findFirstVersionGroupsOrThrow", "findManyVersionGroups", "findUniqueVersionGroups", "findUniqueVersionGroupsOrThrow", "groupByVersionGroups", "updateManyVersionGroups", "updateOneVersionGroups", "upsertOneVersionGroups"],
  Versions: ["aggregateVersions", "createManyVersions", "createManyAndReturnVersions", "createOneVersions", "deleteManyVersions", "deleteOneVersions", "findFirstVersions", "findFirstVersionsOrThrow", "findManyVersions", "findUniqueVersions", "findUniqueVersionsOrThrow", "groupByVersions", "updateManyVersions", "updateOneVersions", "upsertOneVersions"],
  Regions: ["aggregateRegions", "createManyRegions", "createManyAndReturnRegions", "createOneRegions", "deleteManyRegions", "deleteOneRegions", "findFirstRegions", "findFirstRegionsOrThrow", "findManyRegions", "findUniqueRegions", "findUniqueRegionsOrThrow", "groupByRegions", "updateManyRegions", "updateOneRegions", "upsertOneRegions"],
  Locations: ["aggregateLocations", "createManyLocations", "createManyAndReturnLocations", "createOneLocations", "deleteManyLocations", "deleteOneLocations", "findFirstLocations", "findFirstLocationsOrThrow", "findManyLocations", "findUniqueLocations", "findUniqueLocationsOrThrow", "groupByLocations", "updateManyLocations", "updateOneLocations", "upsertOneLocations"],
  LocationAreas: ["aggregateLocationAreas", "createManyLocationAreas", "createManyAndReturnLocationAreas", "createOneLocationAreas", "deleteManyLocationAreas", "deleteOneLocationAreas", "findFirstLocationAreas", "findFirstLocationAreasOrThrow", "findManyLocationAreas", "findUniqueLocationAreas", "findUniqueLocationAreasOrThrow", "groupByLocationAreas", "updateManyLocationAreas", "updateOneLocationAreas", "upsertOneLocationAreas"],
  Pokedexes: ["aggregatePokedexes", "createManyPokedexes", "createManyAndReturnPokedexes", "createOnePokedexes", "deleteManyPokedexes", "deleteOnePokedexes", "findFirstPokedexes", "findFirstPokedexesOrThrow", "findManyPokedexes", "findUniquePokedexes", "findUniquePokedexesOrThrow", "groupByPokedexes", "updateManyPokedexes", "updateOnePokedexes", "upsertOnePokedexes"],
  EvolutionChains: ["aggregateEvolutionChains", "createManyEvolutionChains", "createManyAndReturnEvolutionChains", "createOneEvolutionChains", "deleteManyEvolutionChains", "deleteOneEvolutionChains", "findFirstEvolutionChains", "findFirstEvolutionChainsOrThrow", "findManyEvolutionChains", "findUniqueEvolutionChains", "findUniqueEvolutionChainsOrThrow", "groupByEvolutionChains", "updateManyEvolutionChains", "updateOneEvolutionChains", "upsertOneEvolutionChains"],
  EvolutionTriggers: ["aggregateEvolutionTriggers", "createManyEvolutionTriggers", "createManyAndReturnEvolutionTriggers", "createOneEvolutionTriggers", "deleteManyEvolutionTriggers", "deleteOneEvolutionTriggers", "findFirstEvolutionTriggers", "findFirstEvolutionTriggersOrThrow", "findManyEvolutionTriggers", "findUniqueEvolutionTriggers", "findUniqueEvolutionTriggersOrThrow", "groupByEvolutionTriggers", "updateManyEvolutionTriggers", "updateOneEvolutionTriggers", "upsertOneEvolutionTriggers"],
  PokemonEvolution: ["aggregatePokemonEvolution", "createManyPokemonEvolution", "createManyAndReturnPokemonEvolution", "createOnePokemonEvolution", "deleteManyPokemonEvolution", "deleteOnePokemonEvolution", "findFirstPokemonEvolution", "findFirstPokemonEvolutionOrThrow", "pokemonEvolutions", "pokemonEvolution", "getPokemonEvolution", "groupByPokemonEvolution", "updateManyPokemonEvolution", "updateOnePokemonEvolution", "upsertOnePokemonEvolution"],
  GrowthRates: ["aggregateGrowthRates", "createManyGrowthRates", "createManyAndReturnGrowthRates", "createOneGrowthRates", "deleteManyGrowthRates", "deleteOneGrowthRates", "findFirstGrowthRates", "findFirstGrowthRatesOrThrow", "findManyGrowthRates", "findUniqueGrowthRates", "findUniqueGrowthRatesOrThrow", "groupByGrowthRates", "updateManyGrowthRates", "updateOneGrowthRates", "upsertOneGrowthRates"],
  Experience: ["aggregateExperience", "createManyExperience", "createManyAndReturnExperience", "createOneExperience", "deleteManyExperience", "deleteOneExperience", "findFirstExperience", "findFirstExperienceOrThrow", "experiences", "experience", "getExperience", "groupByExperience", "updateManyExperience", "updateOneExperience", "upsertOneExperience"],
  Genders: ["aggregateGenders", "createManyGenders", "createManyAndReturnGenders", "createOneGenders", "deleteManyGenders", "deleteOneGenders", "findFirstGenders", "findFirstGendersOrThrow", "findManyGenders", "findUniqueGenders", "findUniqueGendersOrThrow", "groupByGenders", "updateManyGenders", "updateOneGenders", "upsertOneGenders"],
  Languages: ["aggregateLanguages", "createManyLanguages", "createManyAndReturnLanguages", "createOneLanguages", "deleteManyLanguages", "deleteOneLanguages", "findFirstLanguages", "findFirstLanguagesOrThrow", "findManyLanguages", "findUniqueLanguages", "findUniqueLanguagesOrThrow", "groupByLanguages", "updateManyLanguages", "updateOneLanguages", "upsertOneLanguages"],
  EggGroups: ["aggregateEggGroups", "createManyEggGroups", "createManyAndReturnEggGroups", "createOneEggGroups", "deleteManyEggGroups", "deleteOneEggGroups", "findFirstEggGroups", "findFirstEggGroupsOrThrow", "findManyEggGroups", "findUniqueEggGroups", "findUniqueEggGroupsOrThrow", "groupByEggGroups", "updateManyEggGroups", "updateOneEggGroups", "upsertOneEggGroups"],
  Natures: ["aggregateNatures", "createManyNatures", "createManyAndReturnNatures", "createOneNatures", "deleteManyNatures", "deleteOneNatures", "findFirstNatures", "findFirstNaturesOrThrow", "findManyNatures", "findUniqueNatures", "findUniqueNaturesOrThrow", "groupByNatures", "updateManyNatures", "updateOneNatures", "upsertOneNatures"],
  ContestTypes: ["aggregateContestTypes", "createManyContestTypes", "createManyAndReturnContestTypes", "createOneContestTypes", "deleteManyContestTypes", "deleteOneContestTypes", "findFirstContestTypes", "findFirstContestTypesOrThrow", "findManyContestTypes", "findUniqueContestTypes", "findUniqueContestTypesOrThrow", "groupByContestTypes", "updateManyContestTypes", "updateOneContestTypes", "upsertOneContestTypes"],
  ContestEffects: ["aggregateContestEffects", "createManyContestEffects", "createManyAndReturnContestEffects", "createOneContestEffects", "deleteManyContestEffects", "deleteOneContestEffects", "findFirstContestEffects", "findFirstContestEffectsOrThrow", "findManyContestEffects", "findUniqueContestEffects", "findUniqueContestEffectsOrThrow", "groupByContestEffects", "updateManyContestEffects", "updateOneContestEffects", "upsertOneContestEffects"],
  SuperContestEffects: ["aggregateSuperContestEffects", "createManySuperContestEffects", "createManyAndReturnSuperContestEffects", "createOneSuperContestEffects", "deleteManySuperContestEffects", "deleteOneSuperContestEffects", "findFirstSuperContestEffects", "findFirstSuperContestEffectsOrThrow", "findManySuperContestEffects", "findUniqueSuperContestEffects", "findUniqueSuperContestEffectsOrThrow", "groupBySuperContestEffects", "updateManySuperContestEffects", "updateOneSuperContestEffects", "upsertOneSuperContestEffects"],
  Machines: ["aggregateMachines", "createManyMachines", "createManyAndReturnMachines", "createOneMachines", "deleteManyMachines", "deleteOneMachines", "findFirstMachines", "findFirstMachinesOrThrow", "findManyMachines", "findUniqueMachines", "findUniqueMachinesOrThrow", "groupByMachines", "updateManyMachines", "updateOneMachines", "upsertOneMachines"],
  EncounterMethods: ["aggregateEncounterMethods", "createManyEncounterMethods", "createManyAndReturnEncounterMethods", "createOneEncounterMethods", "deleteManyEncounterMethods", "deleteOneEncounterMethods", "findFirstEncounterMethods", "findFirstEncounterMethodsOrThrow", "findManyEncounterMethods", "findUniqueEncounterMethods", "findUniqueEncounterMethodsOrThrow", "groupByEncounterMethods", "updateManyEncounterMethods", "updateOneEncounterMethods", "upsertOneEncounterMethods"],
  EncounterSlots: ["aggregateEncounterSlots", "createManyEncounterSlots", "createManyAndReturnEncounterSlots", "createOneEncounterSlots", "deleteManyEncounterSlots", "deleteOneEncounterSlots", "findFirstEncounterSlots", "findFirstEncounterSlotsOrThrow", "findManyEncounterSlots", "findUniqueEncounterSlots", "findUniqueEncounterSlotsOrThrow", "groupByEncounterSlots", "updateManyEncounterSlots", "updateOneEncounterSlots", "upsertOneEncounterSlots"],
  Encounters: ["aggregateEncounters", "createManyEncounters", "createManyAndReturnEncounters", "createOneEncounters", "deleteManyEncounters", "deleteOneEncounters", "findFirstEncounters", "findFirstEncountersOrThrow", "findManyEncounters", "findUniqueEncounters", "findUniqueEncountersOrThrow", "groupByEncounters", "updateManyEncounters", "updateOneEncounters", "upsertOneEncounters"],
  EncounterConditions: ["aggregateEncounterConditions", "createManyEncounterConditions", "createManyAndReturnEncounterConditions", "createOneEncounterConditions", "deleteManyEncounterConditions", "deleteOneEncounterConditions", "findFirstEncounterConditions", "findFirstEncounterConditionsOrThrow", "findManyEncounterConditions", "findUniqueEncounterConditions", "findUniqueEncounterConditionsOrThrow", "groupByEncounterConditions", "updateManyEncounterConditions", "updateOneEncounterConditions", "upsertOneEncounterConditions"],
  EncounterConditionValues: ["aggregateEncounterConditionValues", "createManyEncounterConditionValues", "createManyAndReturnEncounterConditionValues", "createOneEncounterConditionValues", "deleteManyEncounterConditionValues", "deleteOneEncounterConditionValues", "findFirstEncounterConditionValues", "findFirstEncounterConditionValuesOrThrow", "findManyEncounterConditionValues", "findUniqueEncounterConditionValues", "findUniqueEncounterConditionValuesOrThrow", "groupByEncounterConditionValues", "updateManyEncounterConditionValues", "updateOneEncounterConditionValues", "upsertOneEncounterConditionValues"],
  EncounterConditionValueMap: ["aggregateEncounterConditionValueMap", "createManyEncounterConditionValueMap", "createManyAndReturnEncounterConditionValueMap", "createOneEncounterConditionValueMap", "deleteManyEncounterConditionValueMap", "deleteOneEncounterConditionValueMap", "findFirstEncounterConditionValueMap", "findFirstEncounterConditionValueMapOrThrow", "encounterConditionValueMaps", "encounterConditionValueMap", "getEncounterConditionValueMap", "groupByEncounterConditionValueMap", "updateManyEncounterConditionValueMap", "updateOneEncounterConditionValueMap", "upsertOneEncounterConditionValueMap"],
  MoveMetaCategories: ["aggregateMoveMetaCategories", "createManyMoveMetaCategories", "createManyAndReturnMoveMetaCategories", "createOneMoveMetaCategories", "deleteManyMoveMetaCategories", "deleteOneMoveMetaCategories", "findFirstMoveMetaCategories", "findFirstMoveMetaCategoriesOrThrow", "findManyMoveMetaCategories", "findUniqueMoveMetaCategories", "findUniqueMoveMetaCategoriesOrThrow", "groupByMoveMetaCategories", "updateManyMoveMetaCategories", "updateOneMoveMetaCategories", "upsertOneMoveMetaCategories"],
  MoveMetaAilments: ["aggregateMoveMetaAilments", "createManyMoveMetaAilments", "createManyAndReturnMoveMetaAilments", "createOneMoveMetaAilments", "deleteManyMoveMetaAilments", "deleteOneMoveMetaAilments", "findFirstMoveMetaAilments", "findFirstMoveMetaAilmentsOrThrow", "findManyMoveMetaAilments", "findUniqueMoveMetaAilments", "findUniqueMoveMetaAilmentsOrThrow", "groupByMoveMetaAilments", "updateManyMoveMetaAilments", "updateOneMoveMetaAilments", "upsertOneMoveMetaAilments"],
  MoveMeta: ["aggregateMoveMeta", "createManyMoveMeta", "createManyAndReturnMoveMeta", "createOneMoveMeta", "deleteManyMoveMeta", "deleteOneMoveMeta", "findFirstMoveMeta", "findFirstMoveMetaOrThrow", "moveMetas", "moveMeta", "getMoveMeta", "groupByMoveMeta", "updateManyMoveMeta", "updateOneMoveMeta", "upsertOneMoveMeta"],
  MoveMetaStatChanges: ["aggregateMoveMetaStatChanges", "createManyMoveMetaStatChanges", "createManyAndReturnMoveMetaStatChanges", "createOneMoveMetaStatChanges", "deleteManyMoveMetaStatChanges", "deleteOneMoveMetaStatChanges", "findFirstMoveMetaStatChanges", "findFirstMoveMetaStatChangesOrThrow", "findManyMoveMetaStatChanges", "findUniqueMoveMetaStatChanges", "findUniqueMoveMetaStatChangesOrThrow", "groupByMoveMetaStatChanges", "updateManyMoveMetaStatChanges", "updateOneMoveMetaStatChanges", "upsertOneMoveMetaStatChanges"],
  MoveFlags: ["aggregateMoveFlags", "createManyMoveFlags", "createManyAndReturnMoveFlags", "createOneMoveFlags", "deleteManyMoveFlags", "deleteOneMoveFlags", "findFirstMoveFlags", "findFirstMoveFlagsOrThrow", "findManyMoveFlags", "findUniqueMoveFlags", "findUniqueMoveFlagsOrThrow", "groupByMoveFlags", "updateManyMoveFlags", "updateOneMoveFlags", "upsertOneMoveFlags"],
  MoveFlagMap: ["aggregateMoveFlagMap", "createManyMoveFlagMap", "createManyAndReturnMoveFlagMap", "createOneMoveFlagMap", "deleteManyMoveFlagMap", "deleteOneMoveFlagMap", "findFirstMoveFlagMap", "findFirstMoveFlagMapOrThrow", "moveFlagMaps", "moveFlagMap", "getMoveFlagMap", "groupByMoveFlagMap", "updateManyMoveFlagMap", "updateOneMoveFlagMap", "upsertOneMoveFlagMap"],
  MoveBattleStyles: ["aggregateMoveBattleStyles", "createManyMoveBattleStyles", "createManyAndReturnMoveBattleStyles", "createOneMoveBattleStyles", "deleteManyMoveBattleStyles", "deleteOneMoveBattleStyles", "findFirstMoveBattleStyles", "findFirstMoveBattleStylesOrThrow", "findManyMoveBattleStyles", "findUniqueMoveBattleStyles", "findUniqueMoveBattleStylesOrThrow", "groupByMoveBattleStyles", "updateManyMoveBattleStyles", "updateOneMoveBattleStyles", "upsertOneMoveBattleStyles"],
  ItemFlags: ["aggregateItemFlags", "createManyItemFlags", "createManyAndReturnItemFlags", "createOneItemFlags", "deleteManyItemFlags", "deleteOneItemFlags", "findFirstItemFlags", "findFirstItemFlagsOrThrow", "findManyItemFlags", "findUniqueItemFlags", "findUniqueItemFlagsOrThrow", "groupByItemFlags", "updateManyItemFlags", "updateOneItemFlags", "upsertOneItemFlags"],
  ItemFlagMap: ["aggregateItemFlagMap", "createManyItemFlagMap", "createManyAndReturnItemFlagMap", "createOneItemFlagMap", "deleteManyItemFlagMap", "deleteOneItemFlagMap", "findFirstItemFlagMap", "findFirstItemFlagMapOrThrow", "itemFlagMaps", "itemFlagMap", "getItemFlagMap", "groupByItemFlagMap", "updateManyItemFlagMap", "updateOneItemFlagMap", "upsertOneItemFlagMap"],
  ItemFlingEffects: ["aggregateItemFlingEffects", "createManyItemFlingEffects", "createManyAndReturnItemFlingEffects", "createOneItemFlingEffects", "deleteManyItemFlingEffects", "deleteOneItemFlingEffects", "findFirstItemFlingEffects", "findFirstItemFlingEffectsOrThrow", "findManyItemFlingEffects", "findUniqueItemFlingEffects", "findUniqueItemFlingEffectsOrThrow", "groupByItemFlingEffects", "updateManyItemFlingEffects", "updateOneItemFlingEffects", "upsertOneItemFlingEffects"],
  Berries: ["aggregateBerries", "createManyBerries", "createManyAndReturnBerries", "createOneBerries", "deleteManyBerries", "deleteOneBerries", "findFirstBerries", "findFirstBerriesOrThrow", "findManyBerries", "findUniqueBerries", "findUniqueBerriesOrThrow", "groupByBerries", "updateManyBerries", "updateOneBerries", "upsertOneBerries"],
  BerryFirmness: ["aggregateBerryFirmness", "createManyBerryFirmness", "createManyAndReturnBerryFirmness", "createOneBerryFirmness", "deleteManyBerryFirmness", "deleteOneBerryFirmness", "findFirstBerryFirmness", "findFirstBerryFirmnessOrThrow", "berryFirmnesses", "berryFirmness", "getBerryFirmness", "groupByBerryFirmness", "updateManyBerryFirmness", "updateOneBerryFirmness", "upsertOneBerryFirmness"],
  BerryFlavors: ["aggregateBerryFlavors", "createManyBerryFlavors", "createManyAndReturnBerryFlavors", "createOneBerryFlavors", "deleteManyBerryFlavors", "deleteOneBerryFlavors", "findFirstBerryFlavors", "findFirstBerryFlavorsOrThrow", "findManyBerryFlavors", "findUniqueBerryFlavors", "findUniqueBerryFlavorsOrThrow", "groupByBerryFlavors", "updateManyBerryFlavors", "updateOneBerryFlavors", "upsertOneBerryFlavors"],
  Characteristics: ["aggregateCharacteristics", "createManyCharacteristics", "createManyAndReturnCharacteristics", "createOneCharacteristics", "deleteManyCharacteristics", "deleteOneCharacteristics", "findFirstCharacteristics", "findFirstCharacteristicsOrThrow", "findManyCharacteristics", "findUniqueCharacteristics", "findUniqueCharacteristicsOrThrow", "groupByCharacteristics", "updateManyCharacteristics", "updateOneCharacteristics", "upsertOneCharacteristics"],
  ContestCombos: ["aggregateContestCombos", "createManyContestCombos", "createManyAndReturnContestCombos", "createOneContestCombos", "deleteManyContestCombos", "deleteOneContestCombos", "findFirstContestCombos", "findFirstContestCombosOrThrow", "findManyContestCombos", "findUniqueContestCombos", "findUniqueContestCombosOrThrow", "groupByContestCombos", "updateManyContestCombos", "updateOneContestCombos", "upsertOneContestCombos"],
  SuperContestCombos: ["aggregateSuperContestCombos", "createManySuperContestCombos", "createManyAndReturnSuperContestCombos", "createOneSuperContestCombos", "deleteManySuperContestCombos", "deleteOneSuperContestCombos", "findFirstSuperContestCombos", "findFirstSuperContestCombosOrThrow", "findManySuperContestCombos", "findUniqueSuperContestCombos", "findUniqueSuperContestCombosOrThrow", "groupBySuperContestCombos", "updateManySuperContestCombos", "updateOneSuperContestCombos", "upsertOneSuperContestCombos"],
  PokemonMoveMethods: ["aggregatePokemonMoveMethods", "createManyPokemonMoveMethods", "createManyAndReturnPokemonMoveMethods", "createOnePokemonMoveMethods", "deleteManyPokemonMoveMethods", "deleteOnePokemonMoveMethods", "findFirstPokemonMoveMethods", "findFirstPokemonMoveMethodsOrThrow", "findManyPokemonMoveMethods", "findUniquePokemonMoveMethods", "findUniquePokemonMoveMethodsOrThrow", "groupByPokemonMoveMethods", "updateManyPokemonMoveMethods", "updateOnePokemonMoveMethods", "upsertOnePokemonMoveMethods"],
  VersionGroupPokemonMoveMethods: ["aggregateVersionGroupPokemonMoveMethods", "createManyVersionGroupPokemonMoveMethods", "createManyAndReturnVersionGroupPokemonMoveMethods", "createOneVersionGroupPokemonMoveMethods", "deleteManyVersionGroupPokemonMoveMethods", "deleteOneVersionGroupPokemonMoveMethods", "findFirstVersionGroupPokemonMoveMethods", "findFirstVersionGroupPokemonMoveMethodsOrThrow", "findManyVersionGroupPokemonMoveMethods", "findUniqueVersionGroupPokemonMoveMethods", "findUniqueVersionGroupPokemonMoveMethodsOrThrow", "groupByVersionGroupPokemonMoveMethods", "updateManyVersionGroupPokemonMoveMethods", "updateOneVersionGroupPokemonMoveMethods", "upsertOneVersionGroupPokemonMoveMethods"],
  PokemonShapes: ["aggregatePokemonShapes", "createManyPokemonShapes", "createManyAndReturnPokemonShapes", "createOnePokemonShapes", "deleteManyPokemonShapes", "deleteOnePokemonShapes", "findFirstPokemonShapes", "findFirstPokemonShapesOrThrow", "findManyPokemonShapes", "findUniquePokemonShapes", "findUniquePokemonShapesOrThrow", "groupByPokemonShapes", "updateManyPokemonShapes", "updateOnePokemonShapes", "upsertOnePokemonShapes"],
  PokemonColors: ["aggregatePokemonColors", "createManyPokemonColors", "createManyAndReturnPokemonColors", "createOnePokemonColors", "deleteManyPokemonColors", "deleteOnePokemonColors", "findFirstPokemonColors", "findFirstPokemonColorsOrThrow", "findManyPokemonColors", "findUniquePokemonColors", "findUniquePokemonColorsOrThrow", "groupByPokemonColors", "updateManyPokemonColors", "updateOnePokemonColors", "upsertOnePokemonColors"],
  PokemonHabitats: ["aggregatePokemonHabitats", "createManyPokemonHabitats", "createManyAndReturnPokemonHabitats", "createOnePokemonHabitats", "deleteManyPokemonHabitats", "deleteOnePokemonHabitats", "findFirstPokemonHabitats", "findFirstPokemonHabitatsOrThrow", "findManyPokemonHabitats", "findUniquePokemonHabitats", "findUniquePokemonHabitatsOrThrow", "groupByPokemonHabitats", "updateManyPokemonHabitats", "updateOnePokemonHabitats", "upsertOnePokemonHabitats"],
  TypeEfficacy: ["aggregateTypeEfficacy", "createManyTypeEfficacy", "createManyAndReturnTypeEfficacy", "createOneTypeEfficacy", "deleteManyTypeEfficacy", "deleteOneTypeEfficacy", "findFirstTypeEfficacy", "findFirstTypeEfficacyOrThrow", "typeEfficacies", "typeEfficacy", "getTypeEfficacy", "groupByTypeEfficacy", "updateManyTypeEfficacy", "updateOneTypeEfficacy", "upsertOneTypeEfficacy"],
  VersionGroupRegions: ["aggregateVersionGroupRegions", "createManyVersionGroupRegions", "createManyAndReturnVersionGroupRegions", "createOneVersionGroupRegions", "deleteManyVersionGroupRegions", "deleteOneVersionGroupRegions", "findFirstVersionGroupRegions", "findFirstVersionGroupRegionsOrThrow", "findManyVersionGroupRegions", "findUniqueVersionGroupRegions", "findUniqueVersionGroupRegionsOrThrow", "groupByVersionGroupRegions", "updateManyVersionGroupRegions", "updateOneVersionGroupRegions", "upsertOneVersionGroupRegions"],
  PokedexVersionGroups: ["aggregatePokedexVersionGroups", "createManyPokedexVersionGroups", "createManyAndReturnPokedexVersionGroups", "createOnePokedexVersionGroups", "deleteManyPokedexVersionGroups", "deleteOnePokedexVersionGroups", "findFirstPokedexVersionGroups", "findFirstPokedexVersionGroupsOrThrow", "findManyPokedexVersionGroups", "findUniquePokedexVersionGroups", "findUniquePokedexVersionGroupsOrThrow", "groupByPokedexVersionGroups", "updateManyPokedexVersionGroups", "updateOnePokedexVersionGroups", "upsertOnePokedexVersionGroups"],
  PokemonAbilities: ["aggregatePokemonAbilities", "createManyPokemonAbilities", "createManyAndReturnPokemonAbilities", "createOnePokemonAbilities", "deleteManyPokemonAbilities", "deleteOnePokemonAbilities", "findFirstPokemonAbilities", "findFirstPokemonAbilitiesOrThrow", "findManyPokemonAbilities", "findUniquePokemonAbilities", "findUniquePokemonAbilitiesOrThrow", "groupByPokemonAbilities", "updateManyPokemonAbilities", "updateOnePokemonAbilities", "upsertOnePokemonAbilities"],
  PokemonMoves: ["aggregatePokemonMoves", "createManyPokemonMoves", "createManyAndReturnPokemonMoves", "createOnePokemonMoves", "deleteManyPokemonMoves", "deleteOnePokemonMoves", "findFirstPokemonMoves", "findFirstPokemonMovesOrThrow", "findManyPokemonMoves", "findUniquePokemonMoves", "findUniquePokemonMovesOrThrow", "groupByPokemonMoves", "updateManyPokemonMoves", "updateOnePokemonMoves", "upsertOnePokemonMoves"],
  PokemonStats: ["aggregatePokemonStats", "createManyPokemonStats", "createManyAndReturnPokemonStats", "createOnePokemonStats", "deleteManyPokemonStats", "deleteOnePokemonStats", "findFirstPokemonStats", "findFirstPokemonStatsOrThrow", "findManyPokemonStats", "findUniquePokemonStats", "findUniquePokemonStatsOrThrow", "groupByPokemonStats", "updateManyPokemonStats", "updateOnePokemonStats", "upsertOnePokemonStats"],
  PokemonTypes: ["aggregatePokemonTypes", "createManyPokemonTypes", "createManyAndReturnPokemonTypes", "createOnePokemonTypes", "deleteManyPokemonTypes", "deleteOnePokemonTypes", "findFirstPokemonTypes", "findFirstPokemonTypesOrThrow", "findManyPokemonTypes", "findUniquePokemonTypes", "findUniquePokemonTypesOrThrow", "groupByPokemonTypes", "updateManyPokemonTypes", "updateOnePokemonTypes", "upsertOnePokemonTypes"],
  PokemonEggGroups: ["aggregatePokemonEggGroups", "createManyPokemonEggGroups", "createManyAndReturnPokemonEggGroups", "createOnePokemonEggGroups", "deleteManyPokemonEggGroups", "deleteOnePokemonEggGroups", "findFirstPokemonEggGroups", "findFirstPokemonEggGroupsOrThrow", "findManyPokemonEggGroups", "findUniquePokemonEggGroups", "findUniquePokemonEggGroupsOrThrow", "groupByPokemonEggGroups", "updateManyPokemonEggGroups", "updateOnePokemonEggGroups", "upsertOnePokemonEggGroups"],
  PokemonItems: ["aggregatePokemonItems", "createManyPokemonItems", "createManyAndReturnPokemonItems", "createOnePokemonItems", "deleteManyPokemonItems", "deleteOnePokemonItems", "findFirstPokemonItems", "findFirstPokemonItemsOrThrow", "findManyPokemonItems", "findUniquePokemonItems", "findUniquePokemonItemsOrThrow", "groupByPokemonItems", "updateManyPokemonItems", "updateOnePokemonItems", "upsertOnePokemonItems"],
  PokemonGameIndices: ["aggregatePokemonGameIndices", "createManyPokemonGameIndices", "createManyAndReturnPokemonGameIndices", "createOnePokemonGameIndices", "deleteManyPokemonGameIndices", "deleteOnePokemonGameIndices", "findFirstPokemonGameIndices", "findFirstPokemonGameIndicesOrThrow", "findManyPokemonGameIndices", "findUniquePokemonGameIndices", "findUniquePokemonGameIndicesOrThrow", "groupByPokemonGameIndices", "updateManyPokemonGameIndices", "updateOnePokemonGameIndices", "upsertOnePokemonGameIndices"],
  PokemonDexNumbers: ["aggregatePokemonDexNumbers", "createManyPokemonDexNumbers", "createManyAndReturnPokemonDexNumbers", "createOnePokemonDexNumbers", "deleteManyPokemonDexNumbers", "deleteOnePokemonDexNumbers", "findFirstPokemonDexNumbers", "findFirstPokemonDexNumbersOrThrow", "findManyPokemonDexNumbers", "findUniquePokemonDexNumbers", "findUniquePokemonDexNumbersOrThrow", "groupByPokemonDexNumbers", "updateManyPokemonDexNumbers", "updateOnePokemonDexNumbers", "upsertOnePokemonDexNumbers"],
  PokemonFormGenerations: ["aggregatePokemonFormGenerations", "createManyPokemonFormGenerations", "createManyAndReturnPokemonFormGenerations", "createOnePokemonFormGenerations", "deleteManyPokemonFormGenerations", "deleteOnePokemonFormGenerations", "findFirstPokemonFormGenerations", "findFirstPokemonFormGenerationsOrThrow", "findManyPokemonFormGenerations", "findUniquePokemonFormGenerations", "findUniquePokemonFormGenerationsOrThrow", "groupByPokemonFormGenerations", "updateManyPokemonFormGenerations", "updateOnePokemonFormGenerations", "upsertOnePokemonFormGenerations"],
  PokemonFormTypes: ["aggregatePokemonFormTypes", "createManyPokemonFormTypes", "createManyAndReturnPokemonFormTypes", "createOnePokemonFormTypes", "deleteManyPokemonFormTypes", "deleteOnePokemonFormTypes", "findFirstPokemonFormTypes", "findFirstPokemonFormTypesOrThrow", "findManyPokemonFormTypes", "findUniquePokemonFormTypes", "findUniquePokemonFormTypesOrThrow", "groupByPokemonFormTypes", "updateManyPokemonFormTypes", "updateOnePokemonFormTypes", "upsertOnePokemonFormTypes"],
  TypeGameIndices: ["aggregateTypeGameIndices", "createManyTypeGameIndices", "createManyAndReturnTypeGameIndices", "createOneTypeGameIndices", "deleteManyTypeGameIndices", "deleteOneTypeGameIndices", "findFirstTypeGameIndices", "findFirstTypeGameIndicesOrThrow", "findManyTypeGameIndices", "findUniqueTypeGameIndices", "findUniqueTypeGameIndicesOrThrow", "groupByTypeGameIndices", "updateManyTypeGameIndices", "updateOneTypeGameIndices", "upsertOneTypeGameIndices"],
  ItemGameIndices: ["aggregateItemGameIndices", "createManyItemGameIndices", "createManyAndReturnItemGameIndices", "createOneItemGameIndices", "deleteManyItemGameIndices", "deleteOneItemGameIndices", "findFirstItemGameIndices", "findFirstItemGameIndicesOrThrow", "findManyItemGameIndices", "findUniqueItemGameIndices", "findUniqueItemGameIndicesOrThrow", "groupByItemGameIndices", "updateManyItemGameIndices", "updateOneItemGameIndices", "upsertOneItemGameIndices"],
  LocationGameIndices: ["aggregateLocationGameIndices", "createManyLocationGameIndices", "createManyAndReturnLocationGameIndices", "createOneLocationGameIndices", "deleteManyLocationGameIndices", "deleteOneLocationGameIndices", "findFirstLocationGameIndices", "findFirstLocationGameIndicesOrThrow", "findManyLocationGameIndices", "findUniqueLocationGameIndices", "findUniqueLocationGameIndicesOrThrow", "groupByLocationGameIndices", "updateManyLocationGameIndices", "updateOneLocationGameIndices", "upsertOneLocationGameIndices"],
  LocationAreaEncounterRates: ["aggregateLocationAreaEncounterRates", "createManyLocationAreaEncounterRates", "createManyAndReturnLocationAreaEncounterRates", "createOneLocationAreaEncounterRates", "deleteManyLocationAreaEncounterRates", "deleteOneLocationAreaEncounterRates", "findFirstLocationAreaEncounterRates", "findFirstLocationAreaEncounterRatesOrThrow", "findManyLocationAreaEncounterRates", "findUniqueLocationAreaEncounterRates", "findUniqueLocationAreaEncounterRatesOrThrow", "groupByLocationAreaEncounterRates", "updateManyLocationAreaEncounterRates", "updateOneLocationAreaEncounterRates", "upsertOneLocationAreaEncounterRates"],
  NatureBattleStylePreferences: ["aggregateNatureBattleStylePreferences", "createManyNatureBattleStylePreferences", "createManyAndReturnNatureBattleStylePreferences", "createOneNatureBattleStylePreferences", "deleteManyNatureBattleStylePreferences", "deleteOneNatureBattleStylePreferences", "findFirstNatureBattleStylePreferences", "findFirstNatureBattleStylePreferencesOrThrow", "findManyNatureBattleStylePreferences", "findUniqueNatureBattleStylePreferences", "findUniqueNatureBattleStylePreferencesOrThrow", "groupByNatureBattleStylePreferences", "updateManyNatureBattleStylePreferences", "updateOneNatureBattleStylePreferences", "upsertOneNatureBattleStylePreferences"]
};
const argsInfo = {
  AggregatePokemonArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonArgs: ["where"],
  FindUniquePokemonOrThrowArgs: ["where"],
  GroupByPokemonArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonSpeciesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonSpeciesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonSpeciesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonSpeciesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonSpeciesArgs: ["where"],
  FindUniquePokemonSpeciesOrThrowArgs: ["where"],
  GroupByPokemonSpeciesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonFormsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonFormsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonFormsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonFormsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonFormsArgs: ["where"],
  FindUniquePokemonFormsOrThrowArgs: ["where"],
  GroupByPokemonFormsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMovesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMovesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMovesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMovesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMovesArgs: ["where"],
  FindUniqueMovesOrThrowArgs: ["where"],
  GroupByMovesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveEffectsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveEffectsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveEffectsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveEffectsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveEffectsArgs: ["where"],
  FindUniqueMoveEffectsOrThrowArgs: ["where"],
  GroupByMoveEffectsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveTargetsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveTargetsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveTargetsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveTargetsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveTargetsArgs: ["where"],
  FindUniqueMoveTargetsOrThrowArgs: ["where"],
  GroupByMoveTargetsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveDamageClassesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveDamageClassesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveDamageClassesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveDamageClassesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveDamageClassesArgs: ["where"],
  FindUniqueMoveDamageClassesOrThrowArgs: ["where"],
  GroupByMoveDamageClassesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateTypesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstTypesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstTypesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyTypesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueTypesArgs: ["where"],
  FindUniqueTypesOrThrowArgs: ["where"],
  GroupByTypesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateAbilitiesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstAbilitiesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstAbilitiesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyAbilitiesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueAbilitiesArgs: ["where"],
  FindUniqueAbilitiesOrThrowArgs: ["where"],
  GroupByAbilitiesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemsArgs: ["where"],
  FindUniqueItemsOrThrowArgs: ["where"],
  GroupByItemsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemCategoriesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemCategoriesArgs: ["where"],
  FindUniqueItemCategoriesOrThrowArgs: ["where"],
  GroupByItemCategoriesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemPocketsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemPocketsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemPocketsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemPocketsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemPocketsArgs: ["where"],
  FindUniqueItemPocketsOrThrowArgs: ["where"],
  GroupByItemPocketsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateStatsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstStatsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstStatsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyStatsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueStatsArgs: ["where"],
  FindUniqueStatsOrThrowArgs: ["where"],
  GroupByStatsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateGenerationsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstGenerationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstGenerationsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyGenerationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueGenerationsArgs: ["where"],
  FindUniqueGenerationsOrThrowArgs: ["where"],
  GroupByGenerationsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateVersionGroupsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstVersionGroupsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstVersionGroupsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyVersionGroupsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueVersionGroupsArgs: ["where"],
  FindUniqueVersionGroupsOrThrowArgs: ["where"],
  GroupByVersionGroupsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateVersionsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstVersionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstVersionsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyVersionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueVersionsArgs: ["where"],
  FindUniqueVersionsOrThrowArgs: ["where"],
  GroupByVersionsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateRegionsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstRegionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstRegionsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyRegionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueRegionsArgs: ["where"],
  FindUniqueRegionsOrThrowArgs: ["where"],
  GroupByRegionsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLocationsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLocationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLocationsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLocationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLocationsArgs: ["where"],
  FindUniqueLocationsOrThrowArgs: ["where"],
  GroupByLocationsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLocationAreasArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLocationAreasArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLocationAreasOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLocationAreasArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLocationAreasArgs: ["where"],
  FindUniqueLocationAreasOrThrowArgs: ["where"],
  GroupByLocationAreasArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokedexesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokedexesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokedexesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokedexesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokedexesArgs: ["where"],
  FindUniquePokedexesOrThrowArgs: ["where"],
  GroupByPokedexesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEvolutionChainsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEvolutionChainsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEvolutionChainsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEvolutionChainsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEvolutionChainsArgs: ["where"],
  FindUniqueEvolutionChainsOrThrowArgs: ["where"],
  GroupByEvolutionChainsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEvolutionTriggersArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEvolutionTriggersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEvolutionTriggersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEvolutionTriggersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEvolutionTriggersArgs: ["where"],
  FindUniqueEvolutionTriggersOrThrowArgs: ["where"],
  GroupByEvolutionTriggersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonEvolutionArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonEvolutionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonEvolutionOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonEvolutionArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonEvolutionArgs: ["where"],
  FindUniquePokemonEvolutionOrThrowArgs: ["where"],
  GroupByPokemonEvolutionArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateGrowthRatesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstGrowthRatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstGrowthRatesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyGrowthRatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueGrowthRatesArgs: ["where"],
  FindUniqueGrowthRatesOrThrowArgs: ["where"],
  GroupByGrowthRatesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateExperienceArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstExperienceArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstExperienceOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyExperienceArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueExperienceArgs: ["where"],
  FindUniqueExperienceOrThrowArgs: ["where"],
  GroupByExperienceArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateGendersArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstGendersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstGendersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyGendersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueGendersArgs: ["where"],
  FindUniqueGendersOrThrowArgs: ["where"],
  GroupByGendersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLanguagesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLanguagesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLanguagesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLanguagesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLanguagesArgs: ["where"],
  FindUniqueLanguagesOrThrowArgs: ["where"],
  GroupByLanguagesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEggGroupsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEggGroupsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEggGroupsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEggGroupsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEggGroupsArgs: ["where"],
  FindUniqueEggGroupsOrThrowArgs: ["where"],
  GroupByEggGroupsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateNaturesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstNaturesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstNaturesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyNaturesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueNaturesArgs: ["where"],
  FindUniqueNaturesOrThrowArgs: ["where"],
  GroupByNaturesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateContestTypesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstContestTypesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstContestTypesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyContestTypesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueContestTypesArgs: ["where"],
  FindUniqueContestTypesOrThrowArgs: ["where"],
  GroupByContestTypesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateContestEffectsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstContestEffectsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstContestEffectsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyContestEffectsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueContestEffectsArgs: ["where"],
  FindUniqueContestEffectsOrThrowArgs: ["where"],
  GroupByContestEffectsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateSuperContestEffectsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstSuperContestEffectsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstSuperContestEffectsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySuperContestEffectsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueSuperContestEffectsArgs: ["where"],
  FindUniqueSuperContestEffectsOrThrowArgs: ["where"],
  GroupBySuperContestEffectsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMachinesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMachinesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMachinesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMachinesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMachinesArgs: ["where"],
  FindUniqueMachinesOrThrowArgs: ["where"],
  GroupByMachinesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterMethodsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterMethodsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterMethodsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterMethodsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterMethodsArgs: ["where"],
  FindUniqueEncounterMethodsOrThrowArgs: ["where"],
  GroupByEncounterMethodsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterSlotsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterSlotsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterSlotsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterSlotsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterSlotsArgs: ["where"],
  FindUniqueEncounterSlotsOrThrowArgs: ["where"],
  GroupByEncounterSlotsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncountersArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncountersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncountersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncountersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncountersArgs: ["where"],
  FindUniqueEncountersOrThrowArgs: ["where"],
  GroupByEncountersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterConditionsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterConditionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterConditionsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterConditionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterConditionsArgs: ["where"],
  FindUniqueEncounterConditionsOrThrowArgs: ["where"],
  GroupByEncounterConditionsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterConditionValuesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterConditionValuesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterConditionValuesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterConditionValuesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterConditionValuesArgs: ["where"],
  FindUniqueEncounterConditionValuesOrThrowArgs: ["where"],
  GroupByEncounterConditionValuesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateEncounterConditionValueMapArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstEncounterConditionValueMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstEncounterConditionValueMapOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyEncounterConditionValueMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueEncounterConditionValueMapArgs: ["where"],
  FindUniqueEncounterConditionValueMapOrThrowArgs: ["where"],
  GroupByEncounterConditionValueMapArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveMetaCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveMetaCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveMetaCategoriesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveMetaCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveMetaCategoriesArgs: ["where"],
  FindUniqueMoveMetaCategoriesOrThrowArgs: ["where"],
  GroupByMoveMetaCategoriesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveMetaAilmentsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveMetaAilmentsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveMetaAilmentsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveMetaAilmentsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveMetaAilmentsArgs: ["where"],
  FindUniqueMoveMetaAilmentsOrThrowArgs: ["where"],
  GroupByMoveMetaAilmentsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveMetaArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveMetaArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveMetaOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveMetaArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveMetaArgs: ["where"],
  FindUniqueMoveMetaOrThrowArgs: ["where"],
  GroupByMoveMetaArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveMetaStatChangesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveMetaStatChangesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveMetaStatChangesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveMetaStatChangesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveMetaStatChangesArgs: ["where"],
  FindUniqueMoveMetaStatChangesOrThrowArgs: ["where"],
  GroupByMoveMetaStatChangesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveFlagsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveFlagsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveFlagsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveFlagsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveFlagsArgs: ["where"],
  FindUniqueMoveFlagsOrThrowArgs: ["where"],
  GroupByMoveFlagsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveFlagMapOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveFlagMapArgs: ["where"],
  FindUniqueMoveFlagMapOrThrowArgs: ["where"],
  GroupByMoveFlagMapArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateMoveBattleStylesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstMoveBattleStylesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMoveBattleStylesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMoveBattleStylesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMoveBattleStylesArgs: ["where"],
  FindUniqueMoveBattleStylesOrThrowArgs: ["where"],
  GroupByMoveBattleStylesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemFlagsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemFlagsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemFlagsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemFlagsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemFlagsArgs: ["where"],
  FindUniqueItemFlagsOrThrowArgs: ["where"],
  GroupByItemFlagsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemFlagMapOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemFlagMapArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemFlagMapArgs: ["where"],
  FindUniqueItemFlagMapOrThrowArgs: ["where"],
  GroupByItemFlagMapArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemFlingEffectsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemFlingEffectsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemFlingEffectsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemFlingEffectsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemFlingEffectsArgs: ["where"],
  FindUniqueItemFlingEffectsOrThrowArgs: ["where"],
  GroupByItemFlingEffectsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateBerriesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstBerriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstBerriesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyBerriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueBerriesArgs: ["where"],
  FindUniqueBerriesOrThrowArgs: ["where"],
  GroupByBerriesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateBerryFirmnessArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstBerryFirmnessArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstBerryFirmnessOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyBerryFirmnessArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueBerryFirmnessArgs: ["where"],
  FindUniqueBerryFirmnessOrThrowArgs: ["where"],
  GroupByBerryFirmnessArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateBerryFlavorsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstBerryFlavorsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstBerryFlavorsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyBerryFlavorsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueBerryFlavorsArgs: ["where"],
  FindUniqueBerryFlavorsOrThrowArgs: ["where"],
  GroupByBerryFlavorsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateCharacteristicsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstCharacteristicsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstCharacteristicsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCharacteristicsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueCharacteristicsArgs: ["where"],
  FindUniqueCharacteristicsOrThrowArgs: ["where"],
  GroupByCharacteristicsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateContestCombosArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstContestCombosArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstContestCombosOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyContestCombosArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueContestCombosArgs: ["where"],
  FindUniqueContestCombosOrThrowArgs: ["where"],
  GroupByContestCombosArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateSuperContestCombosArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstSuperContestCombosArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstSuperContestCombosOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManySuperContestCombosArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueSuperContestCombosArgs: ["where"],
  FindUniqueSuperContestCombosOrThrowArgs: ["where"],
  GroupBySuperContestCombosArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonMoveMethodsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonMoveMethodsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonMoveMethodsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonMoveMethodsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonMoveMethodsArgs: ["where"],
  FindUniquePokemonMoveMethodsOrThrowArgs: ["where"],
  GroupByPokemonMoveMethodsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateVersionGroupPokemonMoveMethodsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstVersionGroupPokemonMoveMethodsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstVersionGroupPokemonMoveMethodsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyVersionGroupPokemonMoveMethodsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueVersionGroupPokemonMoveMethodsArgs: ["where"],
  FindUniqueVersionGroupPokemonMoveMethodsOrThrowArgs: ["where"],
  GroupByVersionGroupPokemonMoveMethodsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonShapesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonShapesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonShapesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonShapesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonShapesArgs: ["where"],
  FindUniquePokemonShapesOrThrowArgs: ["where"],
  GroupByPokemonShapesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonColorsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonColorsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonColorsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonColorsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonColorsArgs: ["where"],
  FindUniquePokemonColorsOrThrowArgs: ["where"],
  GroupByPokemonColorsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonHabitatsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonHabitatsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonHabitatsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonHabitatsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonHabitatsArgs: ["where"],
  FindUniquePokemonHabitatsOrThrowArgs: ["where"],
  GroupByPokemonHabitatsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateTypeEfficacyArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstTypeEfficacyArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstTypeEfficacyOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyTypeEfficacyArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueTypeEfficacyArgs: ["where"],
  FindUniqueTypeEfficacyOrThrowArgs: ["where"],
  GroupByTypeEfficacyArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateVersionGroupRegionsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstVersionGroupRegionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstVersionGroupRegionsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyVersionGroupRegionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueVersionGroupRegionsArgs: ["where"],
  FindUniqueVersionGroupRegionsOrThrowArgs: ["where"],
  GroupByVersionGroupRegionsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokedexVersionGroupsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokedexVersionGroupsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokedexVersionGroupsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokedexVersionGroupsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokedexVersionGroupsArgs: ["where"],
  FindUniquePokedexVersionGroupsOrThrowArgs: ["where"],
  GroupByPokedexVersionGroupsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonAbilitiesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonAbilitiesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonAbilitiesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonAbilitiesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonAbilitiesArgs: ["where"],
  FindUniquePokemonAbilitiesOrThrowArgs: ["where"],
  GroupByPokemonAbilitiesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonMovesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonMovesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonMovesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonMovesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonMovesArgs: ["where"],
  FindUniquePokemonMovesOrThrowArgs: ["where"],
  GroupByPokemonMovesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonStatsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonStatsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonStatsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonStatsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonStatsArgs: ["where"],
  FindUniquePokemonStatsOrThrowArgs: ["where"],
  GroupByPokemonStatsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonTypesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonTypesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonTypesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonTypesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonTypesArgs: ["where"],
  FindUniquePokemonTypesOrThrowArgs: ["where"],
  GroupByPokemonTypesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonEggGroupsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonEggGroupsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonEggGroupsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonEggGroupsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonEggGroupsArgs: ["where"],
  FindUniquePokemonEggGroupsOrThrowArgs: ["where"],
  GroupByPokemonEggGroupsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonItemsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonItemsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonItemsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonItemsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonItemsArgs: ["where"],
  FindUniquePokemonItemsOrThrowArgs: ["where"],
  GroupByPokemonItemsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonGameIndicesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonGameIndicesArgs: ["where"],
  FindUniquePokemonGameIndicesOrThrowArgs: ["where"],
  GroupByPokemonGameIndicesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonDexNumbersArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonDexNumbersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonDexNumbersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonDexNumbersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonDexNumbersArgs: ["where"],
  FindUniquePokemonDexNumbersOrThrowArgs: ["where"],
  GroupByPokemonDexNumbersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonFormGenerationsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonFormGenerationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonFormGenerationsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonFormGenerationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonFormGenerationsArgs: ["where"],
  FindUniquePokemonFormGenerationsOrThrowArgs: ["where"],
  GroupByPokemonFormGenerationsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregatePokemonFormTypesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstPokemonFormTypesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPokemonFormTypesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPokemonFormTypesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePokemonFormTypesArgs: ["where"],
  FindUniquePokemonFormTypesOrThrowArgs: ["where"],
  GroupByPokemonFormTypesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateTypeGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstTypeGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstTypeGameIndicesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyTypeGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueTypeGameIndicesArgs: ["where"],
  FindUniqueTypeGameIndicesOrThrowArgs: ["where"],
  GroupByTypeGameIndicesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateItemGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstItemGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstItemGameIndicesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyItemGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueItemGameIndicesArgs: ["where"],
  FindUniqueItemGameIndicesOrThrowArgs: ["where"],
  GroupByItemGameIndicesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLocationGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLocationGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLocationGameIndicesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLocationGameIndicesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLocationGameIndicesArgs: ["where"],
  FindUniqueLocationGameIndicesOrThrowArgs: ["where"],
  GroupByLocationGameIndicesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateLocationAreaEncounterRatesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstLocationAreaEncounterRatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLocationAreaEncounterRatesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLocationAreaEncounterRatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLocationAreaEncounterRatesArgs: ["where"],
  FindUniqueLocationAreaEncounterRatesOrThrowArgs: ["where"],
  GroupByLocationAreaEncounterRatesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  AggregateNatureBattleStylePreferencesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  FindFirstNatureBattleStylePreferencesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstNatureBattleStylePreferencesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyNatureBattleStylePreferencesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueNatureBattleStylePreferencesArgs: ["where"],
  FindUniqueNatureBattleStylePreferencesOrThrowArgs: ["where"],
  GroupByNatureBattleStylePreferencesArgs: ["where", "orderBy", "by", "having", "take", "skip"]};

type ResolverModelNames = keyof typeof crudResolversMap;

type ModelResolverActionNames<
  TModel extends ResolverModelNames
> = keyof typeof crudResolversMap[TModel]["prototype"];

export type ResolverActionsConfig<
  TModel extends ResolverModelNames
> = Partial<Record<ModelResolverActionNames<TModel>, MethodDecorator[] | MethodDecoratorOverrideFn>>
  & {
    _all?: MethodDecorator[];
    _query?: MethodDecorator[];
    _mutation?: MethodDecorator[];
  };

export type ResolversEnhanceMap = {
  [TModel in ResolverModelNames]?: ResolverActionsConfig<TModel>;
};

export function applyResolversEnhanceMap(
  resolversEnhanceMap: ResolversEnhanceMap,
) {
  const mutationOperationPrefixes = [
    "createOne", "createMany", "createManyAndReturn", "deleteOne", "updateOne", "deleteMany", "updateMany", "upsertOne"
  ];
  for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
    const modelName = resolversEnhanceMapKey as keyof typeof resolversEnhanceMap;
    const crudTarget = crudResolversMap[modelName].prototype;
    const resolverActionsConfig = resolversEnhanceMap[modelName]!;
    const actionResolversConfig = actionResolversMap[modelName];
    const allActionsDecorators = resolverActionsConfig._all;
    const resolverActionNames = crudResolversInfo[modelName as keyof typeof crudResolversInfo];
    for (const resolverActionName of resolverActionNames) {
      const maybeDecoratorsOrFn = resolverActionsConfig[
        resolverActionName as keyof typeof resolverActionsConfig
      ] as MethodDecorator[] | MethodDecoratorOverrideFn | undefined;
      const isWriteOperation = mutationOperationPrefixes.some(prefix => resolverActionName.startsWith(prefix));
      const operationKindDecorators = isWriteOperation ? resolverActionsConfig._mutation : resolverActionsConfig._query;
      const mainDecorators = [
        ...allActionsDecorators ?? [],
        ...operationKindDecorators ?? [],
      ]
      let decorators: MethodDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(mainDecorators);
      } else {
        decorators = [...mainDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      const actionTarget = (actionResolversConfig[
        resolverActionName as keyof typeof actionResolversConfig
      ] as Function).prototype;
      tslib.__decorate(decorators, crudTarget, resolverActionName, null);
      tslib.__decorate(decorators, actionTarget, resolverActionName, null);
    }
  }
}

type ArgsTypesNames = keyof typeof argsTypes;

type ArgFieldNames<TArgsType extends ArgsTypesNames> = Exclude<
  keyof typeof argsTypes[TArgsType]["prototype"],
  number | symbol
>;

type ArgFieldsConfig<
  TArgsType extends ArgsTypesNames
> = FieldsConfig<ArgFieldNames<TArgsType>>;

export type ArgConfig<TArgsType extends ArgsTypesNames> = {
  class?: ClassDecorator[];
  fields?: ArgFieldsConfig<TArgsType>;
};

export type ArgsTypesEnhanceMap = {
  [TArgsType in ArgsTypesNames]?: ArgConfig<TArgsType>;
};

export function applyArgsTypesEnhanceMap(
  argsTypesEnhanceMap: ArgsTypesEnhanceMap,
) {
  for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
    const argsTypeName = argsTypesEnhanceMapKey as keyof typeof argsTypesEnhanceMap;
    const typeConfig = argsTypesEnhanceMap[argsTypeName]!;
    const typeClass = argsTypes[argsTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      argsInfo[argsTypeName as keyof typeof argsInfo],
    );
  }
}

const relationResolversMap = {
  Pokemon: relationResolvers.PokemonRelationsResolver,
  PokemonSpecies: relationResolvers.PokemonSpeciesRelationsResolver,
  PokemonForms: relationResolvers.PokemonFormsRelationsResolver,
  Moves: relationResolvers.MovesRelationsResolver,
  MoveEffects: relationResolvers.MoveEffectsRelationsResolver,
  MoveTargets: relationResolvers.MoveTargetsRelationsResolver,
  MoveDamageClasses: relationResolvers.MoveDamageClassesRelationsResolver,
  Types: relationResolvers.TypesRelationsResolver,
  Abilities: relationResolvers.AbilitiesRelationsResolver,
  Items: relationResolvers.ItemsRelationsResolver,
  ItemCategories: relationResolvers.ItemCategoriesRelationsResolver,
  ItemPockets: relationResolvers.ItemPocketsRelationsResolver,
  Stats: relationResolvers.StatsRelationsResolver,
  Generations: relationResolvers.GenerationsRelationsResolver,
  VersionGroups: relationResolvers.VersionGroupsRelationsResolver,
  Versions: relationResolvers.VersionsRelationsResolver,
  Regions: relationResolvers.RegionsRelationsResolver,
  Locations: relationResolvers.LocationsRelationsResolver,
  LocationAreas: relationResolvers.LocationAreasRelationsResolver,
  Pokedexes: relationResolvers.PokedexesRelationsResolver,
  EvolutionChains: relationResolvers.EvolutionChainsRelationsResolver,
  EvolutionTriggers: relationResolvers.EvolutionTriggersRelationsResolver,
  PokemonEvolution: relationResolvers.PokemonEvolutionRelationsResolver,
  GrowthRates: relationResolvers.GrowthRatesRelationsResolver,
  Experience: relationResolvers.ExperienceRelationsResolver,
  Genders: relationResolvers.GendersRelationsResolver,
  EggGroups: relationResolvers.EggGroupsRelationsResolver,
  Natures: relationResolvers.NaturesRelationsResolver,
  ContestTypes: relationResolvers.ContestTypesRelationsResolver,
  ContestEffects: relationResolvers.ContestEffectsRelationsResolver,
  SuperContestEffects: relationResolvers.SuperContestEffectsRelationsResolver,
  Machines: relationResolvers.MachinesRelationsResolver,
  EncounterMethods: relationResolvers.EncounterMethodsRelationsResolver,
  EncounterSlots: relationResolvers.EncounterSlotsRelationsResolver,
  Encounters: relationResolvers.EncountersRelationsResolver,
  EncounterConditions: relationResolvers.EncounterConditionsRelationsResolver,
  EncounterConditionValues: relationResolvers.EncounterConditionValuesRelationsResolver,
  EncounterConditionValueMap: relationResolvers.EncounterConditionValueMapRelationsResolver,
  MoveMetaCategories: relationResolvers.MoveMetaCategoriesRelationsResolver,
  MoveMetaAilments: relationResolvers.MoveMetaAilmentsRelationsResolver,
  MoveMeta: relationResolvers.MoveMetaRelationsResolver,
  MoveMetaStatChanges: relationResolvers.MoveMetaStatChangesRelationsResolver,
  MoveFlags: relationResolvers.MoveFlagsRelationsResolver,
  MoveFlagMap: relationResolvers.MoveFlagMapRelationsResolver,
  MoveBattleStyles: relationResolvers.MoveBattleStylesRelationsResolver,
  ItemFlags: relationResolvers.ItemFlagsRelationsResolver,
  ItemFlagMap: relationResolvers.ItemFlagMapRelationsResolver,
  ItemFlingEffects: relationResolvers.ItemFlingEffectsRelationsResolver,
  Berries: relationResolvers.BerriesRelationsResolver,
  BerryFirmness: relationResolvers.BerryFirmnessRelationsResolver,
  BerryFlavors: relationResolvers.BerryFlavorsRelationsResolver,
  Characteristics: relationResolvers.CharacteristicsRelationsResolver,
  ContestCombos: relationResolvers.ContestCombosRelationsResolver,
  SuperContestCombos: relationResolvers.SuperContestCombosRelationsResolver,
  PokemonMoveMethods: relationResolvers.PokemonMoveMethodsRelationsResolver,
  VersionGroupPokemonMoveMethods: relationResolvers.VersionGroupPokemonMoveMethodsRelationsResolver,
  PokemonShapes: relationResolvers.PokemonShapesRelationsResolver,
  PokemonColors: relationResolvers.PokemonColorsRelationsResolver,
  PokemonHabitats: relationResolvers.PokemonHabitatsRelationsResolver,
  TypeEfficacy: relationResolvers.TypeEfficacyRelationsResolver,
  VersionGroupRegions: relationResolvers.VersionGroupRegionsRelationsResolver,
  PokedexVersionGroups: relationResolvers.PokedexVersionGroupsRelationsResolver,
  PokemonAbilities: relationResolvers.PokemonAbilitiesRelationsResolver,
  PokemonMoves: relationResolvers.PokemonMovesRelationsResolver,
  PokemonStats: relationResolvers.PokemonStatsRelationsResolver,
  PokemonTypes: relationResolvers.PokemonTypesRelationsResolver,
  PokemonEggGroups: relationResolvers.PokemonEggGroupsRelationsResolver,
  PokemonItems: relationResolvers.PokemonItemsRelationsResolver,
  PokemonGameIndices: relationResolvers.PokemonGameIndicesRelationsResolver,
  PokemonDexNumbers: relationResolvers.PokemonDexNumbersRelationsResolver,
  PokemonFormGenerations: relationResolvers.PokemonFormGenerationsRelationsResolver,
  PokemonFormTypes: relationResolvers.PokemonFormTypesRelationsResolver,
  TypeGameIndices: relationResolvers.TypeGameIndicesRelationsResolver,
  ItemGameIndices: relationResolvers.ItemGameIndicesRelationsResolver,
  LocationGameIndices: relationResolvers.LocationGameIndicesRelationsResolver,
  LocationAreaEncounterRates: relationResolvers.LocationAreaEncounterRatesRelationsResolver,
  NatureBattleStylePreferences: relationResolvers.NatureBattleStylePreferencesRelationsResolver
};
const relationResolversInfo = {
  Pokemon: ["species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonSpecies: ["generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonForms: ["pokemon", "versionGroup", "generations", "types"],
  Moves: ["generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveEffects: ["moves"],
  MoveTargets: ["moves"],
  MoveDamageClasses: ["moves", "types"],
  Types: ["generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  Abilities: ["generation", "pokemonAbilities"],
  Items: ["category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCategories: ["pocket", "items"],
  ItemPockets: ["categories"],
  Stats: ["pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  Generations: ["region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  VersionGroups: ["generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  Versions: ["versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  Regions: ["generations", "locations", "pokedexes", "versionGroups"],
  Locations: ["region", "areas", "gameIndices", "evolution"],
  LocationAreas: ["location", "encounters", "encounterRates"],
  Pokedexes: ["region", "dexNumbers", "versionGroups"],
  EvolutionChains: ["babyTriggerItem", "species"],
  EvolutionTriggers: ["evolution"],
  PokemonEvolution: ["evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  GrowthRates: ["species", "experience"],
  Experience: ["growthRate"],
  Genders: ["evolution"],
  EggGroups: ["species"],
  Natures: ["decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  ContestTypes: ["moves", "berryFlavors"],
  ContestEffects: ["moves"],
  SuperContestEffects: ["moves"],
  Machines: ["versionGroup", "item", "move"],
  EncounterMethods: ["slots", "encounterRates"],
  EncounterSlots: ["versionGroup", "encounterMethod", "encounters"],
  Encounters: ["version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterConditions: ["values"],
  EncounterConditionValues: ["condition", "conditionValueMap"],
  EncounterConditionValueMap: ["encounter", "conditionValue"],
  MoveMetaCategories: ["meta"],
  MoveMetaAilments: ["meta"],
  MoveMeta: ["move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaStatChanges: ["move", "stat", "meta"],
  MoveFlags: ["flagMap"],
  MoveFlagMap: ["move", "flag"],
  MoveBattleStyles: ["naturePreferences"],
  ItemFlags: ["flagMap"],
  ItemFlagMap: ["item", "flag"],
  ItemFlingEffects: ["items"],
  Berries: ["item", "firmness", "naturalGiftType", "flavors"],
  BerryFirmness: ["berries"],
  BerryFlavors: ["berry", "contestType", "type"],
  Characteristics: ["stat"],
  ContestCombos: ["firstMove", "secondMove"],
  SuperContestCombos: ["firstMove", "secondMove"],
  PokemonMoveMethods: ["pokemonMoves", "versionGroups"],
  VersionGroupPokemonMoveMethods: ["versionGroup", "moveMethod"],
  PokemonShapes: ["species"],
  PokemonColors: ["species"],
  PokemonHabitats: ["species"],
  TypeEfficacy: ["damageType", "targetType"],
  VersionGroupRegions: ["versionGroup", "region"],
  PokedexVersionGroups: ["pokedex", "versionGroup"],
  PokemonAbilities: ["pokemon", "ability"],
  PokemonMoves: ["pokemon", "versionGroup", "move", "moveMethod"],
  PokemonStats: ["pokemon", "stat"],
  PokemonTypes: ["pokemon", "type"],
  PokemonEggGroups: ["species", "eggGroup"],
  PokemonItems: ["pokemon", "version", "item"],
  PokemonGameIndices: ["pokemon", "version"],
  PokemonDexNumbers: ["species", "pokedex"],
  PokemonFormGenerations: ["pokemonForm", "generation"],
  PokemonFormTypes: ["pokemonForm", "type"],
  TypeGameIndices: ["type", "generation"],
  ItemGameIndices: ["item", "generation"],
  LocationGameIndices: ["location", "generation"],
  LocationAreaEncounterRates: ["locationArea", "encounterMethod", "version"],
  NatureBattleStylePreferences: ["nature", "battleStyle"]
};

type RelationResolverModelNames = keyof typeof relationResolversMap;

type RelationResolverActionNames<
  TModel extends RelationResolverModelNames
> = keyof typeof relationResolversMap[TModel]["prototype"];

export type RelationResolverActionsConfig<TModel extends RelationResolverModelNames>
  = Partial<Record<RelationResolverActionNames<TModel>, MethodDecorator[] | MethodDecoratorOverrideFn>>
  & { _all?: MethodDecorator[] };

export type RelationResolversEnhanceMap = {
  [TModel in RelationResolverModelNames]?: RelationResolverActionsConfig<TModel>;
};

export function applyRelationResolversEnhanceMap(
  relationResolversEnhanceMap: RelationResolversEnhanceMap,
) {
  for (const relationResolversEnhanceMapKey of Object.keys(relationResolversEnhanceMap)) {
    const modelName = relationResolversEnhanceMapKey as keyof typeof relationResolversEnhanceMap;
    const relationResolverTarget = relationResolversMap[modelName].prototype;
    const relationResolverActionsConfig = relationResolversEnhanceMap[modelName]!;
    const allActionsDecorators = relationResolverActionsConfig._all ?? [];
    const relationResolverActionNames = relationResolversInfo[modelName as keyof typeof relationResolversInfo];
    for (const relationResolverActionName of relationResolverActionNames) {
      const maybeDecoratorsOrFn = relationResolverActionsConfig[
        relationResolverActionName as keyof typeof relationResolverActionsConfig
      ] as MethodDecorator[] | MethodDecoratorOverrideFn | undefined;
      let decorators: MethodDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(allActionsDecorators);
      } else {
        decorators = [...allActionsDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      tslib.__decorate(decorators, relationResolverTarget, relationResolverActionName, null);
    }
  }
}

type TypeConfig = {
  class?: ClassDecorator[];
  fields?: FieldsConfig;
};

export type PropertyDecoratorOverrideFn = (decorators: PropertyDecorator[]) => PropertyDecorator[];

type FieldsConfig<TTypeKeys extends string = string> = Partial<
  Record<TTypeKeys, PropertyDecorator[] | PropertyDecoratorOverrideFn>
> & { _all?: PropertyDecorator[] };

function applyTypeClassEnhanceConfig<
  TEnhanceConfig extends TypeConfig,
  TType extends object
>(
  enhanceConfig: TEnhanceConfig,
  typeClass: ClassType<TType>,
  typePrototype: TType,
  typeFieldNames: string[]
) {
  if (enhanceConfig.class) {
    tslib.__decorate(enhanceConfig.class, typeClass);
  }
  if (enhanceConfig.fields) {
    const allFieldsDecorators = enhanceConfig.fields._all ?? [];
    for (const typeFieldName of typeFieldNames) {
      const maybeDecoratorsOrFn = enhanceConfig.fields[
        typeFieldName
      ] as PropertyDecorator[] | PropertyDecoratorOverrideFn | undefined;
      let decorators: PropertyDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(allFieldsDecorators);
      } else {
        decorators = [...allFieldsDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      tslib.__decorate(decorators, typePrototype, typeFieldName, void 0);
    }
  }
}

const modelsInfo = {
  Pokemon: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSpecies: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonForms: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  Moves: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveEffects: ["id"],
  MoveTargets: ["id", "identifier"],
  MoveDamageClasses: ["id", "identifier"],
  Types: ["id", "identifier", "generation_id", "damage_class_id"],
  Abilities: ["id", "identifier", "generation_id", "is_main_series"],
  Items: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemCategories: ["id", "pocket_id", "identifier"],
  ItemPockets: ["id", "identifier"],
  Stats: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  Generations: ["id", "main_region_id", "identifier"],
  VersionGroups: ["id", "identifier", "generation_id", "order"],
  Versions: ["id", "version_group_id", "identifier"],
  Regions: ["id", "identifier"],
  Locations: ["id", "region_id", "identifier"],
  LocationAreas: ["id", "location_id", "game_index", "identifier"],
  Pokedexes: ["id", "region_id", "identifier", "is_main_series"],
  EvolutionChains: ["id", "baby_trigger_item_id"],
  EvolutionTriggers: ["id", "identifier"],
  PokemonEvolution: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  GrowthRates: ["id", "identifier", "formula"],
  Experience: ["growth_rate_id", "level", "experience"],
  Genders: ["id", "identifier"],
  Languages: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  EggGroups: ["id", "identifier"],
  Natures: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  ContestTypes: ["id", "identifier"],
  ContestEffects: ["id", "appeal", "jam"],
  SuperContestEffects: ["id", "appeal"],
  Machines: ["machine_number", "version_group_id", "item_id", "move_id"],
  EncounterMethods: ["id", "identifier", "order"],
  EncounterSlots: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  Encounters: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterConditions: ["id", "identifier"],
  EncounterConditionValues: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueMap: ["encounter_id", "encounter_condition_value_id"],
  MoveMetaCategories: ["id", "identifier"],
  MoveMetaAilments: ["id", "identifier"],
  MoveMeta: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaStatChanges: ["move_id", "stat_id", "change"],
  MoveFlags: ["id", "identifier"],
  MoveFlagMap: ["move_id", "move_flag_id"],
  MoveBattleStyles: ["id", "identifier"],
  ItemFlags: ["id", "identifier"],
  ItemFlagMap: ["item_id", "item_flag_id"],
  ItemFlingEffects: ["id", "identifier"],
  Berries: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryFirmness: ["id", "identifier"],
  BerryFlavors: ["berry_id", "contest_type_id", "flavor"],
  Characteristics: ["id", "stat_id", "gene_mod_5"],
  ContestCombos: ["first_move_id", "second_move_id"],
  SuperContestCombos: ["first_move_id", "second_move_id"],
  PokemonMoveMethods: ["id", "identifier"],
  VersionGroupPokemonMoveMethods: ["version_group_id", "pokemon_move_method_id"],
  PokemonShapes: ["id", "identifier"],
  PokemonColors: ["id", "identifier"],
  PokemonHabitats: ["id", "identifier"],
  TypeEfficacy: ["damage_type_id", "target_type_id", "damage_factor"],
  VersionGroupRegions: ["version_group_id", "region_id"],
  PokedexVersionGroups: ["pokedex_id", "version_group_id"],
  PokemonAbilities: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMoves: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStats: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypes: ["pokemon_id", "type_id", "slot"],
  PokemonEggGroups: ["species_id", "egg_group_id"],
  PokemonItems: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndices: ["pokemon_id", "version_id", "game_index"],
  PokemonDexNumbers: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonFormGenerations: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypes: ["pokemon_form_id", "type_id", "slot"],
  TypeGameIndices: ["type_id", "generation_id", "game_index"],
  ItemGameIndices: ["item_id", "generation_id", "game_index"],
  LocationGameIndices: ["location_id", "generation_id", "game_index"],
  LocationAreaEncounterRates: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  NatureBattleStylePreferences: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"]
};

type ModelNames = keyof typeof models;

type ModelFieldNames<TModel extends ModelNames> = Exclude<
  keyof typeof models[TModel]["prototype"],
  number | symbol
>;

type ModelFieldsConfig<TModel extends ModelNames> = FieldsConfig<
  ModelFieldNames<TModel>
>;

export type ModelConfig<TModel extends ModelNames> = {
  class?: ClassDecorator[];
  fields?: ModelFieldsConfig<TModel>;
};

export type ModelsEnhanceMap = {
  [TModel in ModelNames]?: ModelConfig<TModel>;
};

export function applyModelsEnhanceMap(modelsEnhanceMap: ModelsEnhanceMap) {
  for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
    const modelName = modelsEnhanceMapKey as keyof typeof modelsEnhanceMap;
    const modelConfig = modelsEnhanceMap[modelName]!;
    const modelClass = models[modelName];
    const modelTarget = modelClass.prototype;
    applyTypeClassEnhanceConfig(
      modelConfig,
      modelClass,
      modelTarget,
      modelsInfo[modelName as keyof typeof modelsInfo],
    );
  }
}

const outputsInfo = {
  AggregatePokemon: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonGroupBy: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonSpecies: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonSpeciesGroupBy: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonForms: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonFormsGroupBy: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoves: ["_count", "_avg", "_sum", "_min", "_max"],
  MovesGroupBy: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveEffects: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveEffectsGroupBy: ["id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveTargets: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveTargetsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveDamageClasses: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveDamageClassesGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateTypes: ["_count", "_avg", "_sum", "_min", "_max"],
  TypesGroupBy: ["id", "identifier", "generation_id", "damage_class_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateAbilities: ["_count", "_avg", "_sum", "_min", "_max"],
  AbilitiesGroupBy: ["id", "identifier", "generation_id", "is_main_series", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItems: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemsGroupBy: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemCategories: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemCategoriesGroupBy: ["id", "pocket_id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemPockets: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemPocketsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateStats: ["_count", "_avg", "_sum", "_min", "_max"],
  StatsGroupBy: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateGenerations: ["_count", "_avg", "_sum", "_min", "_max"],
  GenerationsGroupBy: ["id", "main_region_id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateVersionGroups: ["_count", "_avg", "_sum", "_min", "_max"],
  VersionGroupsGroupBy: ["id", "identifier", "generation_id", "order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateVersions: ["_count", "_avg", "_sum", "_min", "_max"],
  VersionsGroupBy: ["id", "version_group_id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateRegions: ["_count", "_avg", "_sum", "_min", "_max"],
  RegionsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLocations: ["_count", "_avg", "_sum", "_min", "_max"],
  LocationsGroupBy: ["id", "region_id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLocationAreas: ["_count", "_avg", "_sum", "_min", "_max"],
  LocationAreasGroupBy: ["id", "location_id", "game_index", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokedexes: ["_count", "_avg", "_sum", "_min", "_max"],
  PokedexesGroupBy: ["id", "region_id", "identifier", "is_main_series", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEvolutionChains: ["_count", "_avg", "_sum", "_min", "_max"],
  EvolutionChainsGroupBy: ["id", "baby_trigger_item_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEvolutionTriggers: ["_count", "_avg", "_sum", "_min", "_max"],
  EvolutionTriggersGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonEvolution: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonEvolutionGroupBy: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateGrowthRates: ["_count", "_avg", "_sum", "_min", "_max"],
  GrowthRatesGroupBy: ["id", "identifier", "formula", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateExperience: ["_count", "_avg", "_sum", "_min", "_max"],
  ExperienceGroupBy: ["growth_rate_id", "level", "experience", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateGenders: ["_count", "_avg", "_sum", "_min", "_max"],
  GendersGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLanguages: ["_count", "_avg", "_sum", "_min", "_max"],
  LanguagesGroupBy: ["id", "iso639", "iso3166", "identifier", "official", "order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEggGroups: ["_count", "_avg", "_sum", "_min", "_max"],
  EggGroupsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateNatures: ["_count", "_avg", "_sum", "_min", "_max"],
  NaturesGroupBy: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateContestTypes: ["_count", "_avg", "_sum", "_min", "_max"],
  ContestTypesGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateContestEffects: ["_count", "_avg", "_sum", "_min", "_max"],
  ContestEffectsGroupBy: ["id", "appeal", "jam", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSuperContestEffects: ["_count", "_avg", "_sum", "_min", "_max"],
  SuperContestEffectsGroupBy: ["id", "appeal", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMachines: ["_count", "_avg", "_sum", "_min", "_max"],
  MachinesGroupBy: ["machine_number", "version_group_id", "item_id", "move_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterMethods: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterMethodsGroupBy: ["id", "identifier", "order", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterSlots: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterSlotsGroupBy: ["id", "version_group_id", "encounter_method_id", "slot", "rarity", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounters: ["_count", "_avg", "_sum", "_min", "_max"],
  EncountersGroupBy: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterConditions: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterConditionsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterConditionValues: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterConditionValuesGroupBy: ["id", "encounter_condition_id", "identifier", "is_default", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateEncounterConditionValueMap: ["_count", "_avg", "_sum", "_min", "_max"],
  EncounterConditionValueMapGroupBy: ["encounter_id", "encounter_condition_value_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveMetaCategories: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveMetaCategoriesGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveMetaAilments: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveMetaAilmentsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveMeta: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveMetaGroupBy: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveMetaStatChanges: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveMetaStatChangesGroupBy: ["move_id", "stat_id", "change", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveFlags: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveFlagsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveFlagMap: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveFlagMapGroupBy: ["move_id", "move_flag_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateMoveBattleStyles: ["_count", "_avg", "_sum", "_min", "_max"],
  MoveBattleStylesGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemFlags: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemFlagsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemFlagMap: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemFlagMapGroupBy: ["item_id", "item_flag_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemFlingEffects: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemFlingEffectsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateBerries: ["_count", "_avg", "_sum", "_min", "_max"],
  BerriesGroupBy: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateBerryFirmness: ["_count", "_avg", "_sum", "_min", "_max"],
  BerryFirmnessGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateBerryFlavors: ["_count", "_avg", "_sum", "_min", "_max"],
  BerryFlavorsGroupBy: ["berry_id", "contest_type_id", "flavor", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateCharacteristics: ["_count", "_avg", "_sum", "_min", "_max"],
  CharacteristicsGroupBy: ["id", "stat_id", "gene_mod_5", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateContestCombos: ["_count", "_avg", "_sum", "_min", "_max"],
  ContestCombosGroupBy: ["first_move_id", "second_move_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateSuperContestCombos: ["_count", "_avg", "_sum", "_min", "_max"],
  SuperContestCombosGroupBy: ["first_move_id", "second_move_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonMoveMethods: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonMoveMethodsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateVersionGroupPokemonMoveMethods: ["_count", "_avg", "_sum", "_min", "_max"],
  VersionGroupPokemonMoveMethodsGroupBy: ["version_group_id", "pokemon_move_method_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonShapes: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonShapesGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonColors: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonColorsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonHabitats: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonHabitatsGroupBy: ["id", "identifier", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateTypeEfficacy: ["_count", "_avg", "_sum", "_min", "_max"],
  TypeEfficacyGroupBy: ["damage_type_id", "target_type_id", "damage_factor", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateVersionGroupRegions: ["_count", "_avg", "_sum", "_min", "_max"],
  VersionGroupRegionsGroupBy: ["version_group_id", "region_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokedexVersionGroups: ["_count", "_avg", "_sum", "_min", "_max"],
  PokedexVersionGroupsGroupBy: ["pokedex_id", "version_group_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonAbilities: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonAbilitiesGroupBy: ["pokemon_id", "ability_id", "is_hidden", "slot", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonMoves: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonMovesGroupBy: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonStats: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonStatsGroupBy: ["pokemon_id", "stat_id", "base_stat", "effort", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonTypes: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonTypesGroupBy: ["pokemon_id", "type_id", "slot", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonEggGroups: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonEggGroupsGroupBy: ["species_id", "egg_group_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonItems: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonItemsGroupBy: ["pokemon_id", "version_id", "item_id", "rarity", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonGameIndices: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonGameIndicesGroupBy: ["pokemon_id", "version_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonDexNumbers: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonDexNumbersGroupBy: ["species_id", "pokedex_id", "pokedex_number", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonFormGenerations: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonFormGenerationsGroupBy: ["pokemon_form_id", "generation_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePokemonFormTypes: ["_count", "_avg", "_sum", "_min", "_max"],
  PokemonFormTypesGroupBy: ["pokemon_form_id", "type_id", "slot", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateTypeGameIndices: ["_count", "_avg", "_sum", "_min", "_max"],
  TypeGameIndicesGroupBy: ["type_id", "generation_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateItemGameIndices: ["_count", "_avg", "_sum", "_min", "_max"],
  ItemGameIndicesGroupBy: ["item_id", "generation_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLocationGameIndices: ["_count", "_avg", "_sum", "_min", "_max"],
  LocationGameIndicesGroupBy: ["location_id", "generation_id", "game_index", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateLocationAreaEncounterRates: ["_count", "_avg", "_sum", "_min", "_max"],
  LocationAreaEncounterRatesGroupBy: ["location_area_id", "encounter_method_id", "version_id", "rate", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateNatureBattleStylePreferences: ["_count", "_avg", "_sum", "_min", "_max"],
  NatureBattleStylePreferencesGroupBy: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "_count", "_avg", "_sum", "_min", "_max"],
  AffectedRowsOutput: ["count"],
  PokemonCount: ["forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCountAggregate: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "_all"],
  PokemonAvgAggregate: ["id", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSumAggregate: ["id", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonMinAggregate: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonMaxAggregate: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSpeciesCount: ["evolvesTo", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCountAggregate: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "_all"],
  PokemonSpeciesAvgAggregate: ["id", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesSumAggregate: ["id", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesMinAggregate: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesMaxAggregate: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonFormsCount: ["generations", "types"],
  PokemonFormsCountAggregate: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "_all"],
  PokemonFormsAvgAggregate: ["id", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormsSumAggregate: ["id", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormsMinAggregate: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormsMaxAggregate: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  MovesCount: ["pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCountAggregate: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "_all"],
  MovesAvgAggregate: ["id", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesSumAggregate: ["id", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesMinAggregate: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesMaxAggregate: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveEffectsCount: ["moves"],
  MoveEffectsCountAggregate: ["id", "_all"],
  MoveEffectsAvgAggregate: ["id"],
  MoveEffectsSumAggregate: ["id"],
  MoveEffectsMinAggregate: ["id"],
  MoveEffectsMaxAggregate: ["id"],
  MoveTargetsCount: ["moves"],
  MoveTargetsCountAggregate: ["id", "identifier", "_all"],
  MoveTargetsAvgAggregate: ["id"],
  MoveTargetsSumAggregate: ["id"],
  MoveTargetsMinAggregate: ["id", "identifier"],
  MoveTargetsMaxAggregate: ["id", "identifier"],
  MoveDamageClassesCount: ["moves", "types"],
  MoveDamageClassesCountAggregate: ["id", "identifier", "_all"],
  MoveDamageClassesAvgAggregate: ["id"],
  MoveDamageClassesSumAggregate: ["id"],
  MoveDamageClassesMinAggregate: ["id", "identifier"],
  MoveDamageClassesMaxAggregate: ["id", "identifier"],
  TypesCount: ["moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCountAggregate: ["id", "identifier", "generation_id", "damage_class_id", "_all"],
  TypesAvgAggregate: ["id", "generation_id", "damage_class_id"],
  TypesSumAggregate: ["id", "generation_id", "damage_class_id"],
  TypesMinAggregate: ["id", "identifier", "generation_id", "damage_class_id"],
  TypesMaxAggregate: ["id", "identifier", "generation_id", "damage_class_id"],
  AbilitiesCount: ["pokemonAbilities"],
  AbilitiesCountAggregate: ["id", "identifier", "generation_id", "is_main_series", "_all"],
  AbilitiesAvgAggregate: ["id", "generation_id", "is_main_series"],
  AbilitiesSumAggregate: ["id", "generation_id", "is_main_series"],
  AbilitiesMinAggregate: ["id", "identifier", "generation_id", "is_main_series"],
  AbilitiesMaxAggregate: ["id", "identifier", "generation_id", "is_main_series"],
  ItemsCount: ["pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsCountAggregate: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "_all"],
  ItemsAvgAggregate: ["id", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemsSumAggregate: ["id", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemsMinAggregate: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemsMaxAggregate: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemCategoriesCount: ["items"],
  ItemCategoriesCountAggregate: ["id", "pocket_id", "identifier", "_all"],
  ItemCategoriesAvgAggregate: ["id", "pocket_id"],
  ItemCategoriesSumAggregate: ["id", "pocket_id"],
  ItemCategoriesMinAggregate: ["id", "pocket_id", "identifier"],
  ItemCategoriesMaxAggregate: ["id", "pocket_id", "identifier"],
  ItemPocketsCount: ["categories"],
  ItemPocketsCountAggregate: ["id", "identifier", "_all"],
  ItemPocketsAvgAggregate: ["id"],
  ItemPocketsSumAggregate: ["id"],
  ItemPocketsMinAggregate: ["id", "identifier"],
  ItemPocketsMaxAggregate: ["id", "identifier"],
  StatsCount: ["pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatsCountAggregate: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "_all"],
  StatsAvgAggregate: ["id", "damage_class_id", "is_battle_only", "game_index"],
  StatsSumAggregate: ["id", "damage_class_id", "is_battle_only", "game_index"],
  StatsMinAggregate: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  StatsMaxAggregate: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  GenerationsCount: ["pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCountAggregate: ["id", "main_region_id", "identifier", "_all"],
  GenerationsAvgAggregate: ["id", "main_region_id"],
  GenerationsSumAggregate: ["id", "main_region_id"],
  GenerationsMinAggregate: ["id", "main_region_id", "identifier"],
  GenerationsMaxAggregate: ["id", "main_region_id", "identifier"],
  VersionGroupsCount: ["versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsCountAggregate: ["id", "identifier", "generation_id", "order", "_all"],
  VersionGroupsAvgAggregate: ["id", "generation_id", "order"],
  VersionGroupsSumAggregate: ["id", "generation_id", "order"],
  VersionGroupsMinAggregate: ["id", "identifier", "generation_id", "order"],
  VersionGroupsMaxAggregate: ["id", "identifier", "generation_id", "order"],
  VersionsCount: ["encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionsCountAggregate: ["id", "version_group_id", "identifier", "_all"],
  VersionsAvgAggregate: ["id", "version_group_id"],
  VersionsSumAggregate: ["id", "version_group_id"],
  VersionsMinAggregate: ["id", "version_group_id", "identifier"],
  VersionsMaxAggregate: ["id", "version_group_id", "identifier"],
  RegionsCount: ["generations", "locations", "pokedexes", "versionGroups"],
  RegionsCountAggregate: ["id", "identifier", "_all"],
  RegionsAvgAggregate: ["id"],
  RegionsSumAggregate: ["id"],
  RegionsMinAggregate: ["id", "identifier"],
  RegionsMaxAggregate: ["id", "identifier"],
  LocationsCount: ["areas", "gameIndices", "evolution"],
  LocationsCountAggregate: ["id", "region_id", "identifier", "_all"],
  LocationsAvgAggregate: ["id", "region_id"],
  LocationsSumAggregate: ["id", "region_id"],
  LocationsMinAggregate: ["id", "region_id", "identifier"],
  LocationsMaxAggregate: ["id", "region_id", "identifier"],
  LocationAreasCount: ["encounters", "encounterRates"],
  LocationAreasCountAggregate: ["id", "location_id", "game_index", "identifier", "_all"],
  LocationAreasAvgAggregate: ["id", "location_id", "game_index"],
  LocationAreasSumAggregate: ["id", "location_id", "game_index"],
  LocationAreasMinAggregate: ["id", "location_id", "game_index", "identifier"],
  LocationAreasMaxAggregate: ["id", "location_id", "game_index", "identifier"],
  PokedexesCount: ["dexNumbers", "versionGroups"],
  PokedexesCountAggregate: ["id", "region_id", "identifier", "is_main_series", "_all"],
  PokedexesAvgAggregate: ["id", "region_id", "is_main_series"],
  PokedexesSumAggregate: ["id", "region_id", "is_main_series"],
  PokedexesMinAggregate: ["id", "region_id", "identifier", "is_main_series"],
  PokedexesMaxAggregate: ["id", "region_id", "identifier", "is_main_series"],
  EvolutionChainsCount: ["species"],
  EvolutionChainsCountAggregate: ["id", "baby_trigger_item_id", "_all"],
  EvolutionChainsAvgAggregate: ["id", "baby_trigger_item_id"],
  EvolutionChainsSumAggregate: ["id", "baby_trigger_item_id"],
  EvolutionChainsMinAggregate: ["id", "baby_trigger_item_id"],
  EvolutionChainsMaxAggregate: ["id", "baby_trigger_item_id"],
  EvolutionTriggersCount: ["evolution"],
  EvolutionTriggersCountAggregate: ["id", "identifier", "_all"],
  EvolutionTriggersAvgAggregate: ["id"],
  EvolutionTriggersSumAggregate: ["id"],
  EvolutionTriggersMinAggregate: ["id", "identifier"],
  EvolutionTriggersMaxAggregate: ["id", "identifier"],
  PokemonEvolutionCountAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "_all"],
  PokemonEvolutionAvgAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionSumAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionMinAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionMaxAggregate: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  GrowthRatesCount: ["species", "experience"],
  GrowthRatesCountAggregate: ["id", "identifier", "formula", "_all"],
  GrowthRatesAvgAggregate: ["id"],
  GrowthRatesSumAggregate: ["id"],
  GrowthRatesMinAggregate: ["id", "identifier", "formula"],
  GrowthRatesMaxAggregate: ["id", "identifier", "formula"],
  ExperienceCountAggregate: ["growth_rate_id", "level", "experience", "_all"],
  ExperienceAvgAggregate: ["growth_rate_id", "level", "experience"],
  ExperienceSumAggregate: ["growth_rate_id", "level", "experience"],
  ExperienceMinAggregate: ["growth_rate_id", "level", "experience"],
  ExperienceMaxAggregate: ["growth_rate_id", "level", "experience"],
  GendersCount: ["evolution"],
  GendersCountAggregate: ["id", "identifier", "_all"],
  GendersAvgAggregate: ["id"],
  GendersSumAggregate: ["id"],
  GendersMinAggregate: ["id", "identifier"],
  GendersMaxAggregate: ["id", "identifier"],
  LanguagesCountAggregate: ["id", "iso639", "iso3166", "identifier", "official", "order", "_all"],
  LanguagesAvgAggregate: ["id", "official", "order"],
  LanguagesSumAggregate: ["id", "official", "order"],
  LanguagesMinAggregate: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguagesMaxAggregate: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  EggGroupsCount: ["species"],
  EggGroupsCountAggregate: ["id", "identifier", "_all"],
  EggGroupsAvgAggregate: ["id"],
  EggGroupsSumAggregate: ["id"],
  EggGroupsMinAggregate: ["id", "identifier"],
  EggGroupsMaxAggregate: ["id", "identifier"],
  NaturesCount: ["battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NaturesCountAggregate: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "_all"],
  NaturesAvgAggregate: ["id", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NaturesSumAggregate: ["id", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NaturesMinAggregate: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NaturesMaxAggregate: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  ContestTypesCount: ["moves", "berryFlavors"],
  ContestTypesCountAggregate: ["id", "identifier", "_all"],
  ContestTypesAvgAggregate: ["id"],
  ContestTypesSumAggregate: ["id"],
  ContestTypesMinAggregate: ["id", "identifier"],
  ContestTypesMaxAggregate: ["id", "identifier"],
  ContestEffectsCount: ["moves"],
  ContestEffectsCountAggregate: ["id", "appeal", "jam", "_all"],
  ContestEffectsAvgAggregate: ["id", "appeal", "jam"],
  ContestEffectsSumAggregate: ["id", "appeal", "jam"],
  ContestEffectsMinAggregate: ["id", "appeal", "jam"],
  ContestEffectsMaxAggregate: ["id", "appeal", "jam"],
  SuperContestEffectsCount: ["moves"],
  SuperContestEffectsCountAggregate: ["id", "appeal", "_all"],
  SuperContestEffectsAvgAggregate: ["id", "appeal"],
  SuperContestEffectsSumAggregate: ["id", "appeal"],
  SuperContestEffectsMinAggregate: ["id", "appeal"],
  SuperContestEffectsMaxAggregate: ["id", "appeal"],
  MachinesCountAggregate: ["machine_number", "version_group_id", "item_id", "move_id", "_all"],
  MachinesAvgAggregate: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachinesSumAggregate: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachinesMinAggregate: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachinesMaxAggregate: ["machine_number", "version_group_id", "item_id", "move_id"],
  EncounterMethodsCount: ["slots", "encounterRates"],
  EncounterMethodsCountAggregate: ["id", "identifier", "order", "_all"],
  EncounterMethodsAvgAggregate: ["id", "order"],
  EncounterMethodsSumAggregate: ["id", "order"],
  EncounterMethodsMinAggregate: ["id", "identifier", "order"],
  EncounterMethodsMaxAggregate: ["id", "identifier", "order"],
  EncounterSlotsCount: ["encounters"],
  EncounterSlotsCountAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity", "_all"],
  EncounterSlotsAvgAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotsSumAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotsMinAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotsMaxAggregate: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncountersCount: ["conditionValueMap"],
  EncountersCountAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "_all"],
  EncountersAvgAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncountersSumAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncountersMinAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncountersMaxAggregate: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterConditionsCount: ["values"],
  EncounterConditionsCountAggregate: ["id", "identifier", "_all"],
  EncounterConditionsAvgAggregate: ["id"],
  EncounterConditionsSumAggregate: ["id"],
  EncounterConditionsMinAggregate: ["id", "identifier"],
  EncounterConditionsMaxAggregate: ["id", "identifier"],
  EncounterConditionValuesCount: ["conditionValueMap"],
  EncounterConditionValuesCountAggregate: ["id", "encounter_condition_id", "identifier", "is_default", "_all"],
  EncounterConditionValuesAvgAggregate: ["id", "encounter_condition_id", "is_default"],
  EncounterConditionValuesSumAggregate: ["id", "encounter_condition_id", "is_default"],
  EncounterConditionValuesMinAggregate: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValuesMaxAggregate: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueMapCountAggregate: ["encounter_id", "encounter_condition_value_id", "_all"],
  EncounterConditionValueMapAvgAggregate: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapSumAggregate: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapMinAggregate: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapMaxAggregate: ["encounter_id", "encounter_condition_value_id"],
  MoveMetaCategoriesCount: ["meta"],
  MoveMetaCategoriesCountAggregate: ["id", "identifier", "_all"],
  MoveMetaCategoriesAvgAggregate: ["id"],
  MoveMetaCategoriesSumAggregate: ["id"],
  MoveMetaCategoriesMinAggregate: ["id", "identifier"],
  MoveMetaCategoriesMaxAggregate: ["id", "identifier"],
  MoveMetaAilmentsCount: ["meta"],
  MoveMetaAilmentsCountAggregate: ["id", "identifier", "_all"],
  MoveMetaAilmentsAvgAggregate: ["id"],
  MoveMetaAilmentsSumAggregate: ["id"],
  MoveMetaAilmentsMinAggregate: ["id", "identifier"],
  MoveMetaAilmentsMaxAggregate: ["id", "identifier"],
  MoveMetaCount: ["statChanges"],
  MoveMetaCountAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "_all"],
  MoveMetaAvgAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaSumAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaMinAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaMaxAggregate: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaStatChangesCountAggregate: ["move_id", "stat_id", "change", "_all"],
  MoveMetaStatChangesAvgAggregate: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesSumAggregate: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesMinAggregate: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesMaxAggregate: ["move_id", "stat_id", "change"],
  MoveFlagsCount: ["flagMap"],
  MoveFlagsCountAggregate: ["id", "identifier", "_all"],
  MoveFlagsAvgAggregate: ["id"],
  MoveFlagsSumAggregate: ["id"],
  MoveFlagsMinAggregate: ["id", "identifier"],
  MoveFlagsMaxAggregate: ["id", "identifier"],
  MoveFlagMapCountAggregate: ["move_id", "move_flag_id", "_all"],
  MoveFlagMapAvgAggregate: ["move_id", "move_flag_id"],
  MoveFlagMapSumAggregate: ["move_id", "move_flag_id"],
  MoveFlagMapMinAggregate: ["move_id", "move_flag_id"],
  MoveFlagMapMaxAggregate: ["move_id", "move_flag_id"],
  MoveBattleStylesCount: ["naturePreferences"],
  MoveBattleStylesCountAggregate: ["id", "identifier", "_all"],
  MoveBattleStylesAvgAggregate: ["id"],
  MoveBattleStylesSumAggregate: ["id"],
  MoveBattleStylesMinAggregate: ["id", "identifier"],
  MoveBattleStylesMaxAggregate: ["id", "identifier"],
  ItemFlagsCount: ["flagMap"],
  ItemFlagsCountAggregate: ["id", "identifier", "_all"],
  ItemFlagsAvgAggregate: ["id"],
  ItemFlagsSumAggregate: ["id"],
  ItemFlagsMinAggregate: ["id", "identifier"],
  ItemFlagsMaxAggregate: ["id", "identifier"],
  ItemFlagMapCountAggregate: ["item_id", "item_flag_id", "_all"],
  ItemFlagMapAvgAggregate: ["item_id", "item_flag_id"],
  ItemFlagMapSumAggregate: ["item_id", "item_flag_id"],
  ItemFlagMapMinAggregate: ["item_id", "item_flag_id"],
  ItemFlagMapMaxAggregate: ["item_id", "item_flag_id"],
  ItemFlingEffectsCount: ["items"],
  ItemFlingEffectsCountAggregate: ["id", "identifier", "_all"],
  ItemFlingEffectsAvgAggregate: ["id"],
  ItemFlingEffectsSumAggregate: ["id"],
  ItemFlingEffectsMinAggregate: ["id", "identifier"],
  ItemFlingEffectsMaxAggregate: ["id", "identifier"],
  BerriesCount: ["flavors"],
  BerriesCountAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "_all"],
  BerriesAvgAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerriesSumAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerriesMinAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerriesMaxAggregate: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryFirmnessCount: ["berries"],
  BerryFirmnessCountAggregate: ["id", "identifier", "_all"],
  BerryFirmnessAvgAggregate: ["id"],
  BerryFirmnessSumAggregate: ["id"],
  BerryFirmnessMinAggregate: ["id", "identifier"],
  BerryFirmnessMaxAggregate: ["id", "identifier"],
  BerryFlavorsCountAggregate: ["berry_id", "contest_type_id", "flavor", "_all"],
  BerryFlavorsAvgAggregate: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorsSumAggregate: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorsMinAggregate: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorsMaxAggregate: ["berry_id", "contest_type_id", "flavor"],
  CharacteristicsCountAggregate: ["id", "stat_id", "gene_mod_5", "_all"],
  CharacteristicsAvgAggregate: ["id", "stat_id", "gene_mod_5"],
  CharacteristicsSumAggregate: ["id", "stat_id", "gene_mod_5"],
  CharacteristicsMinAggregate: ["id", "stat_id", "gene_mod_5"],
  CharacteristicsMaxAggregate: ["id", "stat_id", "gene_mod_5"],
  ContestCombosCountAggregate: ["first_move_id", "second_move_id", "_all"],
  ContestCombosAvgAggregate: ["first_move_id", "second_move_id"],
  ContestCombosSumAggregate: ["first_move_id", "second_move_id"],
  ContestCombosMinAggregate: ["first_move_id", "second_move_id"],
  ContestCombosMaxAggregate: ["first_move_id", "second_move_id"],
  SuperContestCombosCountAggregate: ["first_move_id", "second_move_id", "_all"],
  SuperContestCombosAvgAggregate: ["first_move_id", "second_move_id"],
  SuperContestCombosSumAggregate: ["first_move_id", "second_move_id"],
  SuperContestCombosMinAggregate: ["first_move_id", "second_move_id"],
  SuperContestCombosMaxAggregate: ["first_move_id", "second_move_id"],
  PokemonMoveMethodsCount: ["pokemonMoves", "versionGroups"],
  PokemonMoveMethodsCountAggregate: ["id", "identifier", "_all"],
  PokemonMoveMethodsAvgAggregate: ["id"],
  PokemonMoveMethodsSumAggregate: ["id"],
  PokemonMoveMethodsMinAggregate: ["id", "identifier"],
  PokemonMoveMethodsMaxAggregate: ["id", "identifier"],
  VersionGroupPokemonMoveMethodsCountAggregate: ["version_group_id", "pokemon_move_method_id", "_all"],
  VersionGroupPokemonMoveMethodsAvgAggregate: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodsSumAggregate: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodsMinAggregate: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodsMaxAggregate: ["version_group_id", "pokemon_move_method_id"],
  PokemonShapesCount: ["species"],
  PokemonShapesCountAggregate: ["id", "identifier", "_all"],
  PokemonShapesAvgAggregate: ["id"],
  PokemonShapesSumAggregate: ["id"],
  PokemonShapesMinAggregate: ["id", "identifier"],
  PokemonShapesMaxAggregate: ["id", "identifier"],
  PokemonColorsCount: ["species"],
  PokemonColorsCountAggregate: ["id", "identifier", "_all"],
  PokemonColorsAvgAggregate: ["id"],
  PokemonColorsSumAggregate: ["id"],
  PokemonColorsMinAggregate: ["id", "identifier"],
  PokemonColorsMaxAggregate: ["id", "identifier"],
  PokemonHabitatsCount: ["species"],
  PokemonHabitatsCountAggregate: ["id", "identifier", "_all"],
  PokemonHabitatsAvgAggregate: ["id"],
  PokemonHabitatsSumAggregate: ["id"],
  PokemonHabitatsMinAggregate: ["id", "identifier"],
  PokemonHabitatsMaxAggregate: ["id", "identifier"],
  TypeEfficacyCountAggregate: ["damage_type_id", "target_type_id", "damage_factor", "_all"],
  TypeEfficacyAvgAggregate: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacySumAggregate: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyMinAggregate: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyMaxAggregate: ["damage_type_id", "target_type_id", "damage_factor"],
  VersionGroupRegionsCountAggregate: ["version_group_id", "region_id", "_all"],
  VersionGroupRegionsAvgAggregate: ["version_group_id", "region_id"],
  VersionGroupRegionsSumAggregate: ["version_group_id", "region_id"],
  VersionGroupRegionsMinAggregate: ["version_group_id", "region_id"],
  VersionGroupRegionsMaxAggregate: ["version_group_id", "region_id"],
  PokedexVersionGroupsCountAggregate: ["pokedex_id", "version_group_id", "_all"],
  PokedexVersionGroupsAvgAggregate: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupsSumAggregate: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupsMinAggregate: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupsMaxAggregate: ["pokedex_id", "version_group_id"],
  PokemonAbilitiesCountAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot", "_all"],
  PokemonAbilitiesAvgAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitiesSumAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitiesMinAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitiesMaxAggregate: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMovesCountAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "_all"],
  PokemonMovesAvgAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMovesSumAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMovesMinAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMovesMaxAggregate: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStatsCountAggregate: ["pokemon_id", "stat_id", "base_stat", "effort", "_all"],
  PokemonStatsAvgAggregate: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatsSumAggregate: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatsMinAggregate: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatsMaxAggregate: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypesCountAggregate: ["pokemon_id", "type_id", "slot", "_all"],
  PokemonTypesAvgAggregate: ["pokemon_id", "type_id", "slot"],
  PokemonTypesSumAggregate: ["pokemon_id", "type_id", "slot"],
  PokemonTypesMinAggregate: ["pokemon_id", "type_id", "slot"],
  PokemonTypesMaxAggregate: ["pokemon_id", "type_id", "slot"],
  PokemonEggGroupsCountAggregate: ["species_id", "egg_group_id", "_all"],
  PokemonEggGroupsAvgAggregate: ["species_id", "egg_group_id"],
  PokemonEggGroupsSumAggregate: ["species_id", "egg_group_id"],
  PokemonEggGroupsMinAggregate: ["species_id", "egg_group_id"],
  PokemonEggGroupsMaxAggregate: ["species_id", "egg_group_id"],
  PokemonItemsCountAggregate: ["pokemon_id", "version_id", "item_id", "rarity", "_all"],
  PokemonItemsAvgAggregate: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemsSumAggregate: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemsMinAggregate: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemsMaxAggregate: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndicesCountAggregate: ["pokemon_id", "version_id", "game_index", "_all"],
  PokemonGameIndicesAvgAggregate: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndicesSumAggregate: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndicesMinAggregate: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndicesMaxAggregate: ["pokemon_id", "version_id", "game_index"],
  PokemonDexNumbersCountAggregate: ["species_id", "pokedex_id", "pokedex_number", "_all"],
  PokemonDexNumbersAvgAggregate: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumbersSumAggregate: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumbersMinAggregate: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumbersMaxAggregate: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonFormGenerationsCountAggregate: ["pokemon_form_id", "generation_id", "game_index", "_all"],
  PokemonFormGenerationsAvgAggregate: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationsSumAggregate: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationsMinAggregate: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationsMaxAggregate: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypesCountAggregate: ["pokemon_form_id", "type_id", "slot", "_all"],
  PokemonFormTypesAvgAggregate: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypesSumAggregate: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypesMinAggregate: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypesMaxAggregate: ["pokemon_form_id", "type_id", "slot"],
  TypeGameIndicesCountAggregate: ["type_id", "generation_id", "game_index", "_all"],
  TypeGameIndicesAvgAggregate: ["type_id", "generation_id", "game_index"],
  TypeGameIndicesSumAggregate: ["type_id", "generation_id", "game_index"],
  TypeGameIndicesMinAggregate: ["type_id", "generation_id", "game_index"],
  TypeGameIndicesMaxAggregate: ["type_id", "generation_id", "game_index"],
  ItemGameIndicesCountAggregate: ["item_id", "generation_id", "game_index", "_all"],
  ItemGameIndicesAvgAggregate: ["item_id", "generation_id", "game_index"],
  ItemGameIndicesSumAggregate: ["item_id", "generation_id", "game_index"],
  ItemGameIndicesMinAggregate: ["item_id", "generation_id", "game_index"],
  ItemGameIndicesMaxAggregate: ["item_id", "generation_id", "game_index"],
  LocationGameIndicesCountAggregate: ["location_id", "generation_id", "game_index", "_all"],
  LocationGameIndicesAvgAggregate: ["location_id", "generation_id", "game_index"],
  LocationGameIndicesSumAggregate: ["location_id", "generation_id", "game_index"],
  LocationGameIndicesMinAggregate: ["location_id", "generation_id", "game_index"],
  LocationGameIndicesMaxAggregate: ["location_id", "generation_id", "game_index"],
  LocationAreaEncounterRatesCountAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate", "_all"],
  LocationAreaEncounterRatesAvgAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRatesSumAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRatesMinAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRatesMaxAggregate: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  NatureBattleStylePreferencesCountAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "_all"],
  NatureBattleStylePreferencesAvgAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferencesSumAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferencesMinAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferencesMaxAggregate: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"]};

type OutputTypesNames = keyof typeof outputTypes;

type OutputTypeFieldNames<TOutput extends OutputTypesNames> = Exclude<
  keyof typeof outputTypes[TOutput]["prototype"],
  number | symbol
>;

type OutputTypeFieldsConfig<
  TOutput extends OutputTypesNames
> = FieldsConfig<OutputTypeFieldNames<TOutput>>;

export type OutputTypeConfig<TOutput extends OutputTypesNames> = {
  class?: ClassDecorator[];
  fields?: OutputTypeFieldsConfig<TOutput>;
};

export type OutputTypesEnhanceMap = {
  [TOutput in OutputTypesNames]?: OutputTypeConfig<TOutput>;
};

export function applyOutputTypesEnhanceMap(
  outputTypesEnhanceMap: OutputTypesEnhanceMap,
) {
  for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
    const outputTypeName = outputTypeEnhanceMapKey as keyof typeof outputTypesEnhanceMap;
    const typeConfig = outputTypesEnhanceMap[outputTypeName]!;
    const typeClass = outputTypes[outputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      outputsInfo[outputTypeName as keyof typeof outputsInfo],
    );
  }
}

const inputsInfo = {
  PokemonWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonOrderByWithRelationInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonOrderByWithAggregationInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSpeciesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesOrderByWithRelationInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesOrderByWithAggregationInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonSpeciesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonFormsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  PokemonFormsOrderByWithRelationInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  PokemonFormsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  PokemonFormsOrderByWithAggregationInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonFormsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  MovesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesOrderByWithRelationInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesOrderByWithAggregationInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id", "_count", "_avg", "_max", "_min", "_sum"],
  MovesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MoveEffectsWhereInput: ["AND", "OR", "NOT", "id", "moves"],
  MoveEffectsOrderByWithRelationInput: ["id", "moves"],
  MoveEffectsWhereUniqueInput: ["id", "AND", "OR", "NOT", "moves"],
  MoveEffectsOrderByWithAggregationInput: ["id", "_count", "_avg", "_max", "_min", "_sum"],
  MoveEffectsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id"],
  MoveTargetsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "moves"],
  MoveTargetsOrderByWithRelationInput: ["id", "identifier", "moves"],
  MoveTargetsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "moves"],
  MoveTargetsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveTargetsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  MoveDamageClassesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "moves", "types"],
  MoveDamageClassesOrderByWithRelationInput: ["id", "identifier", "moves", "types"],
  MoveDamageClassesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "moves", "types"],
  MoveDamageClassesOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveDamageClassesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  TypesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "damage_class_id", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesOrderByWithRelationInput: ["id", "identifier", "generation_id", "damage_class_id", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "damage_class_id", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesOrderByWithAggregationInput: ["id", "identifier", "generation_id", "damage_class_id", "_count", "_avg", "_max", "_min", "_sum"],
  TypesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "damage_class_id"],
  AbilitiesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "is_main_series", "generation", "pokemonAbilities"],
  AbilitiesOrderByWithRelationInput: ["id", "identifier", "generation_id", "is_main_series", "generation", "pokemonAbilities"],
  AbilitiesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "is_main_series", "generation", "pokemonAbilities"],
  AbilitiesOrderByWithAggregationInput: ["id", "identifier", "generation_id", "is_main_series", "_count", "_avg", "_max", "_min", "_sum"],
  AbilitiesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "is_main_series"],
  ItemsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsOrderByWithRelationInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsOrderByWithAggregationInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id", "_count", "_avg", "_max", "_min", "_sum"],
  ItemsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemCategoriesWhereInput: ["AND", "OR", "NOT", "id", "pocket_id", "identifier", "pocket", "items"],
  ItemCategoriesOrderByWithRelationInput: ["id", "pocket_id", "identifier", "pocket", "items"],
  ItemCategoriesWhereUniqueInput: ["id", "AND", "OR", "NOT", "pocket_id", "identifier", "pocket", "items"],
  ItemCategoriesOrderByWithAggregationInput: ["id", "pocket_id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ItemCategoriesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "pocket_id", "identifier"],
  ItemPocketsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "categories"],
  ItemPocketsOrderByWithRelationInput: ["id", "identifier", "categories"],
  ItemPocketsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "categories"],
  ItemPocketsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ItemPocketsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  StatsWhereInput: ["AND", "OR", "NOT", "id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatsOrderByWithRelationInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatsWhereUniqueInput: ["id", "AND", "OR", "NOT", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatsOrderByWithAggregationInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  StatsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  GenerationsWhereInput: ["AND", "OR", "NOT", "id", "main_region_id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsOrderByWithRelationInput: ["id", "main_region_id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsWhereUniqueInput: ["id", "AND", "OR", "NOT", "main_region_id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsOrderByWithAggregationInput: ["id", "main_region_id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  GenerationsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "main_region_id", "identifier"],
  VersionGroupsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsOrderByWithRelationInput: ["id", "identifier", "generation_id", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generation_id", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsOrderByWithAggregationInput: ["id", "identifier", "generation_id", "order", "_count", "_avg", "_max", "_min", "_sum"],
  VersionGroupsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "order"],
  VersionsWhereInput: ["AND", "OR", "NOT", "id", "version_group_id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionsOrderByWithRelationInput: ["id", "version_group_id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionsWhereUniqueInput: ["id", "AND", "OR", "NOT", "version_group_id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionsOrderByWithAggregationInput: ["id", "version_group_id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  VersionsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "version_group_id", "identifier"],
  RegionsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  RegionsOrderByWithRelationInput: ["id", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  RegionsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  RegionsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  RegionsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  LocationsWhereInput: ["AND", "OR", "NOT", "id", "region_id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationsOrderByWithRelationInput: ["id", "region_id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationsWhereUniqueInput: ["id", "AND", "OR", "NOT", "region_id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationsOrderByWithAggregationInput: ["id", "region_id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  LocationsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "region_id", "identifier"],
  LocationAreasWhereInput: ["AND", "OR", "NOT", "id", "location_id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  LocationAreasOrderByWithRelationInput: ["id", "location_id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  LocationAreasWhereUniqueInput: ["id", "AND", "OR", "NOT", "location_id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  LocationAreasOrderByWithAggregationInput: ["id", "location_id", "game_index", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  LocationAreasScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "location_id", "game_index", "identifier"],
  PokedexesWhereInput: ["AND", "OR", "NOT", "id", "region_id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  PokedexesOrderByWithRelationInput: ["id", "region_id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  PokedexesWhereUniqueInput: ["id", "AND", "OR", "NOT", "region_id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  PokedexesOrderByWithAggregationInput: ["id", "region_id", "identifier", "is_main_series", "_count", "_avg", "_max", "_min", "_sum"],
  PokedexesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "region_id", "identifier", "is_main_series"],
  EvolutionChainsWhereInput: ["AND", "OR", "NOT", "id", "baby_trigger_item_id", "babyTriggerItem", "species"],
  EvolutionChainsOrderByWithRelationInput: ["id", "baby_trigger_item_id", "babyTriggerItem", "species"],
  EvolutionChainsWhereUniqueInput: ["id", "AND", "OR", "NOT", "baby_trigger_item_id", "babyTriggerItem", "species"],
  EvolutionChainsOrderByWithAggregationInput: ["id", "baby_trigger_item_id", "_count", "_avg", "_max", "_min", "_sum"],
  EvolutionChainsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "baby_trigger_item_id"],
  EvolutionTriggersWhereInput: ["AND", "OR", "NOT", "id", "identifier", "evolution"],
  EvolutionTriggersOrderByWithRelationInput: ["id", "identifier", "evolution"],
  EvolutionTriggersWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "evolution"],
  EvolutionTriggersOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  EvolutionTriggersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  PokemonEvolutionWhereInput: ["AND", "OR", "NOT", "id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionOrderByWithRelationInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionWhereUniqueInput: ["id", "AND", "OR", "NOT", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionOrderByWithAggregationInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonEvolutionScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  GrowthRatesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "formula", "species", "experience"],
  GrowthRatesOrderByWithRelationInput: ["id", "identifier", "formula", "species", "experience"],
  GrowthRatesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "formula", "species", "experience"],
  GrowthRatesOrderByWithAggregationInput: ["id", "identifier", "formula", "_count", "_avg", "_max", "_min", "_sum"],
  GrowthRatesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "formula"],
  ExperienceWhereInput: ["AND", "OR", "NOT", "growth_rate_id", "level", "experience", "growthRate"],
  ExperienceOrderByWithRelationInput: ["growth_rate_id", "level", "experience", "growthRate"],
  ExperienceWhereUniqueInput: ["growth_rate_id_level", "AND", "OR", "NOT", "growth_rate_id", "level", "experience", "growthRate"],
  ExperienceOrderByWithAggregationInput: ["growth_rate_id", "level", "experience", "_count", "_avg", "_max", "_min", "_sum"],
  ExperienceScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "growth_rate_id", "level", "experience"],
  GendersWhereInput: ["AND", "OR", "NOT", "id", "identifier", "evolution"],
  GendersOrderByWithRelationInput: ["id", "identifier", "evolution"],
  GendersWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "evolution"],
  GendersOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  GendersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  LanguagesWhereInput: ["AND", "OR", "NOT", "id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguagesOrderByWithRelationInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguagesWhereUniqueInput: ["id", "AND", "OR", "NOT", "iso639", "iso3166", "identifier", "official", "order"],
  LanguagesOrderByWithAggregationInput: ["id", "iso639", "iso3166", "identifier", "official", "order", "_count", "_avg", "_max", "_min", "_sum"],
  LanguagesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "iso639", "iso3166", "identifier", "official", "order"],
  EggGroupsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species"],
  EggGroupsOrderByWithRelationInput: ["id", "identifier", "species"],
  EggGroupsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species"],
  EggGroupsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  EggGroupsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  NaturesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NaturesOrderByWithRelationInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NaturesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NaturesOrderByWithAggregationInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  NaturesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  ContestTypesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "moves", "berryFlavors"],
  ContestTypesOrderByWithRelationInput: ["id", "identifier", "moves", "berryFlavors"],
  ContestTypesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "moves", "berryFlavors"],
  ContestTypesOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ContestTypesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  ContestEffectsWhereInput: ["AND", "OR", "NOT", "id", "appeal", "jam", "moves"],
  ContestEffectsOrderByWithRelationInput: ["id", "appeal", "jam", "moves"],
  ContestEffectsWhereUniqueInput: ["id", "AND", "OR", "NOT", "appeal", "jam", "moves"],
  ContestEffectsOrderByWithAggregationInput: ["id", "appeal", "jam", "_count", "_avg", "_max", "_min", "_sum"],
  ContestEffectsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "appeal", "jam"],
  SuperContestEffectsWhereInput: ["AND", "OR", "NOT", "id", "appeal", "moves"],
  SuperContestEffectsOrderByWithRelationInput: ["id", "appeal", "moves"],
  SuperContestEffectsWhereUniqueInput: ["id", "AND", "OR", "NOT", "appeal", "moves"],
  SuperContestEffectsOrderByWithAggregationInput: ["id", "appeal", "_count", "_avg", "_max", "_min", "_sum"],
  SuperContestEffectsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "appeal"],
  MachinesWhereInput: ["AND", "OR", "NOT", "machine_number", "version_group_id", "item_id", "move_id", "versionGroup", "item", "move"],
  MachinesOrderByWithRelationInput: ["machine_number", "version_group_id", "item_id", "move_id", "versionGroup", "item", "move"],
  MachinesWhereUniqueInput: ["machine_number_version_group_id", "AND", "OR", "NOT", "machine_number", "version_group_id", "item_id", "move_id", "versionGroup", "item", "move"],
  MachinesOrderByWithAggregationInput: ["machine_number", "version_group_id", "item_id", "move_id", "_count", "_avg", "_max", "_min", "_sum"],
  MachinesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "machine_number", "version_group_id", "item_id", "move_id"],
  EncounterMethodsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "order", "slots", "encounterRates"],
  EncounterMethodsOrderByWithRelationInput: ["id", "identifier", "order", "slots", "encounterRates"],
  EncounterMethodsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "order", "slots", "encounterRates"],
  EncounterMethodsOrderByWithAggregationInput: ["id", "identifier", "order", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterMethodsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier", "order"],
  EncounterSlotsWhereInput: ["AND", "OR", "NOT", "id", "version_group_id", "encounter_method_id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterSlotsOrderByWithRelationInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterSlotsWhereUniqueInput: ["id", "AND", "OR", "NOT", "version_group_id", "encounter_method_id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterSlotsOrderByWithAggregationInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterSlotsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncountersWhereInput: ["AND", "OR", "NOT", "id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncountersOrderByWithRelationInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncountersWhereUniqueInput: ["id", "AND", "OR", "NOT", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncountersOrderByWithAggregationInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level", "_count", "_avg", "_max", "_min", "_sum"],
  EncountersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterConditionsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "values"],
  EncounterConditionsOrderByWithRelationInput: ["id", "identifier", "values"],
  EncounterConditionsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "values"],
  EncounterConditionsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterConditionsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  EncounterConditionValuesWhereInput: ["AND", "OR", "NOT", "id", "encounter_condition_id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValuesOrderByWithRelationInput: ["id", "encounter_condition_id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValuesWhereUniqueInput: ["id", "AND", "OR", "NOT", "encounter_condition_id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValuesOrderByWithAggregationInput: ["id", "encounter_condition_id", "identifier", "is_default", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterConditionValuesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValueMapWhereInput: ["AND", "OR", "NOT", "encounter_id", "encounter_condition_value_id", "encounter", "conditionValue"],
  EncounterConditionValueMapOrderByWithRelationInput: ["encounter_id", "encounter_condition_value_id", "encounter", "conditionValue"],
  EncounterConditionValueMapWhereUniqueInput: ["encounter_id", "AND", "OR", "NOT", "encounter_condition_value_id", "encounter", "conditionValue"],
  EncounterConditionValueMapOrderByWithAggregationInput: ["encounter_id", "encounter_condition_value_id", "_count", "_avg", "_max", "_min", "_sum"],
  EncounterConditionValueMapScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "encounter_id", "encounter_condition_value_id"],
  MoveMetaCategoriesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "meta"],
  MoveMetaCategoriesOrderByWithRelationInput: ["id", "identifier", "meta"],
  MoveMetaCategoriesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "meta"],
  MoveMetaCategoriesOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveMetaCategoriesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  MoveMetaAilmentsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "meta"],
  MoveMetaAilmentsOrderByWithRelationInput: ["id", "identifier", "meta"],
  MoveMetaAilmentsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "meta"],
  MoveMetaAilmentsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveMetaAilmentsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  MoveMetaWhereInput: ["AND", "OR", "NOT", "move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaOrderByWithRelationInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaWhereUniqueInput: ["move_id", "AND", "OR", "NOT", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaOrderByWithAggregationInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "_count", "_avg", "_max", "_min", "_sum"],
  MoveMetaScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaStatChangesWhereInput: ["AND", "OR", "NOT", "move_id", "stat_id", "change", "move", "stat", "meta"],
  MoveMetaStatChangesOrderByWithRelationInput: ["move_id", "stat_id", "change", "move", "stat", "meta"],
  MoveMetaStatChangesWhereUniqueInput: ["move_id_stat_id", "AND", "OR", "NOT", "move_id", "stat_id", "change", "move", "stat", "meta"],
  MoveMetaStatChangesOrderByWithAggregationInput: ["move_id", "stat_id", "change", "_count", "_avg", "_max", "_min", "_sum"],
  MoveMetaStatChangesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "move_id", "stat_id", "change"],
  MoveFlagsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "flagMap"],
  MoveFlagsOrderByWithRelationInput: ["id", "identifier", "flagMap"],
  MoveFlagsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "flagMap"],
  MoveFlagsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveFlagsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  MoveFlagMapWhereInput: ["AND", "OR", "NOT", "move_id", "move_flag_id", "move", "flag"],
  MoveFlagMapOrderByWithRelationInput: ["move_id", "move_flag_id", "move", "flag"],
  MoveFlagMapWhereUniqueInput: ["move_id", "AND", "OR", "NOT", "move_flag_id", "move", "flag"],
  MoveFlagMapOrderByWithAggregationInput: ["move_id", "move_flag_id", "_count", "_avg", "_max", "_min", "_sum"],
  MoveFlagMapScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "move_id", "move_flag_id"],
  MoveBattleStylesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "naturePreferences"],
  MoveBattleStylesOrderByWithRelationInput: ["id", "identifier", "naturePreferences"],
  MoveBattleStylesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "naturePreferences"],
  MoveBattleStylesOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  MoveBattleStylesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  ItemFlagsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "flagMap"],
  ItemFlagsOrderByWithRelationInput: ["id", "identifier", "flagMap"],
  ItemFlagsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "flagMap"],
  ItemFlagsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ItemFlagsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  ItemFlagMapWhereInput: ["AND", "OR", "NOT", "item_id", "item_flag_id", "item", "flag"],
  ItemFlagMapOrderByWithRelationInput: ["item_id", "item_flag_id", "item", "flag"],
  ItemFlagMapWhereUniqueInput: ["item_id", "AND", "OR", "NOT", "item_flag_id", "item", "flag"],
  ItemFlagMapOrderByWithAggregationInput: ["item_id", "item_flag_id", "_count", "_avg", "_max", "_min", "_sum"],
  ItemFlagMapScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "item_id", "item_flag_id"],
  ItemFlingEffectsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "items"],
  ItemFlingEffectsOrderByWithRelationInput: ["id", "identifier", "items"],
  ItemFlingEffectsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "items"],
  ItemFlingEffectsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  ItemFlingEffectsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  BerriesWhereInput: ["AND", "OR", "NOT", "id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerriesOrderByWithRelationInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerriesWhereUniqueInput: ["id", "AND", "OR", "NOT", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerriesOrderByWithAggregationInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "_count", "_avg", "_max", "_min", "_sum"],
  BerriesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryFirmnessWhereInput: ["AND", "OR", "NOT", "id", "identifier", "berries"],
  BerryFirmnessOrderByWithRelationInput: ["id", "identifier", "berries"],
  BerryFirmnessWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "berries"],
  BerryFirmnessOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  BerryFirmnessScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  BerryFlavorsWhereInput: ["AND", "OR", "NOT", "berry_id", "contest_type_id", "flavor", "berry", "contestType", "type"],
  BerryFlavorsOrderByWithRelationInput: ["berry_id", "contest_type_id", "flavor", "berry", "contestType", "type"],
  BerryFlavorsWhereUniqueInput: ["berry_id_contest_type_id", "AND", "OR", "NOT", "berry_id", "contest_type_id", "flavor", "berry", "contestType", "type"],
  BerryFlavorsOrderByWithAggregationInput: ["berry_id", "contest_type_id", "flavor", "_count", "_avg", "_max", "_min", "_sum"],
  BerryFlavorsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "berry_id", "contest_type_id", "flavor"],
  CharacteristicsWhereInput: ["AND", "OR", "NOT", "id", "stat_id", "gene_mod_5", "stat"],
  CharacteristicsOrderByWithRelationInput: ["id", "stat_id", "gene_mod_5", "stat"],
  CharacteristicsWhereUniqueInput: ["id", "AND", "OR", "NOT", "stat_id", "gene_mod_5", "stat"],
  CharacteristicsOrderByWithAggregationInput: ["id", "stat_id", "gene_mod_5", "_count", "_avg", "_max", "_min", "_sum"],
  CharacteristicsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "stat_id", "gene_mod_5"],
  ContestCombosWhereInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id", "firstMove", "secondMove"],
  ContestCombosOrderByWithRelationInput: ["first_move_id", "second_move_id", "firstMove", "secondMove"],
  ContestCombosWhereUniqueInput: ["first_move_id", "AND", "OR", "NOT", "second_move_id", "firstMove", "secondMove"],
  ContestCombosOrderByWithAggregationInput: ["first_move_id", "second_move_id", "_count", "_avg", "_max", "_min", "_sum"],
  ContestCombosScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id"],
  SuperContestCombosWhereInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id", "firstMove", "secondMove"],
  SuperContestCombosOrderByWithRelationInput: ["first_move_id", "second_move_id", "firstMove", "secondMove"],
  SuperContestCombosWhereUniqueInput: ["first_move_id", "AND", "OR", "NOT", "second_move_id", "firstMove", "secondMove"],
  SuperContestCombosOrderByWithAggregationInput: ["first_move_id", "second_move_id", "_count", "_avg", "_max", "_min", "_sum"],
  SuperContestCombosScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id"],
  PokemonMoveMethodsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "pokemonMoves", "versionGroups"],
  PokemonMoveMethodsOrderByWithRelationInput: ["id", "identifier", "pokemonMoves", "versionGroups"],
  PokemonMoveMethodsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "pokemonMoves", "versionGroups"],
  PokemonMoveMethodsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonMoveMethodsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  VersionGroupPokemonMoveMethodsWhereInput: ["AND", "OR", "NOT", "version_group_id", "pokemon_move_method_id", "versionGroup", "moveMethod"],
  VersionGroupPokemonMoveMethodsOrderByWithRelationInput: ["version_group_id", "pokemon_move_method_id", "versionGroup", "moveMethod"],
  VersionGroupPokemonMoveMethodsWhereUniqueInput: ["version_group_id", "AND", "OR", "NOT", "pokemon_move_method_id", "versionGroup", "moveMethod"],
  VersionGroupPokemonMoveMethodsOrderByWithAggregationInput: ["version_group_id", "pokemon_move_method_id", "_count", "_avg", "_max", "_min", "_sum"],
  VersionGroupPokemonMoveMethodsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "version_group_id", "pokemon_move_method_id"],
  PokemonShapesWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species"],
  PokemonShapesOrderByWithRelationInput: ["id", "identifier", "species"],
  PokemonShapesWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species"],
  PokemonShapesOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonShapesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  PokemonColorsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species"],
  PokemonColorsOrderByWithRelationInput: ["id", "identifier", "species"],
  PokemonColorsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species"],
  PokemonColorsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonColorsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  PokemonHabitatsWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species"],
  PokemonHabitatsOrderByWithRelationInput: ["id", "identifier", "species"],
  PokemonHabitatsWhereUniqueInput: ["id", "AND", "OR", "NOT", "identifier", "species"],
  PokemonHabitatsOrderByWithAggregationInput: ["id", "identifier", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonHabitatsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "identifier"],
  TypeEfficacyWhereInput: ["AND", "OR", "NOT", "damage_type_id", "target_type_id", "damage_factor", "damageType", "targetType"],
  TypeEfficacyOrderByWithRelationInput: ["damage_type_id", "target_type_id", "damage_factor", "damageType", "targetType"],
  TypeEfficacyWhereUniqueInput: ["damage_type_id_target_type_id", "AND", "OR", "NOT", "damage_type_id", "target_type_id", "damage_factor", "damageType", "targetType"],
  TypeEfficacyOrderByWithAggregationInput: ["damage_type_id", "target_type_id", "damage_factor", "_count", "_avg", "_max", "_min", "_sum"],
  TypeEfficacyScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "damage_type_id", "target_type_id", "damage_factor"],
  VersionGroupRegionsWhereInput: ["AND", "OR", "NOT", "version_group_id", "region_id", "versionGroup", "region"],
  VersionGroupRegionsOrderByWithRelationInput: ["version_group_id", "region_id", "versionGroup", "region"],
  VersionGroupRegionsWhereUniqueInput: ["version_group_id", "AND", "OR", "NOT", "region_id", "versionGroup", "region"],
  VersionGroupRegionsOrderByWithAggregationInput: ["version_group_id", "region_id", "_count", "_avg", "_max", "_min", "_sum"],
  VersionGroupRegionsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "version_group_id", "region_id"],
  PokedexVersionGroupsWhereInput: ["AND", "OR", "NOT", "pokedex_id", "version_group_id", "pokedex", "versionGroup"],
  PokedexVersionGroupsOrderByWithRelationInput: ["pokedex_id", "version_group_id", "pokedex", "versionGroup"],
  PokedexVersionGroupsWhereUniqueInput: ["pokedex_id", "AND", "OR", "NOT", "version_group_id", "pokedex", "versionGroup"],
  PokedexVersionGroupsOrderByWithAggregationInput: ["pokedex_id", "version_group_id", "_count", "_avg", "_max", "_min", "_sum"],
  PokedexVersionGroupsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokedex_id", "version_group_id"],
  PokemonAbilitiesWhereInput: ["AND", "OR", "NOT", "pokemon_id", "ability_id", "is_hidden", "slot", "pokemon", "ability"],
  PokemonAbilitiesOrderByWithRelationInput: ["pokemon_id", "ability_id", "is_hidden", "slot", "pokemon", "ability"],
  PokemonAbilitiesWhereUniqueInput: ["pokemon_id_ability_id", "AND", "OR", "NOT", "pokemon_id", "ability_id", "is_hidden", "slot", "pokemon", "ability"],
  PokemonAbilitiesOrderByWithAggregationInput: ["pokemon_id", "ability_id", "is_hidden", "slot", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonAbilitiesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMovesWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonMovesOrderByWithRelationInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonMovesWhereUniqueInput: ["pokemon_id_version_group_id_move_id_pokemon_move_method_id", "AND", "OR", "NOT", "pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonMovesOrderByWithAggregationInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonMovesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStatsWhereInput: ["AND", "OR", "NOT", "pokemon_id", "stat_id", "base_stat", "effort", "pokemon", "stat"],
  PokemonStatsOrderByWithRelationInput: ["pokemon_id", "stat_id", "base_stat", "effort", "pokemon", "stat"],
  PokemonStatsWhereUniqueInput: ["pokemon_id_stat_id", "AND", "OR", "NOT", "pokemon_id", "stat_id", "base_stat", "effort", "pokemon", "stat"],
  PokemonStatsOrderByWithAggregationInput: ["pokemon_id", "stat_id", "base_stat", "effort", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonStatsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypesWhereInput: ["AND", "OR", "NOT", "pokemon_id", "type_id", "slot", "pokemon", "type"],
  PokemonTypesOrderByWithRelationInput: ["pokemon_id", "type_id", "slot", "pokemon", "type"],
  PokemonTypesWhereUniqueInput: ["pokemon_id_type_id", "AND", "OR", "NOT", "pokemon_id", "type_id", "slot", "pokemon", "type"],
  PokemonTypesOrderByWithAggregationInput: ["pokemon_id", "type_id", "slot", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonTypesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "type_id", "slot"],
  PokemonEggGroupsWhereInput: ["AND", "OR", "NOT", "species_id", "egg_group_id", "species", "eggGroup"],
  PokemonEggGroupsOrderByWithRelationInput: ["species_id", "egg_group_id", "species", "eggGroup"],
  PokemonEggGroupsWhereUniqueInput: ["species_id_egg_group_id", "AND", "OR", "NOT", "species_id", "egg_group_id", "species", "eggGroup"],
  PokemonEggGroupsOrderByWithAggregationInput: ["species_id", "egg_group_id", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonEggGroupsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "species_id", "egg_group_id"],
  PokemonItemsWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "item_id", "rarity", "pokemon", "version", "item"],
  PokemonItemsOrderByWithRelationInput: ["pokemon_id", "version_id", "item_id", "rarity", "pokemon", "version", "item"],
  PokemonItemsWhereUniqueInput: ["pokemon_id_version_id_item_id", "AND", "OR", "NOT", "pokemon_id", "version_id", "item_id", "rarity", "pokemon", "version", "item"],
  PokemonItemsOrderByWithAggregationInput: ["pokemon_id", "version_id", "item_id", "rarity", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonItemsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndicesWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "game_index", "pokemon", "version"],
  PokemonGameIndicesOrderByWithRelationInput: ["pokemon_id", "version_id", "game_index", "pokemon", "version"],
  PokemonGameIndicesWhereUniqueInput: ["pokemon_id_version_id", "AND", "OR", "NOT", "pokemon_id", "version_id", "game_index", "pokemon", "version"],
  PokemonGameIndicesOrderByWithAggregationInput: ["pokemon_id", "version_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonGameIndicesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "game_index"],
  PokemonDexNumbersWhereInput: ["AND", "OR", "NOT", "species_id", "pokedex_id", "pokedex_number", "species", "pokedex"],
  PokemonDexNumbersOrderByWithRelationInput: ["species_id", "pokedex_id", "pokedex_number", "species", "pokedex"],
  PokemonDexNumbersWhereUniqueInput: ["species_id_pokedex_id", "AND", "OR", "NOT", "species_id", "pokedex_id", "pokedex_number", "species", "pokedex"],
  PokemonDexNumbersOrderByWithAggregationInput: ["species_id", "pokedex_id", "pokedex_number", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonDexNumbersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "species_id", "pokedex_id", "pokedex_number"],
  PokemonFormGenerationsWhereInput: ["AND", "OR", "NOT", "pokemon_form_id", "generation_id", "game_index", "pokemonForm", "generation"],
  PokemonFormGenerationsOrderByWithRelationInput: ["pokemon_form_id", "generation_id", "game_index", "pokemonForm", "generation"],
  PokemonFormGenerationsWhereUniqueInput: ["pokemon_form_id_generation_id", "AND", "OR", "NOT", "pokemon_form_id", "generation_id", "game_index", "pokemonForm", "generation"],
  PokemonFormGenerationsOrderByWithAggregationInput: ["pokemon_form_id", "generation_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonFormGenerationsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypesWhereInput: ["AND", "OR", "NOT", "pokemon_form_id", "type_id", "slot", "pokemonForm", "type"],
  PokemonFormTypesOrderByWithRelationInput: ["pokemon_form_id", "type_id", "slot", "pokemonForm", "type"],
  PokemonFormTypesWhereUniqueInput: ["pokemon_form_id_type_id", "AND", "OR", "NOT", "pokemon_form_id", "type_id", "slot", "pokemonForm", "type"],
  PokemonFormTypesOrderByWithAggregationInput: ["pokemon_form_id", "type_id", "slot", "_count", "_avg", "_max", "_min", "_sum"],
  PokemonFormTypesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "pokemon_form_id", "type_id", "slot"],
  TypeGameIndicesWhereInput: ["AND", "OR", "NOT", "type_id", "generation_id", "game_index", "type", "generation"],
  TypeGameIndicesOrderByWithRelationInput: ["type_id", "generation_id", "game_index", "type", "generation"],
  TypeGameIndicesWhereUniqueInput: ["type_id_generation_id", "AND", "OR", "NOT", "type_id", "generation_id", "game_index", "type", "generation"],
  TypeGameIndicesOrderByWithAggregationInput: ["type_id", "generation_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  TypeGameIndicesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "type_id", "generation_id", "game_index"],
  ItemGameIndicesWhereInput: ["AND", "OR", "NOT", "item_id", "generation_id", "game_index", "item", "generation"],
  ItemGameIndicesOrderByWithRelationInput: ["item_id", "generation_id", "game_index", "item", "generation"],
  ItemGameIndicesWhereUniqueInput: ["item_id_generation_id", "AND", "OR", "NOT", "item_id", "generation_id", "game_index", "item", "generation"],
  ItemGameIndicesOrderByWithAggregationInput: ["item_id", "generation_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  ItemGameIndicesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "item_id", "generation_id", "game_index"],
  LocationGameIndicesWhereInput: ["AND", "OR", "NOT", "location_id", "generation_id", "game_index", "location", "generation"],
  LocationGameIndicesOrderByWithRelationInput: ["location_id", "generation_id", "game_index", "location", "generation"],
  LocationGameIndicesWhereUniqueInput: ["location_id_generation_id", "AND", "OR", "NOT", "location_id", "generation_id", "game_index", "location", "generation"],
  LocationGameIndicesOrderByWithAggregationInput: ["location_id", "generation_id", "game_index", "_count", "_avg", "_max", "_min", "_sum"],
  LocationGameIndicesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "location_id", "generation_id", "game_index"],
  LocationAreaEncounterRatesWhereInput: ["AND", "OR", "NOT", "location_area_id", "encounter_method_id", "version_id", "rate", "locationArea", "encounterMethod", "version"],
  LocationAreaEncounterRatesOrderByWithRelationInput: ["location_area_id", "encounter_method_id", "version_id", "rate", "locationArea", "encounterMethod", "version"],
  LocationAreaEncounterRatesWhereUniqueInput: ["location_area_id_encounter_method_id_version_id", "AND", "OR", "NOT", "location_area_id", "encounter_method_id", "version_id", "rate", "locationArea", "encounterMethod", "version"],
  LocationAreaEncounterRatesOrderByWithAggregationInput: ["location_area_id", "encounter_method_id", "version_id", "rate", "_count", "_avg", "_max", "_min", "_sum"],
  LocationAreaEncounterRatesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "location_area_id", "encounter_method_id", "version_id", "rate"],
  NatureBattleStylePreferencesWhereInput: ["AND", "OR", "NOT", "nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  NatureBattleStylePreferencesOrderByWithRelationInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  NatureBattleStylePreferencesWhereUniqueInput: ["nature_id", "AND", "OR", "NOT", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  NatureBattleStylePreferencesOrderByWithAggregationInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference", "_count", "_avg", "_max", "_min", "_sum"],
  NatureBattleStylePreferencesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  PokemonCreateInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonUpdateInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonSpeciesCreateInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesUpdateInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonFormsCreateInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  PokemonFormsUpdateInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations", "types"],
  MovesCreateInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesUpdateInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveEffectsCreateInput: ["id", "moves"],
  MoveEffectsUpdateInput: ["id", "moves"],
  MoveTargetsCreateInput: ["id", "identifier", "moves"],
  MoveTargetsUpdateInput: ["id", "identifier", "moves"],
  MoveDamageClassesCreateInput: ["id", "identifier", "moves", "types"],
  MoveDamageClassesUpdateInput: ["id", "identifier", "moves", "types"],
  TypesCreateInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesUpdateInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  AbilitiesCreateInput: ["id", "identifier", "is_main_series", "generation", "pokemonAbilities"],
  AbilitiesUpdateInput: ["id", "identifier", "is_main_series", "generation", "pokemonAbilities"],
  ItemsCreateInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsUpdateInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCategoriesCreateInput: ["id", "identifier", "pocket", "items"],
  ItemCategoriesUpdateInput: ["id", "identifier", "pocket", "items"],
  ItemPocketsCreateInput: ["id", "identifier", "categories"],
  ItemPocketsUpdateInput: ["id", "identifier", "categories"],
  StatsCreateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatsUpdateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  GenerationsCreateInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsUpdateInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  VersionGroupsCreateInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsUpdateInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionsCreateInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionsUpdateInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  RegionsCreateInput: ["id", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  RegionsUpdateInput: ["id", "identifier", "generations", "locations", "pokedexes", "versionGroups"],
  LocationsCreateInput: ["id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationsUpdateInput: ["id", "identifier", "region", "areas", "gameIndices", "evolution"],
  LocationAreasCreateInput: ["id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  LocationAreasUpdateInput: ["id", "game_index", "identifier", "location", "encounters", "encounterRates"],
  PokedexesCreateInput: ["id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  PokedexesUpdateInput: ["id", "identifier", "is_main_series", "region", "dexNumbers", "versionGroups"],
  EvolutionChainsCreateInput: ["id", "babyTriggerItem", "species"],
  EvolutionChainsUpdateInput: ["id", "babyTriggerItem", "species"],
  EvolutionTriggersCreateInput: ["id", "identifier", "evolution"],
  EvolutionTriggersUpdateInput: ["id", "identifier", "evolution"],
  PokemonEvolutionCreateInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  GrowthRatesCreateInput: ["id", "identifier", "formula", "species", "experience"],
  GrowthRatesUpdateInput: ["id", "identifier", "formula", "species", "experience"],
  ExperienceCreateInput: ["level", "experience", "growthRate"],
  ExperienceUpdateInput: ["level", "experience", "growthRate"],
  GendersCreateInput: ["id", "identifier", "evolution"],
  GendersUpdateInput: ["id", "identifier", "evolution"],
  LanguagesCreateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguagesUpdateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  EggGroupsCreateInput: ["id", "identifier", "species"],
  EggGroupsUpdateInput: ["id", "identifier", "species"],
  NaturesCreateInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NaturesUpdateInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  ContestTypesCreateInput: ["id", "identifier", "moves", "berryFlavors"],
  ContestTypesUpdateInput: ["id", "identifier", "moves", "berryFlavors"],
  ContestEffectsCreateInput: ["id", "appeal", "jam", "moves"],
  ContestEffectsUpdateInput: ["id", "appeal", "jam", "moves"],
  SuperContestEffectsCreateInput: ["id", "appeal", "moves"],
  SuperContestEffectsUpdateInput: ["id", "appeal", "moves"],
  MachinesCreateInput: ["machine_number", "versionGroup", "item", "move"],
  MachinesUpdateInput: ["machine_number", "versionGroup", "item", "move"],
  EncounterMethodsCreateInput: ["id", "identifier", "order", "slots", "encounterRates"],
  EncounterMethodsUpdateInput: ["id", "identifier", "order", "slots", "encounterRates"],
  EncounterSlotsCreateInput: ["id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncounterSlotsUpdateInput: ["id", "slot", "rarity", "versionGroup", "encounterMethod", "encounters"],
  EncountersCreateInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncountersUpdateInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncounterConditionsCreateInput: ["id", "identifier", "values"],
  EncounterConditionsUpdateInput: ["id", "identifier", "values"],
  EncounterConditionValuesCreateInput: ["id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValuesUpdateInput: ["id", "identifier", "is_default", "condition", "conditionValueMap"],
  EncounterConditionValueMapCreateInput: ["encounter", "conditionValue"],
  EncounterConditionValueMapUpdateInput: ["encounter", "conditionValue"],
  MoveMetaCategoriesCreateInput: ["id", "identifier", "meta"],
  MoveMetaCategoriesUpdateInput: ["id", "identifier", "meta"],
  MoveMetaAilmentsCreateInput: ["id", "identifier", "meta"],
  MoveMetaAilmentsUpdateInput: ["id", "identifier", "meta"],
  MoveMetaCreateInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaUpdateInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaStatChangesCreateInput: ["change", "move", "stat", "meta"],
  MoveMetaStatChangesUpdateInput: ["change", "move", "stat", "meta"],
  MoveFlagsCreateInput: ["id", "identifier", "flagMap"],
  MoveFlagsUpdateInput: ["id", "identifier", "flagMap"],
  MoveFlagMapCreateInput: ["move", "flag"],
  MoveFlagMapUpdateInput: ["move", "flag"],
  MoveBattleStylesCreateInput: ["id", "identifier", "naturePreferences"],
  MoveBattleStylesUpdateInput: ["id", "identifier", "naturePreferences"],
  ItemFlagsCreateInput: ["id", "identifier", "flagMap"],
  ItemFlagsUpdateInput: ["id", "identifier", "flagMap"],
  ItemFlagMapCreateInput: ["item", "flag"],
  ItemFlagMapUpdateInput: ["item", "flag"],
  ItemFlingEffectsCreateInput: ["id", "identifier", "items"],
  ItemFlingEffectsUpdateInput: ["id", "identifier", "items"],
  BerriesCreateInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerriesUpdateInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType", "flavors"],
  BerryFirmnessCreateInput: ["id", "identifier", "berries"],
  BerryFirmnessUpdateInput: ["id", "identifier", "berries"],
  BerryFlavorsCreateInput: ["flavor", "berry", "contestType", "type"],
  BerryFlavorsUpdateInput: ["flavor", "berry", "contestType", "type"],
  CharacteristicsCreateInput: ["id", "gene_mod_5", "stat"],
  CharacteristicsUpdateInput: ["id", "gene_mod_5", "stat"],
  ContestCombosCreateInput: ["firstMove", "secondMove"],
  ContestCombosUpdateInput: ["firstMove", "secondMove"],
  SuperContestCombosCreateInput: ["firstMove", "secondMove"],
  SuperContestCombosUpdateInput: ["firstMove", "secondMove"],
  PokemonMoveMethodsCreateInput: ["id", "identifier", "pokemonMoves", "versionGroups"],
  PokemonMoveMethodsUpdateInput: ["id", "identifier", "pokemonMoves", "versionGroups"],
  VersionGroupPokemonMoveMethodsCreateInput: ["versionGroup", "moveMethod"],
  VersionGroupPokemonMoveMethodsUpdateInput: ["versionGroup", "moveMethod"],
  PokemonShapesCreateInput: ["id", "identifier", "species"],
  PokemonShapesUpdateInput: ["id", "identifier", "species"],
  PokemonColorsCreateInput: ["id", "identifier", "species"],
  PokemonColorsUpdateInput: ["id", "identifier", "species"],
  PokemonHabitatsCreateInput: ["id", "identifier", "species"],
  PokemonHabitatsUpdateInput: ["id", "identifier", "species"],
  TypeEfficacyCreateInput: ["damage_factor", "damageType", "targetType"],
  TypeEfficacyUpdateInput: ["damage_factor", "damageType", "targetType"],
  VersionGroupRegionsCreateInput: ["versionGroup", "region"],
  VersionGroupRegionsUpdateInput: ["versionGroup", "region"],
  PokedexVersionGroupsCreateInput: ["pokedex", "versionGroup"],
  PokedexVersionGroupsUpdateInput: ["pokedex", "versionGroup"],
  PokemonAbilitiesCreateInput: ["is_hidden", "slot", "pokemon", "ability"],
  PokemonAbilitiesUpdateInput: ["is_hidden", "slot", "pokemon", "ability"],
  PokemonMovesCreateInput: ["level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonMovesUpdateInput: ["level", "order", "mastery", "pokemon", "versionGroup", "move", "moveMethod"],
  PokemonStatsCreateInput: ["base_stat", "effort", "pokemon", "stat"],
  PokemonStatsUpdateInput: ["base_stat", "effort", "pokemon", "stat"],
  PokemonTypesCreateInput: ["slot", "pokemon", "type"],
  PokemonTypesUpdateInput: ["slot", "pokemon", "type"],
  PokemonEggGroupsCreateInput: ["species", "eggGroup"],
  PokemonEggGroupsUpdateInput: ["species", "eggGroup"],
  PokemonItemsCreateInput: ["rarity", "pokemon", "version", "item"],
  PokemonItemsUpdateInput: ["rarity", "pokemon", "version", "item"],
  PokemonGameIndicesCreateInput: ["game_index", "pokemon", "version"],
  PokemonGameIndicesUpdateInput: ["game_index", "pokemon", "version"],
  PokemonDexNumbersCreateInput: ["pokedex_number", "species", "pokedex"],
  PokemonDexNumbersUpdateInput: ["pokedex_number", "species", "pokedex"],
  PokemonFormGenerationsCreateInput: ["game_index", "pokemonForm", "generation"],
  PokemonFormGenerationsUpdateInput: ["game_index", "pokemonForm", "generation"],
  PokemonFormTypesCreateInput: ["slot", "pokemonForm", "type"],
  PokemonFormTypesUpdateInput: ["slot", "pokemonForm", "type"],
  TypeGameIndicesCreateInput: ["game_index", "type", "generation"],
  TypeGameIndicesUpdateInput: ["game_index", "type", "generation"],
  ItemGameIndicesCreateInput: ["game_index", "item", "generation"],
  ItemGameIndicesUpdateInput: ["game_index", "item", "generation"],
  LocationGameIndicesCreateInput: ["game_index", "location", "generation"],
  LocationGameIndicesUpdateInput: ["game_index", "location", "generation"],
  LocationAreaEncounterRatesCreateInput: ["rate", "locationArea", "encounterMethod", "version"],
  LocationAreaEncounterRatesUpdateInput: ["rate", "locationArea", "encounterMethod", "version"],
  NatureBattleStylePreferencesCreateInput: ["low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  NatureBattleStylePreferencesUpdateInput: ["low_hp_preference", "high_hp_preference", "nature", "battleStyle"],
  IntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  StringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
  IntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  PokemonSpeciesRelationFilter: ["is", "isNot"],
  PokemonFormsListRelationFilter: ["every", "some", "none"],
  PokemonAbilitiesListRelationFilter: ["every", "some", "none"],
  PokemonMovesListRelationFilter: ["every", "some", "none"],
  PokemonStatsListRelationFilter: ["every", "some", "none"],
  PokemonTypesListRelationFilter: ["every", "some", "none"],
  PokemonItemsListRelationFilter: ["every", "some", "none"],
  PokemonGameIndicesListRelationFilter: ["every", "some", "none"],
  EncountersListRelationFilter: ["every", "some", "none"],
  SortOrderInput: ["sort", "nulls"],
  PokemonFormsOrderByRelationAggregateInput: ["_count"],
  PokemonAbilitiesOrderByRelationAggregateInput: ["_count"],
  PokemonMovesOrderByRelationAggregateInput: ["_count"],
  PokemonStatsOrderByRelationAggregateInput: ["_count"],
  PokemonTypesOrderByRelationAggregateInput: ["_count"],
  PokemonItemsOrderByRelationAggregateInput: ["_count"],
  PokemonGameIndicesOrderByRelationAggregateInput: ["_count"],
  EncountersOrderByRelationAggregateInput: ["_count"],
  PokemonCountOrderByAggregateInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonAvgOrderByAggregateInput: ["id", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonMaxOrderByAggregateInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonMinOrderByAggregateInput: ["id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonSumOrderByAggregateInput: ["id", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  IntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  StringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
  IntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  GenerationsRelationFilter: ["is", "isNot"],
  PokemonSpeciesNullableRelationFilter: ["is", "isNot"],
  PokemonSpeciesListRelationFilter: ["every", "some", "none"],
  EvolutionChainsRelationFilter: ["is", "isNot"],
  PokemonColorsRelationFilter: ["is", "isNot"],
  PokemonShapesRelationFilter: ["is", "isNot"],
  PokemonHabitatsNullableRelationFilter: ["is", "isNot"],
  GrowthRatesRelationFilter: ["is", "isNot"],
  PokemonListRelationFilter: ["every", "some", "none"],
  PokemonEggGroupsListRelationFilter: ["every", "some", "none"],
  PokemonDexNumbersListRelationFilter: ["every", "some", "none"],
  PokemonEvolutionListRelationFilter: ["every", "some", "none"],
  PokemonSpeciesOrderByRelationAggregateInput: ["_count"],
  PokemonOrderByRelationAggregateInput: ["_count"],
  PokemonEggGroupsOrderByRelationAggregateInput: ["_count"],
  PokemonDexNumbersOrderByRelationAggregateInput: ["_count"],
  PokemonEvolutionOrderByRelationAggregateInput: ["_count"],
  PokemonSpeciesCountOrderByAggregateInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesAvgOrderByAggregateInput: ["id", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesMinOrderByAggregateInput: ["id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  PokemonSpeciesSumOrderByAggregateInput: ["id", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  StringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
  PokemonRelationFilter: ["is", "isNot"],
  VersionGroupsRelationFilter: ["is", "isNot"],
  PokemonFormGenerationsListRelationFilter: ["every", "some", "none"],
  PokemonFormTypesListRelationFilter: ["every", "some", "none"],
  PokemonFormGenerationsOrderByRelationAggregateInput: ["_count"],
  PokemonFormTypesOrderByRelationAggregateInput: ["_count"],
  PokemonFormsCountOrderByAggregateInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormsAvgOrderByAggregateInput: ["id", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormsMaxOrderByAggregateInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormsMinOrderByAggregateInput: ["id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonFormsSumOrderByAggregateInput: ["id", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  StringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
  TypesRelationFilter: ["is", "isNot"],
  MoveTargetsRelationFilter: ["is", "isNot"],
  MoveDamageClassesRelationFilter: ["is", "isNot"],
  MoveEffectsNullableRelationFilter: ["is", "isNot"],
  ContestTypesNullableRelationFilter: ["is", "isNot"],
  ContestEffectsNullableRelationFilter: ["is", "isNot"],
  SuperContestEffectsNullableRelationFilter: ["is", "isNot"],
  MachinesListRelationFilter: ["every", "some", "none"],
  MoveMetaListRelationFilter: ["every", "some", "none"],
  MoveMetaStatChangesListRelationFilter: ["every", "some", "none"],
  MoveFlagMapListRelationFilter: ["every", "some", "none"],
  ContestCombosListRelationFilter: ["every", "some", "none"],
  SuperContestCombosListRelationFilter: ["every", "some", "none"],
  MachinesOrderByRelationAggregateInput: ["_count"],
  MoveMetaOrderByRelationAggregateInput: ["_count"],
  MoveMetaStatChangesOrderByRelationAggregateInput: ["_count"],
  MoveFlagMapOrderByRelationAggregateInput: ["_count"],
  ContestCombosOrderByRelationAggregateInput: ["_count"],
  SuperContestCombosOrderByRelationAggregateInput: ["_count"],
  MovesCountOrderByAggregateInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesAvgOrderByAggregateInput: ["id", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesMinOrderByAggregateInput: ["id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesSumOrderByAggregateInput: ["id", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesListRelationFilter: ["every", "some", "none"],
  MovesOrderByRelationAggregateInput: ["_count"],
  MoveEffectsCountOrderByAggregateInput: ["id"],
  MoveEffectsAvgOrderByAggregateInput: ["id"],
  MoveEffectsMaxOrderByAggregateInput: ["id"],
  MoveEffectsMinOrderByAggregateInput: ["id"],
  MoveEffectsSumOrderByAggregateInput: ["id"],
  MoveTargetsCountOrderByAggregateInput: ["id", "identifier"],
  MoveTargetsAvgOrderByAggregateInput: ["id"],
  MoveTargetsMaxOrderByAggregateInput: ["id", "identifier"],
  MoveTargetsMinOrderByAggregateInput: ["id", "identifier"],
  MoveTargetsSumOrderByAggregateInput: ["id"],
  TypesListRelationFilter: ["every", "some", "none"],
  TypesOrderByRelationAggregateInput: ["_count"],
  MoveDamageClassesCountOrderByAggregateInput: ["id", "identifier"],
  MoveDamageClassesAvgOrderByAggregateInput: ["id"],
  MoveDamageClassesMaxOrderByAggregateInput: ["id", "identifier"],
  MoveDamageClassesMinOrderByAggregateInput: ["id", "identifier"],
  MoveDamageClassesSumOrderByAggregateInput: ["id"],
  MoveDamageClassesNullableRelationFilter: ["is", "isNot"],
  TypeGameIndicesListRelationFilter: ["every", "some", "none"],
  TypeEfficacyListRelationFilter: ["every", "some", "none"],
  BerryFlavorsListRelationFilter: ["every", "some", "none"],
  NaturesListRelationFilter: ["every", "some", "none"],
  BerriesListRelationFilter: ["every", "some", "none"],
  TypeGameIndicesOrderByRelationAggregateInput: ["_count"],
  TypeEfficacyOrderByRelationAggregateInput: ["_count"],
  BerryFlavorsOrderByRelationAggregateInput: ["_count"],
  NaturesOrderByRelationAggregateInput: ["_count"],
  BerriesOrderByRelationAggregateInput: ["_count"],
  TypesCountOrderByAggregateInput: ["id", "identifier", "generation_id", "damage_class_id"],
  TypesAvgOrderByAggregateInput: ["id", "generation_id", "damage_class_id"],
  TypesMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "damage_class_id"],
  TypesMinOrderByAggregateInput: ["id", "identifier", "generation_id", "damage_class_id"],
  TypesSumOrderByAggregateInput: ["id", "generation_id", "damage_class_id"],
  AbilitiesCountOrderByAggregateInput: ["id", "identifier", "generation_id", "is_main_series"],
  AbilitiesAvgOrderByAggregateInput: ["id", "generation_id", "is_main_series"],
  AbilitiesMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "is_main_series"],
  AbilitiesMinOrderByAggregateInput: ["id", "identifier", "generation_id", "is_main_series"],
  AbilitiesSumOrderByAggregateInput: ["id", "generation_id", "is_main_series"],
  ItemCategoriesRelationFilter: ["is", "isNot"],
  ItemFlingEffectsNullableRelationFilter: ["is", "isNot"],
  ItemGameIndicesListRelationFilter: ["every", "some", "none"],
  ItemFlagMapListRelationFilter: ["every", "some", "none"],
  EvolutionChainsListRelationFilter: ["every", "some", "none"],
  ItemGameIndicesOrderByRelationAggregateInput: ["_count"],
  ItemFlagMapOrderByRelationAggregateInput: ["_count"],
  EvolutionChainsOrderByRelationAggregateInput: ["_count"],
  ItemsCountOrderByAggregateInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemsAvgOrderByAggregateInput: ["id", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemsMaxOrderByAggregateInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemsMinOrderByAggregateInput: ["id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemsSumOrderByAggregateInput: ["id", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemPocketsRelationFilter: ["is", "isNot"],
  ItemsListRelationFilter: ["every", "some", "none"],
  ItemsOrderByRelationAggregateInput: ["_count"],
  ItemCategoriesCountOrderByAggregateInput: ["id", "pocket_id", "identifier"],
  ItemCategoriesAvgOrderByAggregateInput: ["id", "pocket_id"],
  ItemCategoriesMaxOrderByAggregateInput: ["id", "pocket_id", "identifier"],
  ItemCategoriesMinOrderByAggregateInput: ["id", "pocket_id", "identifier"],
  ItemCategoriesSumOrderByAggregateInput: ["id", "pocket_id"],
  ItemCategoriesListRelationFilter: ["every", "some", "none"],
  ItemCategoriesOrderByRelationAggregateInput: ["_count"],
  ItemPocketsCountOrderByAggregateInput: ["id", "identifier"],
  ItemPocketsAvgOrderByAggregateInput: ["id"],
  ItemPocketsMaxOrderByAggregateInput: ["id", "identifier"],
  ItemPocketsMinOrderByAggregateInput: ["id", "identifier"],
  ItemPocketsSumOrderByAggregateInput: ["id"],
  CharacteristicsListRelationFilter: ["every", "some", "none"],
  CharacteristicsOrderByRelationAggregateInput: ["_count"],
  StatsCountOrderByAggregateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  StatsAvgOrderByAggregateInput: ["id", "damage_class_id", "is_battle_only", "game_index"],
  StatsMaxOrderByAggregateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  StatsMinOrderByAggregateInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index"],
  StatsSumOrderByAggregateInput: ["id", "damage_class_id", "is_battle_only", "game_index"],
  RegionsRelationFilter: ["is", "isNot"],
  AbilitiesListRelationFilter: ["every", "some", "none"],
  LocationGameIndicesListRelationFilter: ["every", "some", "none"],
  VersionGroupsListRelationFilter: ["every", "some", "none"],
  AbilitiesOrderByRelationAggregateInput: ["_count"],
  LocationGameIndicesOrderByRelationAggregateInput: ["_count"],
  VersionGroupsOrderByRelationAggregateInput: ["_count"],
  GenerationsCountOrderByAggregateInput: ["id", "main_region_id", "identifier"],
  GenerationsAvgOrderByAggregateInput: ["id", "main_region_id"],
  GenerationsMaxOrderByAggregateInput: ["id", "main_region_id", "identifier"],
  GenerationsMinOrderByAggregateInput: ["id", "main_region_id", "identifier"],
  GenerationsSumOrderByAggregateInput: ["id", "main_region_id"],
  VersionsListRelationFilter: ["every", "some", "none"],
  EncounterSlotsListRelationFilter: ["every", "some", "none"],
  VersionGroupPokemonMoveMethodsListRelationFilter: ["every", "some", "none"],
  VersionGroupRegionsListRelationFilter: ["every", "some", "none"],
  PokedexVersionGroupsListRelationFilter: ["every", "some", "none"],
  VersionsOrderByRelationAggregateInput: ["_count"],
  EncounterSlotsOrderByRelationAggregateInput: ["_count"],
  VersionGroupPokemonMoveMethodsOrderByRelationAggregateInput: ["_count"],
  VersionGroupRegionsOrderByRelationAggregateInput: ["_count"],
  PokedexVersionGroupsOrderByRelationAggregateInput: ["_count"],
  VersionGroupsCountOrderByAggregateInput: ["id", "identifier", "generation_id", "order"],
  VersionGroupsAvgOrderByAggregateInput: ["id", "generation_id", "order"],
  VersionGroupsMaxOrderByAggregateInput: ["id", "identifier", "generation_id", "order"],
  VersionGroupsMinOrderByAggregateInput: ["id", "identifier", "generation_id", "order"],
  VersionGroupsSumOrderByAggregateInput: ["id", "generation_id", "order"],
  LocationAreaEncounterRatesListRelationFilter: ["every", "some", "none"],
  LocationAreaEncounterRatesOrderByRelationAggregateInput: ["_count"],
  VersionsCountOrderByAggregateInput: ["id", "version_group_id", "identifier"],
  VersionsAvgOrderByAggregateInput: ["id", "version_group_id"],
  VersionsMaxOrderByAggregateInput: ["id", "version_group_id", "identifier"],
  VersionsMinOrderByAggregateInput: ["id", "version_group_id", "identifier"],
  VersionsSumOrderByAggregateInput: ["id", "version_group_id"],
  GenerationsListRelationFilter: ["every", "some", "none"],
  LocationsListRelationFilter: ["every", "some", "none"],
  PokedexesListRelationFilter: ["every", "some", "none"],
  GenerationsOrderByRelationAggregateInput: ["_count"],
  LocationsOrderByRelationAggregateInput: ["_count"],
  PokedexesOrderByRelationAggregateInput: ["_count"],
  RegionsCountOrderByAggregateInput: ["id", "identifier"],
  RegionsAvgOrderByAggregateInput: ["id"],
  RegionsMaxOrderByAggregateInput: ["id", "identifier"],
  RegionsMinOrderByAggregateInput: ["id", "identifier"],
  RegionsSumOrderByAggregateInput: ["id"],
  RegionsNullableRelationFilter: ["is", "isNot"],
  LocationAreasListRelationFilter: ["every", "some", "none"],
  LocationAreasOrderByRelationAggregateInput: ["_count"],
  LocationsCountOrderByAggregateInput: ["id", "region_id", "identifier"],
  LocationsAvgOrderByAggregateInput: ["id", "region_id"],
  LocationsMaxOrderByAggregateInput: ["id", "region_id", "identifier"],
  LocationsMinOrderByAggregateInput: ["id", "region_id", "identifier"],
  LocationsSumOrderByAggregateInput: ["id", "region_id"],
  LocationsRelationFilter: ["is", "isNot"],
  LocationAreasCountOrderByAggregateInput: ["id", "location_id", "game_index", "identifier"],
  LocationAreasAvgOrderByAggregateInput: ["id", "location_id", "game_index"],
  LocationAreasMaxOrderByAggregateInput: ["id", "location_id", "game_index", "identifier"],
  LocationAreasMinOrderByAggregateInput: ["id", "location_id", "game_index", "identifier"],
  LocationAreasSumOrderByAggregateInput: ["id", "location_id", "game_index"],
  PokedexesCountOrderByAggregateInput: ["id", "region_id", "identifier", "is_main_series"],
  PokedexesAvgOrderByAggregateInput: ["id", "region_id", "is_main_series"],
  PokedexesMaxOrderByAggregateInput: ["id", "region_id", "identifier", "is_main_series"],
  PokedexesMinOrderByAggregateInput: ["id", "region_id", "identifier", "is_main_series"],
  PokedexesSumOrderByAggregateInput: ["id", "region_id", "is_main_series"],
  ItemsNullableRelationFilter: ["is", "isNot"],
  EvolutionChainsCountOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionChainsAvgOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionChainsMaxOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionChainsMinOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionChainsSumOrderByAggregateInput: ["id", "baby_trigger_item_id"],
  EvolutionTriggersCountOrderByAggregateInput: ["id", "identifier"],
  EvolutionTriggersAvgOrderByAggregateInput: ["id"],
  EvolutionTriggersMaxOrderByAggregateInput: ["id", "identifier"],
  EvolutionTriggersMinOrderByAggregateInput: ["id", "identifier"],
  EvolutionTriggersSumOrderByAggregateInput: ["id"],
  EvolutionTriggersRelationFilter: ["is", "isNot"],
  GendersNullableRelationFilter: ["is", "isNot"],
  LocationsNullableRelationFilter: ["is", "isNot"],
  MovesNullableRelationFilter: ["is", "isNot"],
  TypesNullableRelationFilter: ["is", "isNot"],
  PokemonEvolutionCountOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionAvgOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionMaxOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionMinOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionSumOrderByAggregateInput: ["id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  ExperienceListRelationFilter: ["every", "some", "none"],
  ExperienceOrderByRelationAggregateInput: ["_count"],
  GrowthRatesCountOrderByAggregateInput: ["id", "identifier", "formula"],
  GrowthRatesAvgOrderByAggregateInput: ["id"],
  GrowthRatesMaxOrderByAggregateInput: ["id", "identifier", "formula"],
  GrowthRatesMinOrderByAggregateInput: ["id", "identifier", "formula"],
  GrowthRatesSumOrderByAggregateInput: ["id"],
  ExperienceGrowth_rate_idLevelCompoundUniqueInput: ["growth_rate_id", "level"],
  ExperienceCountOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  ExperienceAvgOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  ExperienceMaxOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  ExperienceMinOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  ExperienceSumOrderByAggregateInput: ["growth_rate_id", "level", "experience"],
  GendersCountOrderByAggregateInput: ["id", "identifier"],
  GendersAvgOrderByAggregateInput: ["id"],
  GendersMaxOrderByAggregateInput: ["id", "identifier"],
  GendersMinOrderByAggregateInput: ["id", "identifier"],
  GendersSumOrderByAggregateInput: ["id"],
  LanguagesCountOrderByAggregateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguagesAvgOrderByAggregateInput: ["id", "official", "order"],
  LanguagesMaxOrderByAggregateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguagesMinOrderByAggregateInput: ["id", "iso639", "iso3166", "identifier", "official", "order"],
  LanguagesSumOrderByAggregateInput: ["id", "official", "order"],
  EggGroupsCountOrderByAggregateInput: ["id", "identifier"],
  EggGroupsAvgOrderByAggregateInput: ["id"],
  EggGroupsMaxOrderByAggregateInput: ["id", "identifier"],
  EggGroupsMinOrderByAggregateInput: ["id", "identifier"],
  EggGroupsSumOrderByAggregateInput: ["id"],
  StatsRelationFilter: ["is", "isNot"],
  NatureBattleStylePreferencesListRelationFilter: ["every", "some", "none"],
  NatureBattleStylePreferencesOrderByRelationAggregateInput: ["_count"],
  NaturesCountOrderByAggregateInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NaturesAvgOrderByAggregateInput: ["id", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NaturesMaxOrderByAggregateInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NaturesMinOrderByAggregateInput: ["id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NaturesSumOrderByAggregateInput: ["id", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  ContestTypesCountOrderByAggregateInput: ["id", "identifier"],
  ContestTypesAvgOrderByAggregateInput: ["id"],
  ContestTypesMaxOrderByAggregateInput: ["id", "identifier"],
  ContestTypesMinOrderByAggregateInput: ["id", "identifier"],
  ContestTypesSumOrderByAggregateInput: ["id"],
  ContestEffectsCountOrderByAggregateInput: ["id", "appeal", "jam"],
  ContestEffectsAvgOrderByAggregateInput: ["id", "appeal", "jam"],
  ContestEffectsMaxOrderByAggregateInput: ["id", "appeal", "jam"],
  ContestEffectsMinOrderByAggregateInput: ["id", "appeal", "jam"],
  ContestEffectsSumOrderByAggregateInput: ["id", "appeal", "jam"],
  SuperContestEffectsCountOrderByAggregateInput: ["id", "appeal"],
  SuperContestEffectsAvgOrderByAggregateInput: ["id", "appeal"],
  SuperContestEffectsMaxOrderByAggregateInput: ["id", "appeal"],
  SuperContestEffectsMinOrderByAggregateInput: ["id", "appeal"],
  SuperContestEffectsSumOrderByAggregateInput: ["id", "appeal"],
  ItemsRelationFilter: ["is", "isNot"],
  MovesRelationFilter: ["is", "isNot"],
  MachinesMachine_numberVersion_group_idCompoundUniqueInput: ["machine_number", "version_group_id"],
  MachinesCountOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachinesAvgOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachinesMaxOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachinesMinOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  MachinesSumOrderByAggregateInput: ["machine_number", "version_group_id", "item_id", "move_id"],
  EncounterMethodsCountOrderByAggregateInput: ["id", "identifier", "order"],
  EncounterMethodsAvgOrderByAggregateInput: ["id", "order"],
  EncounterMethodsMaxOrderByAggregateInput: ["id", "identifier", "order"],
  EncounterMethodsMinOrderByAggregateInput: ["id", "identifier", "order"],
  EncounterMethodsSumOrderByAggregateInput: ["id", "order"],
  EncounterMethodsRelationFilter: ["is", "isNot"],
  EncounterSlotsCountOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotsAvgOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotsMaxOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotsMinOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  EncounterSlotsSumOrderByAggregateInput: ["id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  VersionsRelationFilter: ["is", "isNot"],
  LocationAreasRelationFilter: ["is", "isNot"],
  EncounterSlotsRelationFilter: ["is", "isNot"],
  EncounterConditionValueMapListRelationFilter: ["every", "some", "none"],
  EncounterConditionValueMapOrderByRelationAggregateInput: ["_count"],
  EncountersCountOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncountersAvgOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncountersMaxOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncountersMinOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncountersSumOrderByAggregateInput: ["id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  EncounterConditionValuesListRelationFilter: ["every", "some", "none"],
  EncounterConditionValuesOrderByRelationAggregateInput: ["_count"],
  EncounterConditionsCountOrderByAggregateInput: ["id", "identifier"],
  EncounterConditionsAvgOrderByAggregateInput: ["id"],
  EncounterConditionsMaxOrderByAggregateInput: ["id", "identifier"],
  EncounterConditionsMinOrderByAggregateInput: ["id", "identifier"],
  EncounterConditionsSumOrderByAggregateInput: ["id"],
  EncounterConditionsRelationFilter: ["is", "isNot"],
  EncounterConditionValuesCountOrderByAggregateInput: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValuesAvgOrderByAggregateInput: ["id", "encounter_condition_id", "is_default"],
  EncounterConditionValuesMaxOrderByAggregateInput: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValuesMinOrderByAggregateInput: ["id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionValuesSumOrderByAggregateInput: ["id", "encounter_condition_id", "is_default"],
  EncountersRelationFilter: ["is", "isNot"],
  EncounterConditionValuesRelationFilter: ["is", "isNot"],
  EncounterConditionValueMapCountOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapAvgOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapMaxOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapMinOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  EncounterConditionValueMapSumOrderByAggregateInput: ["encounter_id", "encounter_condition_value_id"],
  MoveMetaCategoriesCountOrderByAggregateInput: ["id", "identifier"],
  MoveMetaCategoriesAvgOrderByAggregateInput: ["id"],
  MoveMetaCategoriesMaxOrderByAggregateInput: ["id", "identifier"],
  MoveMetaCategoriesMinOrderByAggregateInput: ["id", "identifier"],
  MoveMetaCategoriesSumOrderByAggregateInput: ["id"],
  MoveMetaAilmentsCountOrderByAggregateInput: ["id", "identifier"],
  MoveMetaAilmentsAvgOrderByAggregateInput: ["id"],
  MoveMetaAilmentsMaxOrderByAggregateInput: ["id", "identifier"],
  MoveMetaAilmentsMinOrderByAggregateInput: ["id", "identifier"],
  MoveMetaAilmentsSumOrderByAggregateInput: ["id"],
  MoveMetaCategoriesRelationFilter: ["is", "isNot"],
  MoveMetaAilmentsNullableRelationFilter: ["is", "isNot"],
  MoveMetaCountOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaAvgOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaMaxOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaMinOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaSumOrderByAggregateInput: ["move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaRelationFilter: ["is", "isNot"],
  MoveMetaStatChangesMove_idStat_idCompoundUniqueInput: ["move_id", "stat_id"],
  MoveMetaStatChangesCountOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesAvgOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesMaxOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesMinOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveMetaStatChangesSumOrderByAggregateInput: ["move_id", "stat_id", "change"],
  MoveFlagsCountOrderByAggregateInput: ["id", "identifier"],
  MoveFlagsAvgOrderByAggregateInput: ["id"],
  MoveFlagsMaxOrderByAggregateInput: ["id", "identifier"],
  MoveFlagsMinOrderByAggregateInput: ["id", "identifier"],
  MoveFlagsSumOrderByAggregateInput: ["id"],
  MoveFlagsRelationFilter: ["is", "isNot"],
  MoveFlagMapCountOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveFlagMapAvgOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveFlagMapMaxOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveFlagMapMinOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveFlagMapSumOrderByAggregateInput: ["move_id", "move_flag_id"],
  MoveBattleStylesCountOrderByAggregateInput: ["id", "identifier"],
  MoveBattleStylesAvgOrderByAggregateInput: ["id"],
  MoveBattleStylesMaxOrderByAggregateInput: ["id", "identifier"],
  MoveBattleStylesMinOrderByAggregateInput: ["id", "identifier"],
  MoveBattleStylesSumOrderByAggregateInput: ["id"],
  ItemFlagsCountOrderByAggregateInput: ["id", "identifier"],
  ItemFlagsAvgOrderByAggregateInput: ["id"],
  ItemFlagsMaxOrderByAggregateInput: ["id", "identifier"],
  ItemFlagsMinOrderByAggregateInput: ["id", "identifier"],
  ItemFlagsSumOrderByAggregateInput: ["id"],
  ItemFlagsRelationFilter: ["is", "isNot"],
  ItemFlagMapCountOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlagMapAvgOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlagMapMaxOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlagMapMinOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlagMapSumOrderByAggregateInput: ["item_id", "item_flag_id"],
  ItemFlingEffectsCountOrderByAggregateInput: ["id", "identifier"],
  ItemFlingEffectsAvgOrderByAggregateInput: ["id"],
  ItemFlingEffectsMaxOrderByAggregateInput: ["id", "identifier"],
  ItemFlingEffectsMinOrderByAggregateInput: ["id", "identifier"],
  ItemFlingEffectsSumOrderByAggregateInput: ["id"],
  BerryFirmnessRelationFilter: ["is", "isNot"],
  BerriesCountOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerriesAvgOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerriesMaxOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerriesMinOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerriesSumOrderByAggregateInput: ["id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  BerryFirmnessCountOrderByAggregateInput: ["id", "identifier"],
  BerryFirmnessAvgOrderByAggregateInput: ["id"],
  BerryFirmnessMaxOrderByAggregateInput: ["id", "identifier"],
  BerryFirmnessMinOrderByAggregateInput: ["id", "identifier"],
  BerryFirmnessSumOrderByAggregateInput: ["id"],
  BerriesRelationFilter: ["is", "isNot"],
  ContestTypesRelationFilter: ["is", "isNot"],
  BerryFlavorsBerry_idContest_type_idCompoundUniqueInput: ["berry_id", "contest_type_id"],
  BerryFlavorsCountOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorsAvgOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorsMaxOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorsMinOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  BerryFlavorsSumOrderByAggregateInput: ["berry_id", "contest_type_id", "flavor"],
  CharacteristicsCountOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  CharacteristicsAvgOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  CharacteristicsMaxOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  CharacteristicsMinOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  CharacteristicsSumOrderByAggregateInput: ["id", "stat_id", "gene_mod_5"],
  ContestCombosCountOrderByAggregateInput: ["first_move_id", "second_move_id"],
  ContestCombosAvgOrderByAggregateInput: ["first_move_id", "second_move_id"],
  ContestCombosMaxOrderByAggregateInput: ["first_move_id", "second_move_id"],
  ContestCombosMinOrderByAggregateInput: ["first_move_id", "second_move_id"],
  ContestCombosSumOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestCombosCountOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestCombosAvgOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestCombosMaxOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestCombosMinOrderByAggregateInput: ["first_move_id", "second_move_id"],
  SuperContestCombosSumOrderByAggregateInput: ["first_move_id", "second_move_id"],
  PokemonMoveMethodsCountOrderByAggregateInput: ["id", "identifier"],
  PokemonMoveMethodsAvgOrderByAggregateInput: ["id"],
  PokemonMoveMethodsMaxOrderByAggregateInput: ["id", "identifier"],
  PokemonMoveMethodsMinOrderByAggregateInput: ["id", "identifier"],
  PokemonMoveMethodsSumOrderByAggregateInput: ["id"],
  PokemonMoveMethodsRelationFilter: ["is", "isNot"],
  VersionGroupPokemonMoveMethodsCountOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodsAvgOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodsMaxOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodsMinOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  VersionGroupPokemonMoveMethodsSumOrderByAggregateInput: ["version_group_id", "pokemon_move_method_id"],
  PokemonShapesCountOrderByAggregateInput: ["id", "identifier"],
  PokemonShapesAvgOrderByAggregateInput: ["id"],
  PokemonShapesMaxOrderByAggregateInput: ["id", "identifier"],
  PokemonShapesMinOrderByAggregateInput: ["id", "identifier"],
  PokemonShapesSumOrderByAggregateInput: ["id"],
  PokemonColorsCountOrderByAggregateInput: ["id", "identifier"],
  PokemonColorsAvgOrderByAggregateInput: ["id"],
  PokemonColorsMaxOrderByAggregateInput: ["id", "identifier"],
  PokemonColorsMinOrderByAggregateInput: ["id", "identifier"],
  PokemonColorsSumOrderByAggregateInput: ["id"],
  PokemonHabitatsCountOrderByAggregateInput: ["id", "identifier"],
  PokemonHabitatsAvgOrderByAggregateInput: ["id"],
  PokemonHabitatsMaxOrderByAggregateInput: ["id", "identifier"],
  PokemonHabitatsMinOrderByAggregateInput: ["id", "identifier"],
  PokemonHabitatsSumOrderByAggregateInput: ["id"],
  TypeEfficacyDamage_type_idTarget_type_idCompoundUniqueInput: ["damage_type_id", "target_type_id"],
  TypeEfficacyCountOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyAvgOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyMaxOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyMinOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacySumOrderByAggregateInput: ["damage_type_id", "target_type_id", "damage_factor"],
  VersionGroupRegionsCountOrderByAggregateInput: ["version_group_id", "region_id"],
  VersionGroupRegionsAvgOrderByAggregateInput: ["version_group_id", "region_id"],
  VersionGroupRegionsMaxOrderByAggregateInput: ["version_group_id", "region_id"],
  VersionGroupRegionsMinOrderByAggregateInput: ["version_group_id", "region_id"],
  VersionGroupRegionsSumOrderByAggregateInput: ["version_group_id", "region_id"],
  PokedexesRelationFilter: ["is", "isNot"],
  PokedexVersionGroupsCountOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupsAvgOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupsMaxOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupsMinOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  PokedexVersionGroupsSumOrderByAggregateInput: ["pokedex_id", "version_group_id"],
  AbilitiesRelationFilter: ["is", "isNot"],
  PokemonAbilitiesPokemon_idAbility_idCompoundUniqueInput: ["pokemon_id", "ability_id"],
  PokemonAbilitiesCountOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitiesAvgOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitiesMaxOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitiesMinOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonAbilitiesSumOrderByAggregateInput: ["pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMovesPokemon_idVersion_group_idMove_idPokemon_move_method_idCompoundUniqueInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id"],
  PokemonMovesCountOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMovesAvgOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMovesMaxOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMovesMinOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonMovesSumOrderByAggregateInput: ["pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStatsPokemon_idStat_idCompoundUniqueInput: ["pokemon_id", "stat_id"],
  PokemonStatsCountOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatsAvgOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatsMaxOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatsMinOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonStatsSumOrderByAggregateInput: ["pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypesPokemon_idType_idCompoundUniqueInput: ["pokemon_id", "type_id"],
  PokemonTypesCountOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  PokemonTypesAvgOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  PokemonTypesMaxOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  PokemonTypesMinOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  PokemonTypesSumOrderByAggregateInput: ["pokemon_id", "type_id", "slot"],
  EggGroupsRelationFilter: ["is", "isNot"],
  PokemonEggGroupsSpecies_idEgg_group_idCompoundUniqueInput: ["species_id", "egg_group_id"],
  PokemonEggGroupsCountOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonEggGroupsAvgOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonEggGroupsMaxOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonEggGroupsMinOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonEggGroupsSumOrderByAggregateInput: ["species_id", "egg_group_id"],
  PokemonItemsPokemon_idVersion_idItem_idCompoundUniqueInput: ["pokemon_id", "version_id", "item_id"],
  PokemonItemsCountOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemsAvgOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemsMaxOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemsMinOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonItemsSumOrderByAggregateInput: ["pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndicesPokemon_idVersion_idCompoundUniqueInput: ["pokemon_id", "version_id"],
  PokemonGameIndicesCountOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndicesAvgOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndicesMaxOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndicesMinOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonGameIndicesSumOrderByAggregateInput: ["pokemon_id", "version_id", "game_index"],
  PokemonDexNumbersSpecies_idPokedex_idCompoundUniqueInput: ["species_id", "pokedex_id"],
  PokemonDexNumbersCountOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumbersAvgOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumbersMaxOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumbersMinOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonDexNumbersSumOrderByAggregateInput: ["species_id", "pokedex_id", "pokedex_number"],
  PokemonFormsRelationFilter: ["is", "isNot"],
  PokemonFormGenerationsPokemon_form_idGeneration_idCompoundUniqueInput: ["pokemon_form_id", "generation_id"],
  PokemonFormGenerationsCountOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationsAvgOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationsMaxOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationsMinOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormGenerationsSumOrderByAggregateInput: ["pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypesPokemon_form_idType_idCompoundUniqueInput: ["pokemon_form_id", "type_id"],
  PokemonFormTypesCountOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypesAvgOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypesMaxOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypesMinOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  PokemonFormTypesSumOrderByAggregateInput: ["pokemon_form_id", "type_id", "slot"],
  TypeGameIndicesType_idGeneration_idCompoundUniqueInput: ["type_id", "generation_id"],
  TypeGameIndicesCountOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  TypeGameIndicesAvgOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  TypeGameIndicesMaxOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  TypeGameIndicesMinOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  TypeGameIndicesSumOrderByAggregateInput: ["type_id", "generation_id", "game_index"],
  ItemGameIndicesItem_idGeneration_idCompoundUniqueInput: ["item_id", "generation_id"],
  ItemGameIndicesCountOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  ItemGameIndicesAvgOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  ItemGameIndicesMaxOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  ItemGameIndicesMinOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  ItemGameIndicesSumOrderByAggregateInput: ["item_id", "generation_id", "game_index"],
  LocationGameIndicesLocation_idGeneration_idCompoundUniqueInput: ["location_id", "generation_id"],
  LocationGameIndicesCountOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationGameIndicesAvgOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationGameIndicesMaxOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationGameIndicesMinOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationGameIndicesSumOrderByAggregateInput: ["location_id", "generation_id", "game_index"],
  LocationAreaEncounterRatesLocation_area_idEncounter_method_idVersion_idCompoundUniqueInput: ["location_area_id", "encounter_method_id", "version_id"],
  LocationAreaEncounterRatesCountOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRatesAvgOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRatesMaxOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRatesMinOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  LocationAreaEncounterRatesSumOrderByAggregateInput: ["location_area_id", "encounter_method_id", "version_id", "rate"],
  NaturesRelationFilter: ["is", "isNot"],
  MoveBattleStylesRelationFilter: ["is", "isNot"],
  NatureBattleStylePreferencesCountOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferencesAvgOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferencesMaxOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferencesMinOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  NatureBattleStylePreferencesSumOrderByAggregateInput: ["nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  PokemonSpeciesCreateNestedOneWithoutPokemonInput: ["create", "connectOrCreate", "connect"],
  PokemonFormsCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonAbilitiesCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonMovesCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonStatsCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonTypesCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonItemsCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonGameIndicesCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncountersCreateNestedManyWithoutPokemonInput: ["create", "connectOrCreate", "createMany", "connect"],
  IntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  StringFieldUpdateOperationsInput: ["set"],
  NullableIntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  GenerationsCreateNestedOneWithoutPokemonSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutEvolvesToInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutEvolvesFromInput: ["create", "connectOrCreate", "createMany", "connect"],
  EvolutionChainsCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonColorsCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonShapesCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonHabitatsCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  GrowthRatesCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedManyWithoutSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEggGroupsCreateNestedManyWithoutSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonDexNumbersCreateNestedManyWithoutSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutEvolvedSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutPartySpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutTradeSpeciesInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonCreateNestedOneWithoutFormsInput: ["create", "connectOrCreate", "connect"],
  VersionGroupsCreateNestedOneWithoutPokemonFormsInput: ["create", "connectOrCreate", "connect"],
  PokemonFormGenerationsCreateNestedManyWithoutPokemonFormInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonFormTypesCreateNestedManyWithoutPokemonFormInput: ["create", "connectOrCreate", "createMany", "connect"],
  NullableStringFieldUpdateOperationsInput: ["set"],
  GenerationsCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  MoveTargetsCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  MoveDamageClassesCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  MoveEffectsCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  ContestTypesCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  ContestEffectsCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  SuperContestEffectsCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  PokemonMovesCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MachinesCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveMetaCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveMetaStatChangesCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveFlagMapCreateNestedManyWithoutMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  ContestCombosCreateNestedManyWithoutFirstMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  ContestCombosCreateNestedManyWithoutSecondMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  SuperContestCombosCreateNestedManyWithoutFirstMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  SuperContestCombosCreateNestedManyWithoutSecondMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutKnownMoveInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedManyWithoutEffectInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedManyWithoutTargetInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedManyWithoutDamageClassInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypesCreateNestedManyWithoutDamageClassInput: ["create", "connectOrCreate", "createMany", "connect"],
  GenerationsCreateNestedOneWithoutTypesInput: ["create", "connectOrCreate", "connect"],
  MoveDamageClassesCreateNestedOneWithoutTypesInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonTypesCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonFormTypesCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeGameIndicesCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeEfficacyCreateNestedManyWithoutDamageTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeEfficacyCreateNestedManyWithoutTargetTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerryFlavorsCreateNestedManyWithoutTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  NaturesCreateNestedManyWithoutDecreasedStatTypesInput: ["create", "connectOrCreate", "connect"],
  NaturesCreateNestedManyWithoutIncreasedStatTypesInput: ["create", "connectOrCreate", "connect"],
  PokemonEvolutionCreateNestedManyWithoutKnownMoveTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutPartyTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerriesCreateNestedManyWithoutNaturalGiftTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  GenerationsCreateNestedOneWithoutAbilitiesInput: ["create", "connectOrCreate", "connect"],
  PokemonAbilitiesCreateNestedManyWithoutAbilityInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemCategoriesCreateNestedOneWithoutItemsInput: ["create", "connectOrCreate", "connect"],
  ItemFlingEffectsCreateNestedOneWithoutItemsInput: ["create", "connectOrCreate", "connect"],
  PokemonItemsCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  MachinesCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerriesCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemGameIndicesCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemFlagMapCreateNestedManyWithoutItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  EvolutionChainsCreateNestedManyWithoutBabyTriggerItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutTriggerItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutHeldItemInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemPocketsCreateNestedOneWithoutCategoriesInput: ["create", "connectOrCreate", "connect"],
  ItemsCreateNestedManyWithoutCategoryInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemCategoriesCreateNestedManyWithoutPocketInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonStatsCreateNestedManyWithoutStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveMetaStatChangesCreateNestedManyWithoutStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  CharacteristicsCreateNestedManyWithoutStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  NaturesCreateNestedManyWithoutDecreasedStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  NaturesCreateNestedManyWithoutIncreasedStatInput: ["create", "connectOrCreate", "createMany", "connect"],
  RegionsCreateNestedOneWithoutGenerationsInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypesCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  AbilitiesCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonFormGenerationsCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemGameIndicesCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypeGameIndicesCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationGameIndicesCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupsCreateNestedManyWithoutGenerationInput: ["create", "connectOrCreate", "createMany", "connect"],
  GenerationsCreateNestedOneWithoutVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  VersionsCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncounterSlotsCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  MachinesCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupPokemonMoveMethodsCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupRegionsCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokedexVersionGroupsCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonMovesCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonFormsCreateNestedManyWithoutVersionGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupsCreateNestedOneWithoutVersionsInput: ["create", "connectOrCreate", "connect"],
  EncountersCreateNestedManyWithoutVersionInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonItemsCreateNestedManyWithoutVersionInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonGameIndicesCreateNestedManyWithoutVersionInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationAreaEncounterRatesCreateNestedManyWithoutVersionInput: ["create", "connectOrCreate", "createMany", "connect"],
  GenerationsCreateNestedManyWithoutRegionInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationsCreateNestedManyWithoutRegionInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokedexesCreateNestedManyWithoutRegionInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupRegionsCreateNestedManyWithoutRegionInput: ["create", "connectOrCreate", "createMany", "connect"],
  RegionsCreateNestedOneWithoutLocationsInput: ["create", "connectOrCreate", "connect"],
  LocationAreasCreateNestedManyWithoutLocationInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationGameIndicesCreateNestedManyWithoutLocationInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutLocationInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationsCreateNestedOneWithoutAreasInput: ["create", "connectOrCreate", "connect"],
  EncountersCreateNestedManyWithoutLocationAreaInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationAreaEncounterRatesCreateNestedManyWithoutLocationAreaInput: ["create", "connectOrCreate", "createMany", "connect"],
  RegionsCreateNestedOneWithoutPokedexesInput: ["create", "connectOrCreate", "connect"],
  PokemonDexNumbersCreateNestedManyWithoutPokedexInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokedexVersionGroupsCreateNestedManyWithoutPokedexInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemsCreateNestedOneWithoutBabyTriggerItemsInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutEvolutionChainInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEvolutionCreateNestedManyWithoutEvolutionTriggerInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonSpeciesCreateNestedOneWithoutEvolutionInput: ["create", "connectOrCreate", "connect"],
  EvolutionTriggersCreateNestedOneWithoutEvolutionInput: ["create", "connectOrCreate", "connect"],
  ItemsCreateNestedOneWithoutTriggerItemsInput: ["create", "connectOrCreate", "connect"],
  GendersCreateNestedOneWithoutEvolutionInput: ["create", "connectOrCreate", "connect"],
  LocationsCreateNestedOneWithoutEvolutionInput: ["create", "connectOrCreate", "connect"],
  ItemsCreateNestedOneWithoutHeldItemsInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedOneWithoutKnownMovesInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutKnownMoveTypesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutPartySpeciesInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutPartyTypesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutTradeSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutGrowthRateInput: ["create", "connectOrCreate", "createMany", "connect"],
  ExperienceCreateNestedManyWithoutGrowthRateInput: ["create", "connectOrCreate", "createMany", "connect"],
  GrowthRatesCreateNestedOneWithoutExperienceInput: ["create", "connectOrCreate", "connect"],
  PokemonEvolutionCreateNestedManyWithoutGenderInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonEggGroupsCreateNestedManyWithoutEggGroupInput: ["create", "connectOrCreate", "createMany", "connect"],
  StatsCreateNestedOneWithoutNaturesInput: ["create", "connectOrCreate", "connect"],
  StatsCreateNestedOneWithoutNaturesIncreasedInput: ["create", "connectOrCreate", "connect"],
  NatureBattleStylePreferencesCreateNestedManyWithoutNatureInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypesCreateNestedManyWithoutNaturesInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedManyWithoutNaturesIncreasedInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedManyWithoutContestTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerryFlavorsCreateNestedManyWithoutContestTypeInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedManyWithoutContestEffectInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedManyWithoutSuperContestEffectInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupsCreateNestedOneWithoutMachinesInput: ["create", "connectOrCreate", "connect"],
  ItemsCreateNestedOneWithoutMachinesInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedOneWithoutMachinesInput: ["create", "connectOrCreate", "connect"],
  EncounterSlotsCreateNestedManyWithoutEncounterMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
  LocationAreaEncounterRatesCreateNestedManyWithoutEncounterMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupsCreateNestedOneWithoutEncounterSlotsInput: ["create", "connectOrCreate", "connect"],
  EncounterMethodsCreateNestedOneWithoutSlotsInput: ["create", "connectOrCreate", "connect"],
  EncountersCreateNestedManyWithoutEncounterSlotInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionsCreateNestedOneWithoutEncountersInput: ["create", "connectOrCreate", "connect"],
  LocationAreasCreateNestedOneWithoutEncountersInput: ["create", "connectOrCreate", "connect"],
  EncounterSlotsCreateNestedOneWithoutEncountersInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutEncountersInput: ["create", "connectOrCreate", "connect"],
  EncounterConditionValueMapCreateNestedManyWithoutEncounterInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncounterConditionValuesCreateNestedManyWithoutConditionInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncounterConditionsCreateNestedOneWithoutValuesInput: ["create", "connectOrCreate", "connect"],
  EncounterConditionValueMapCreateNestedManyWithoutConditionValueInput: ["create", "connectOrCreate", "createMany", "connect"],
  EncountersCreateNestedOneWithoutConditionValueMapInput: ["create", "connectOrCreate", "connect"],
  EncounterConditionValuesCreateNestedOneWithoutConditionValueMapInput: ["create", "connectOrCreate", "connect"],
  MoveMetaCreateNestedManyWithoutMetaCategoryInput: ["create", "connectOrCreate", "createMany", "connect"],
  MoveMetaCreateNestedManyWithoutMetaAilmentInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedOneWithoutMetaInput: ["create", "connectOrCreate", "connect"],
  MoveMetaCategoriesCreateNestedOneWithoutMetaInput: ["create", "connectOrCreate", "connect"],
  MoveMetaAilmentsCreateNestedOneWithoutMetaInput: ["create", "connectOrCreate", "connect"],
  MoveMetaStatChangesCreateNestedManyWithoutMetaInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedOneWithoutMetaStatChangesInput: ["create", "connectOrCreate", "connect"],
  StatsCreateNestedOneWithoutMoveMetaStatChangesInput: ["create", "connectOrCreate", "connect"],
  MoveMetaCreateNestedOneWithoutStatChangesInput: ["create", "connectOrCreate", "connect"],
  MoveFlagMapCreateNestedManyWithoutFlagInput: ["create", "connectOrCreate", "createMany", "connect"],
  MovesCreateNestedOneWithoutFlagMapInput: ["create", "connectOrCreate", "connect"],
  MoveFlagsCreateNestedOneWithoutFlagMapInput: ["create", "connectOrCreate", "connect"],
  NatureBattleStylePreferencesCreateNestedManyWithoutBattleStyleInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemFlagMapCreateNestedManyWithoutFlagInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemsCreateNestedOneWithoutFlagMapInput: ["create", "connectOrCreate", "connect"],
  ItemFlagsCreateNestedOneWithoutFlagMapInput: ["create", "connectOrCreate", "connect"],
  ItemsCreateNestedManyWithoutFlingEffectInput: ["create", "connectOrCreate", "createMany", "connect"],
  ItemsCreateNestedOneWithoutBerriesInput: ["create", "connectOrCreate", "connect"],
  BerryFirmnessCreateNestedOneWithoutBerriesInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutNaturalGiftTypesInput: ["create", "connectOrCreate", "connect"],
  BerryFlavorsCreateNestedManyWithoutBerryInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerriesCreateNestedManyWithoutFirmnessInput: ["create", "connectOrCreate", "createMany", "connect"],
  BerriesCreateNestedOneWithoutFlavorsInput: ["create", "connectOrCreate", "connect"],
  ContestTypesCreateNestedOneWithoutBerryFlavorsInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutBerryFlavorsInput: ["create", "connectOrCreate", "connect"],
  StatsCreateNestedOneWithoutCharacteristicsInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedOneWithoutContestCombosInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedOneWithoutContestCombosSecondInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedOneWithoutSuperContestCombosInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedOneWithoutSuperContestCombosSecondInput: ["create", "connectOrCreate", "connect"],
  PokemonMovesCreateNestedManyWithoutMoveMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupPokemonMoveMethodsCreateNestedManyWithoutMoveMethodInput: ["create", "connectOrCreate", "createMany", "connect"],
  VersionGroupsCreateNestedOneWithoutVersionGroupPokemonMoveMethodsInput: ["create", "connectOrCreate", "connect"],
  PokemonMoveMethodsCreateNestedOneWithoutVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedManyWithoutShapeInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonSpeciesCreateNestedManyWithoutColorInput: ["create", "connectOrCreate", "createMany", "connect"],
  PokemonSpeciesCreateNestedManyWithoutHabitatInput: ["create", "connectOrCreate", "createMany", "connect"],
  TypesCreateNestedOneWithoutEfficacyInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutEfficacyTargetInput: ["create", "connectOrCreate", "connect"],
  VersionGroupsCreateNestedOneWithoutVersionGroupRegionsInput: ["create", "connectOrCreate", "connect"],
  RegionsCreateNestedOneWithoutVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  PokedexesCreateNestedOneWithoutVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  VersionGroupsCreateNestedOneWithoutPokedexVersionGroupsInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutAbilitiesInput: ["create", "connectOrCreate", "connect"],
  AbilitiesCreateNestedOneWithoutPokemonAbilitiesInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutMovesInput: ["create", "connectOrCreate", "connect"],
  VersionGroupsCreateNestedOneWithoutPokemonMovesInput: ["create", "connectOrCreate", "connect"],
  MovesCreateNestedOneWithoutPokemonMovesInput: ["create", "connectOrCreate", "connect"],
  PokemonMoveMethodsCreateNestedOneWithoutPokemonMovesInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutStatsInput: ["create", "connectOrCreate", "connect"],
  StatsCreateNestedOneWithoutPokemonStatsInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutTypesInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutPokemonTypesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutEggGroupsInput: ["create", "connectOrCreate", "connect"],
  EggGroupsCreateNestedOneWithoutSpeciesInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutItemsInput: ["create", "connectOrCreate", "connect"],
  VersionsCreateNestedOneWithoutPokemonItemsInput: ["create", "connectOrCreate", "connect"],
  ItemsCreateNestedOneWithoutPokemonItemsInput: ["create", "connectOrCreate", "connect"],
  PokemonCreateNestedOneWithoutGameIndicesInput: ["create", "connectOrCreate", "connect"],
  VersionsCreateNestedOneWithoutPokemonGameIndicesInput: ["create", "connectOrCreate", "connect"],
  PokemonSpeciesCreateNestedOneWithoutDexNumbersInput: ["create", "connectOrCreate", "connect"],
  PokedexesCreateNestedOneWithoutDexNumbersInput: ["create", "connectOrCreate", "connect"],
  PokemonFormsCreateNestedOneWithoutGenerationsInput: ["create", "connectOrCreate", "connect"],
  GenerationsCreateNestedOneWithoutPokemonFormGenerationsInput: ["create", "connectOrCreate", "connect"],
  PokemonFormsCreateNestedOneWithoutTypesInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutFormTypesInput: ["create", "connectOrCreate", "connect"],
  TypesCreateNestedOneWithoutGameIndicesInput: ["create", "connectOrCreate", "connect"],
  GenerationsCreateNestedOneWithoutTypeGameIndicesInput: ["create", "connectOrCreate", "connect"],
  ItemsCreateNestedOneWithoutGameIndicesInput: ["create", "connectOrCreate", "connect"],
  GenerationsCreateNestedOneWithoutItemGameIndicesInput: ["create", "connectOrCreate", "connect"],
  LocationsCreateNestedOneWithoutGameIndicesInput: ["create", "connectOrCreate", "connect"],
  GenerationsCreateNestedOneWithoutLocationGameIndicesInput: ["create", "connectOrCreate", "connect"],
  LocationAreasCreateNestedOneWithoutEncounterRatesInput: ["create", "connectOrCreate", "connect"],
  EncounterMethodsCreateNestedOneWithoutEncounterRatesInput: ["create", "connectOrCreate", "connect"],
  VersionsCreateNestedOneWithoutLocationAreaEncounterRatesInput: ["create", "connectOrCreate", "connect"],
  NaturesCreateNestedOneWithoutBattleStylePreferencesInput: ["create", "connectOrCreate", "connect"],
  MoveBattleStylesCreateNestedOneWithoutNaturePreferencesInput: ["create", "connectOrCreate", "connect"],
  NestedIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
  NestedIntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedFloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
  NestedIntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedFloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
  NestedStringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
  PokemonSpeciesCreateWithoutPokemonInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonFormsCreateWithoutPokemonInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "versionGroup", "generations", "types"],
  PokemonFormsCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonAbilitiesCreateWithoutPokemonInput: ["is_hidden", "slot", "ability"],
  PokemonAbilitiesCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonMovesCreateWithoutPokemonInput: ["level", "order", "mastery", "versionGroup", "move", "moveMethod"],
  PokemonMovesCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonStatsCreateWithoutPokemonInput: ["base_stat", "effort", "stat"],
  PokemonStatsCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonTypesCreateWithoutPokemonInput: ["slot", "type"],
  PokemonTypesCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonItemsCreateWithoutPokemonInput: ["rarity", "version", "item"],
  PokemonItemsCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonGameIndicesCreateWithoutPokemonInput: ["game_index", "version"],
  PokemonGameIndicesCreateOrConnectWithoutPokemonInput: ["where", "create"],
  EncountersCreateWithoutPokemonInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "conditionValueMap"],
  EncountersCreateOrConnectWithoutPokemonInput: ["where", "create"],
  PokemonSpeciesUpsertWithoutPokemonInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutPokemonInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutPokemonInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonFormsUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonFormsUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonFormsScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "form_identifier", "pokemon_id", "introduced_in_version_group_id", "is_default", "is_battle_only", "is_mega", "form_order", "order"],
  PokemonAbilitiesUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonAbilitiesUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonAbilitiesScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "ability_id", "is_hidden", "slot"],
  PokemonMovesUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonMovesUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonMovesScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_group_id", "move_id", "pokemon_move_method_id", "level", "order", "mastery"],
  PokemonStatsUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonStatsUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonStatsScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "stat_id", "base_stat", "effort"],
  PokemonTypesUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonTypesUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonTypesScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "type_id", "slot"],
  PokemonItemsUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonItemsUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonItemsScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "item_id", "rarity"],
  PokemonGameIndicesUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  PokemonGameIndicesUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  PokemonGameIndicesScalarWhereInput: ["AND", "OR", "NOT", "pokemon_id", "version_id", "game_index"],
  EncountersUpsertWithWhereUniqueWithoutPokemonInput: ["where", "update", "create"],
  EncountersUpdateWithWhereUniqueWithoutPokemonInput: ["where", "data"],
  EncountersScalarWhereInput: ["AND", "OR", "NOT", "id", "version_id", "location_area_id", "encounter_slot_id", "pokemon_id", "min_level", "max_level"],
  GenerationsCreateWithoutPokemonSpeciesInput: ["id", "identifier", "region", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutPokemonSpeciesInput: ["where", "create"],
  PokemonSpeciesCreateWithoutEvolvesToInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEvolvesToInput: ["where", "create"],
  PokemonSpeciesCreateWithoutEvolvesFromInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEvolvesFromInput: ["where", "create"],
  EvolutionChainsCreateWithoutSpeciesInput: ["id", "babyTriggerItem"],
  EvolutionChainsCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonColorsCreateWithoutSpeciesInput: ["id", "identifier"],
  PokemonColorsCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonShapesCreateWithoutSpeciesInput: ["id", "identifier"],
  PokemonShapesCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonHabitatsCreateWithoutSpeciesInput: ["id", "identifier"],
  PokemonHabitatsCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  GrowthRatesCreateWithoutSpeciesInput: ["id", "identifier", "formula", "experience"],
  GrowthRatesCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonCreateWithoutSpeciesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonEggGroupsCreateWithoutSpeciesInput: ["eggGroup"],
  PokemonEggGroupsCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonDexNumbersCreateWithoutSpeciesInput: ["pokedex_number", "pokedex"],
  PokemonDexNumbersCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonEvolutionCreateWithoutEvolvedSpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutEvolvedSpeciesInput: ["where", "create"],
  PokemonEvolutionCreateWithoutPartySpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutPartySpeciesInput: ["where", "create"],
  PokemonEvolutionCreateWithoutTradeSpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType"],
  PokemonEvolutionCreateOrConnectWithoutTradeSpeciesInput: ["where", "create"],
  GenerationsUpsertWithoutPokemonSpeciesInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutPokemonSpeciesInput: ["where", "data"],
  GenerationsUpdateWithoutPokemonSpeciesInput: ["id", "identifier", "region", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  PokemonSpeciesUpsertWithoutEvolvesToInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutEvolvesToInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutEvolvesToInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutEvolvesFromInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutEvolvesFromInput: ["where", "data"],
  PokemonSpeciesScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "evolves_from_species_id", "evolution_chain_id", "color_id", "shape_id", "habitat_id", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "growth_rate_id", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order"],
  EvolutionChainsUpsertWithoutSpeciesInput: ["update", "create", "where"],
  EvolutionChainsUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  EvolutionChainsUpdateWithoutSpeciesInput: ["id", "babyTriggerItem"],
  PokemonColorsUpsertWithoutSpeciesInput: ["update", "create", "where"],
  PokemonColorsUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  PokemonColorsUpdateWithoutSpeciesInput: ["id", "identifier"],
  PokemonShapesUpsertWithoutSpeciesInput: ["update", "create", "where"],
  PokemonShapesUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  PokemonShapesUpdateWithoutSpeciesInput: ["id", "identifier"],
  PokemonHabitatsUpsertWithoutSpeciesInput: ["update", "create", "where"],
  PokemonHabitatsUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  PokemonHabitatsUpdateWithoutSpeciesInput: ["id", "identifier"],
  GrowthRatesUpsertWithoutSpeciesInput: ["update", "create", "where"],
  GrowthRatesUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  GrowthRatesUpdateWithoutSpeciesInput: ["id", "identifier", "formula", "experience"],
  PokemonUpsertWithWhereUniqueWithoutSpeciesInput: ["where", "update", "create"],
  PokemonUpdateWithWhereUniqueWithoutSpeciesInput: ["where", "data"],
  PokemonScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "species_id", "height", "weight", "base_experience", "order", "is_default"],
  PokemonEggGroupsUpsertWithWhereUniqueWithoutSpeciesInput: ["where", "update", "create"],
  PokemonEggGroupsUpdateWithWhereUniqueWithoutSpeciesInput: ["where", "data"],
  PokemonEggGroupsScalarWhereInput: ["AND", "OR", "NOT", "species_id", "egg_group_id"],
  PokemonDexNumbersUpsertWithWhereUniqueWithoutSpeciesInput: ["where", "update", "create"],
  PokemonDexNumbersUpdateWithWhereUniqueWithoutSpeciesInput: ["where", "data"],
  PokemonDexNumbersScalarWhereInput: ["AND", "OR", "NOT", "species_id", "pokedex_id", "pokedex_number"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutEvolvedSpeciesInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutEvolvedSpeciesInput: ["where", "data"],
  PokemonEvolutionScalarWhereInput: ["AND", "OR", "NOT", "id", "evolved_species_id", "evolution_trigger_id", "trigger_item_id", "minimum_level", "gender_id", "location_id", "held_item_id", "time_of_day", "known_move_id", "known_move_type_id", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "party_species_id", "party_type_id", "trade_species_id", "needs_overworld_rain", "turn_upside_down"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutPartySpeciesInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutPartySpeciesInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutTradeSpeciesInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutTradeSpeciesInput: ["where", "data"],
  PokemonCreateWithoutFormsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutFormsInput: ["where", "create"],
  VersionGroupsCreateWithoutPokemonFormsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves"],
  VersionGroupsCreateOrConnectWithoutPokemonFormsInput: ["where", "create"],
  PokemonFormGenerationsCreateWithoutPokemonFormInput: ["game_index", "generation"],
  PokemonFormGenerationsCreateOrConnectWithoutPokemonFormInput: ["where", "create"],
  PokemonFormTypesCreateWithoutPokemonFormInput: ["slot", "type"],
  PokemonFormTypesCreateOrConnectWithoutPokemonFormInput: ["where", "create"],
  PokemonUpsertWithoutFormsInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutFormsInput: ["where", "data"],
  PokemonUpdateWithoutFormsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  VersionGroupsUpsertWithoutPokemonFormsInput: ["update", "create", "where"],
  VersionGroupsUpdateToOneWithWhereWithoutPokemonFormsInput: ["where", "data"],
  VersionGroupsUpdateWithoutPokemonFormsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves"],
  PokemonFormGenerationsUpsertWithWhereUniqueWithoutPokemonFormInput: ["where", "update", "create"],
  PokemonFormGenerationsUpdateWithWhereUniqueWithoutPokemonFormInput: ["where", "data"],
  PokemonFormGenerationsScalarWhereInput: ["AND", "OR", "NOT", "pokemon_form_id", "generation_id", "game_index"],
  PokemonFormTypesUpsertWithWhereUniqueWithoutPokemonFormInput: ["where", "update", "create"],
  PokemonFormTypesUpdateWithWhereUniqueWithoutPokemonFormInput: ["where", "data"],
  PokemonFormTypesScalarWhereInput: ["AND", "OR", "NOT", "pokemon_form_id", "type_id", "slot"],
  GenerationsCreateWithoutMovesInput: ["id", "identifier", "region", "pokemonSpecies", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutMovesInput: ["where", "create"],
  TypesCreateWithoutMovesInput: ["id", "identifier", "generation", "damageClass", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutMovesInput: ["where", "create"],
  MoveTargetsCreateWithoutMovesInput: ["id", "identifier"],
  MoveTargetsCreateOrConnectWithoutMovesInput: ["where", "create"],
  MoveDamageClassesCreateWithoutMovesInput: ["id", "identifier", "types"],
  MoveDamageClassesCreateOrConnectWithoutMovesInput: ["where", "create"],
  MoveEffectsCreateWithoutMovesInput: ["id"],
  MoveEffectsCreateOrConnectWithoutMovesInput: ["where", "create"],
  ContestTypesCreateWithoutMovesInput: ["id", "identifier", "berryFlavors"],
  ContestTypesCreateOrConnectWithoutMovesInput: ["where", "create"],
  ContestEffectsCreateWithoutMovesInput: ["id", "appeal", "jam"],
  ContestEffectsCreateOrConnectWithoutMovesInput: ["where", "create"],
  SuperContestEffectsCreateWithoutMovesInput: ["id", "appeal"],
  SuperContestEffectsCreateOrConnectWithoutMovesInput: ["where", "create"],
  PokemonMovesCreateWithoutMoveInput: ["level", "order", "mastery", "pokemon", "versionGroup", "moveMethod"],
  PokemonMovesCreateOrConnectWithoutMoveInput: ["where", "create"],
  MachinesCreateWithoutMoveInput: ["machine_number", "versionGroup", "item"],
  MachinesCreateOrConnectWithoutMoveInput: ["where", "create"],
  MoveMetaCreateWithoutMoveInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaCreateOrConnectWithoutMoveInput: ["where", "create"],
  MoveMetaStatChangesCreateWithoutMoveInput: ["change", "stat", "meta"],
  MoveMetaStatChangesCreateOrConnectWithoutMoveInput: ["where", "create"],
  MoveFlagMapCreateWithoutMoveInput: ["flag"],
  MoveFlagMapCreateOrConnectWithoutMoveInput: ["where", "create"],
  ContestCombosCreateWithoutFirstMoveInput: ["secondMove"],
  ContestCombosCreateOrConnectWithoutFirstMoveInput: ["where", "create"],
  ContestCombosCreateWithoutSecondMoveInput: ["firstMove"],
  ContestCombosCreateOrConnectWithoutSecondMoveInput: ["where", "create"],
  SuperContestCombosCreateWithoutFirstMoveInput: ["secondMove"],
  SuperContestCombosCreateOrConnectWithoutFirstMoveInput: ["where", "create"],
  SuperContestCombosCreateWithoutSecondMoveInput: ["firstMove"],
  SuperContestCombosCreateOrConnectWithoutSecondMoveInput: ["where", "create"],
  PokemonEvolutionCreateWithoutKnownMoveInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutKnownMoveInput: ["where", "create"],
  GenerationsUpsertWithoutMovesInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  GenerationsUpdateWithoutMovesInput: ["id", "identifier", "region", "pokemonSpecies", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  TypesUpsertWithoutMovesInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  TypesUpdateWithoutMovesInput: ["id", "identifier", "generation", "damageClass", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  MoveTargetsUpsertWithoutMovesInput: ["update", "create", "where"],
  MoveTargetsUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  MoveTargetsUpdateWithoutMovesInput: ["id", "identifier"],
  MoveDamageClassesUpsertWithoutMovesInput: ["update", "create", "where"],
  MoveDamageClassesUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  MoveDamageClassesUpdateWithoutMovesInput: ["id", "identifier", "types"],
  MoveEffectsUpsertWithoutMovesInput: ["update", "create", "where"],
  MoveEffectsUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  MoveEffectsUpdateWithoutMovesInput: ["id"],
  ContestTypesUpsertWithoutMovesInput: ["update", "create", "where"],
  ContestTypesUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  ContestTypesUpdateWithoutMovesInput: ["id", "identifier", "berryFlavors"],
  ContestEffectsUpsertWithoutMovesInput: ["update", "create", "where"],
  ContestEffectsUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  ContestEffectsUpdateWithoutMovesInput: ["id", "appeal", "jam"],
  SuperContestEffectsUpsertWithoutMovesInput: ["update", "create", "where"],
  SuperContestEffectsUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  SuperContestEffectsUpdateWithoutMovesInput: ["id", "appeal"],
  PokemonMovesUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  PokemonMovesUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MachinesUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  MachinesUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MachinesScalarWhereInput: ["AND", "OR", "NOT", "machine_number", "version_group_id", "item_id", "move_id"],
  MoveMetaUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  MoveMetaUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MoveMetaScalarWhereInput: ["AND", "OR", "NOT", "move_id", "meta_category_id", "meta_ailment_id", "min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance"],
  MoveMetaStatChangesUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  MoveMetaStatChangesUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MoveMetaStatChangesScalarWhereInput: ["AND", "OR", "NOT", "move_id", "stat_id", "change"],
  MoveFlagMapUpsertWithWhereUniqueWithoutMoveInput: ["where", "update", "create"],
  MoveFlagMapUpdateWithWhereUniqueWithoutMoveInput: ["where", "data"],
  MoveFlagMapScalarWhereInput: ["AND", "OR", "NOT", "move_id", "move_flag_id"],
  ContestCombosUpsertWithWhereUniqueWithoutFirstMoveInput: ["where", "update", "create"],
  ContestCombosUpdateWithWhereUniqueWithoutFirstMoveInput: ["where", "data"],
  ContestCombosScalarWhereInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id"],
  ContestCombosUpsertWithWhereUniqueWithoutSecondMoveInput: ["where", "update", "create"],
  ContestCombosUpdateWithWhereUniqueWithoutSecondMoveInput: ["where", "data"],
  SuperContestCombosUpsertWithWhereUniqueWithoutFirstMoveInput: ["where", "update", "create"],
  SuperContestCombosUpdateWithWhereUniqueWithoutFirstMoveInput: ["where", "data"],
  SuperContestCombosScalarWhereInput: ["AND", "OR", "NOT", "first_move_id", "second_move_id"],
  SuperContestCombosUpsertWithWhereUniqueWithoutSecondMoveInput: ["where", "update", "create"],
  SuperContestCombosUpdateWithWhereUniqueWithoutSecondMoveInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutKnownMoveInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutKnownMoveInput: ["where", "data"],
  MovesCreateWithoutEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutEffectInput: ["where", "create"],
  MovesUpsertWithWhereUniqueWithoutEffectInput: ["where", "update", "create"],
  MovesUpdateWithWhereUniqueWithoutEffectInput: ["where", "data"],
  MovesScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "type_id", "power", "pp", "accuracy", "priority", "target_id", "damage_class_id", "effect_id", "effect_chance", "contest_type_id", "contest_effect_id", "super_contest_effect_id"],
  MovesCreateWithoutTargetInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutTargetInput: ["where", "create"],
  MovesUpsertWithWhereUniqueWithoutTargetInput: ["where", "update", "create"],
  MovesUpdateWithWhereUniqueWithoutTargetInput: ["where", "data"],
  MovesCreateWithoutDamageClassInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutDamageClassInput: ["where", "create"],
  TypesCreateWithoutDamageClassInput: ["id", "identifier", "generation", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutDamageClassInput: ["where", "create"],
  MovesUpsertWithWhereUniqueWithoutDamageClassInput: ["where", "update", "create"],
  MovesUpdateWithWhereUniqueWithoutDamageClassInput: ["where", "data"],
  TypesUpsertWithWhereUniqueWithoutDamageClassInput: ["where", "update", "create"],
  TypesUpdateWithWhereUniqueWithoutDamageClassInput: ["where", "data"],
  TypesScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "damage_class_id"],
  GenerationsCreateWithoutTypesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutTypesInput: ["where", "create"],
  MoveDamageClassesCreateWithoutTypesInput: ["id", "identifier", "moves"],
  MoveDamageClassesCreateOrConnectWithoutTypesInput: ["where", "create"],
  MovesCreateWithoutTypeInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutTypeInput: ["where", "create"],
  PokemonTypesCreateWithoutTypeInput: ["slot", "pokemon"],
  PokemonTypesCreateOrConnectWithoutTypeInput: ["where", "create"],
  PokemonFormTypesCreateWithoutTypeInput: ["slot", "pokemonForm"],
  PokemonFormTypesCreateOrConnectWithoutTypeInput: ["where", "create"],
  TypeGameIndicesCreateWithoutTypeInput: ["game_index", "generation"],
  TypeGameIndicesCreateOrConnectWithoutTypeInput: ["where", "create"],
  TypeEfficacyCreateWithoutDamageTypeInput: ["damage_factor", "targetType"],
  TypeEfficacyCreateOrConnectWithoutDamageTypeInput: ["where", "create"],
  TypeEfficacyCreateWithoutTargetTypeInput: ["damage_factor", "damageType"],
  TypeEfficacyCreateOrConnectWithoutTargetTypeInput: ["where", "create"],
  BerryFlavorsCreateWithoutTypeInput: ["flavor", "berry", "contestType"],
  BerryFlavorsCreateOrConnectWithoutTypeInput: ["where", "create"],
  NaturesCreateWithoutDecreasedStatTypesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "increasedStatTypes"],
  NaturesCreateOrConnectWithoutDecreasedStatTypesInput: ["where", "create"],
  NaturesCreateWithoutIncreasedStatTypesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes"],
  NaturesCreateOrConnectWithoutIncreasedStatTypesInput: ["where", "create"],
  PokemonEvolutionCreateWithoutKnownMoveTypeInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutKnownMoveTypeInput: ["where", "create"],
  PokemonEvolutionCreateWithoutPartyTypeInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutPartyTypeInput: ["where", "create"],
  BerriesCreateWithoutNaturalGiftTypeInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "flavors"],
  BerriesCreateOrConnectWithoutNaturalGiftTypeInput: ["where", "create"],
  GenerationsUpsertWithoutTypesInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutTypesInput: ["where", "data"],
  GenerationsUpdateWithoutTypesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  MoveDamageClassesUpsertWithoutTypesInput: ["update", "create", "where"],
  MoveDamageClassesUpdateToOneWithWhereWithoutTypesInput: ["where", "data"],
  MoveDamageClassesUpdateWithoutTypesInput: ["id", "identifier", "moves"],
  MovesUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  MovesUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  PokemonTypesUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  PokemonTypesUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  PokemonFormTypesUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  PokemonFormTypesUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  TypeGameIndicesUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  TypeGameIndicesUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  TypeGameIndicesScalarWhereInput: ["AND", "OR", "NOT", "type_id", "generation_id", "game_index"],
  TypeEfficacyUpsertWithWhereUniqueWithoutDamageTypeInput: ["where", "update", "create"],
  TypeEfficacyUpdateWithWhereUniqueWithoutDamageTypeInput: ["where", "data"],
  TypeEfficacyScalarWhereInput: ["AND", "OR", "NOT", "damage_type_id", "target_type_id", "damage_factor"],
  TypeEfficacyUpsertWithWhereUniqueWithoutTargetTypeInput: ["where", "update", "create"],
  TypeEfficacyUpdateWithWhereUniqueWithoutTargetTypeInput: ["where", "data"],
  BerryFlavorsUpsertWithWhereUniqueWithoutTypeInput: ["where", "update", "create"],
  BerryFlavorsUpdateWithWhereUniqueWithoutTypeInput: ["where", "data"],
  BerryFlavorsScalarWhereInput: ["AND", "OR", "NOT", "berry_id", "contest_type_id", "flavor"],
  NaturesUpsertWithWhereUniqueWithoutDecreasedStatTypesInput: ["where", "update", "create"],
  NaturesUpdateWithWhereUniqueWithoutDecreasedStatTypesInput: ["where", "data"],
  NaturesScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "decreased_stat_id", "increased_stat_id", "hates_flavor_id", "likes_flavor_id", "game_index"],
  NaturesUpsertWithWhereUniqueWithoutIncreasedStatTypesInput: ["where", "update", "create"],
  NaturesUpdateWithWhereUniqueWithoutIncreasedStatTypesInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutKnownMoveTypeInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutKnownMoveTypeInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutPartyTypeInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutPartyTypeInput: ["where", "data"],
  BerriesUpsertWithWhereUniqueWithoutNaturalGiftTypeInput: ["where", "update", "create"],
  BerriesUpdateWithWhereUniqueWithoutNaturalGiftTypeInput: ["where", "data"],
  BerriesScalarWhereInput: ["AND", "OR", "NOT", "id", "item_id", "firmness_id", "natural_gift_power", "natural_gift_type_id", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness"],
  GenerationsCreateWithoutAbilitiesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutAbilitiesInput: ["where", "create"],
  PokemonAbilitiesCreateWithoutAbilityInput: ["is_hidden", "slot", "pokemon"],
  PokemonAbilitiesCreateOrConnectWithoutAbilityInput: ["where", "create"],
  GenerationsUpsertWithoutAbilitiesInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutAbilitiesInput: ["where", "data"],
  GenerationsUpdateWithoutAbilitiesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  PokemonAbilitiesUpsertWithWhereUniqueWithoutAbilityInput: ["where", "update", "create"],
  PokemonAbilitiesUpdateWithWhereUniqueWithoutAbilityInput: ["where", "data"],
  ItemCategoriesCreateWithoutItemsInput: ["id", "identifier", "pocket"],
  ItemCategoriesCreateOrConnectWithoutItemsInput: ["where", "create"],
  ItemFlingEffectsCreateWithoutItemsInput: ["id", "identifier"],
  ItemFlingEffectsCreateOrConnectWithoutItemsInput: ["where", "create"],
  PokemonItemsCreateWithoutItemInput: ["rarity", "pokemon", "version"],
  PokemonItemsCreateOrConnectWithoutItemInput: ["where", "create"],
  MachinesCreateWithoutItemInput: ["machine_number", "versionGroup", "move"],
  MachinesCreateOrConnectWithoutItemInput: ["where", "create"],
  BerriesCreateWithoutItemInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "firmness", "naturalGiftType", "flavors"],
  BerriesCreateOrConnectWithoutItemInput: ["where", "create"],
  ItemGameIndicesCreateWithoutItemInput: ["game_index", "generation"],
  ItemGameIndicesCreateOrConnectWithoutItemInput: ["where", "create"],
  ItemFlagMapCreateWithoutItemInput: ["flag"],
  ItemFlagMapCreateOrConnectWithoutItemInput: ["where", "create"],
  EvolutionChainsCreateWithoutBabyTriggerItemInput: ["id", "species"],
  EvolutionChainsCreateOrConnectWithoutBabyTriggerItemInput: ["where", "create"],
  PokemonEvolutionCreateWithoutTriggerItemInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutTriggerItemInput: ["where", "create"],
  PokemonEvolutionCreateWithoutHeldItemInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutHeldItemInput: ["where", "create"],
  ItemCategoriesUpsertWithoutItemsInput: ["update", "create", "where"],
  ItemCategoriesUpdateToOneWithWhereWithoutItemsInput: ["where", "data"],
  ItemCategoriesUpdateWithoutItemsInput: ["id", "identifier", "pocket"],
  ItemFlingEffectsUpsertWithoutItemsInput: ["update", "create", "where"],
  ItemFlingEffectsUpdateToOneWithWhereWithoutItemsInput: ["where", "data"],
  ItemFlingEffectsUpdateWithoutItemsInput: ["id", "identifier"],
  PokemonItemsUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  PokemonItemsUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  MachinesUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  MachinesUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  BerriesUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  BerriesUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  ItemGameIndicesUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  ItemGameIndicesUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  ItemGameIndicesScalarWhereInput: ["AND", "OR", "NOT", "item_id", "generation_id", "game_index"],
  ItemFlagMapUpsertWithWhereUniqueWithoutItemInput: ["where", "update", "create"],
  ItemFlagMapUpdateWithWhereUniqueWithoutItemInput: ["where", "data"],
  ItemFlagMapScalarWhereInput: ["AND", "OR", "NOT", "item_id", "item_flag_id"],
  EvolutionChainsUpsertWithWhereUniqueWithoutBabyTriggerItemInput: ["where", "update", "create"],
  EvolutionChainsUpdateWithWhereUniqueWithoutBabyTriggerItemInput: ["where", "data"],
  EvolutionChainsScalarWhereInput: ["AND", "OR", "NOT", "id", "baby_trigger_item_id"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutTriggerItemInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutTriggerItemInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutHeldItemInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutHeldItemInput: ["where", "data"],
  ItemPocketsCreateWithoutCategoriesInput: ["id", "identifier"],
  ItemPocketsCreateOrConnectWithoutCategoriesInput: ["where", "create"],
  ItemsCreateWithoutCategoryInput: ["id", "identifier", "cost", "fling_power", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutCategoryInput: ["where", "create"],
  ItemPocketsUpsertWithoutCategoriesInput: ["update", "create", "where"],
  ItemPocketsUpdateToOneWithWhereWithoutCategoriesInput: ["where", "data"],
  ItemPocketsUpdateWithoutCategoriesInput: ["id", "identifier"],
  ItemsUpsertWithWhereUniqueWithoutCategoryInput: ["where", "update", "create"],
  ItemsUpdateWithWhereUniqueWithoutCategoryInput: ["where", "data"],
  ItemsScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "category_id", "cost", "fling_power", "fling_effect_id"],
  ItemCategoriesCreateWithoutPocketInput: ["id", "identifier", "items"],
  ItemCategoriesCreateOrConnectWithoutPocketInput: ["where", "create"],
  ItemCategoriesUpsertWithWhereUniqueWithoutPocketInput: ["where", "update", "create"],
  ItemCategoriesUpdateWithWhereUniqueWithoutPocketInput: ["where", "data"],
  ItemCategoriesScalarWhereInput: ["AND", "OR", "NOT", "id", "pocket_id", "identifier"],
  PokemonStatsCreateWithoutStatInput: ["base_stat", "effort", "pokemon"],
  PokemonStatsCreateOrConnectWithoutStatInput: ["where", "create"],
  MoveMetaStatChangesCreateWithoutStatInput: ["change", "move", "meta"],
  MoveMetaStatChangesCreateOrConnectWithoutStatInput: ["where", "create"],
  CharacteristicsCreateWithoutStatInput: ["id", "gene_mod_5"],
  CharacteristicsCreateOrConnectWithoutStatInput: ["where", "create"],
  NaturesCreateWithoutDecreasedStatInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NaturesCreateOrConnectWithoutDecreasedStatInput: ["where", "create"],
  NaturesCreateWithoutIncreasedStatInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NaturesCreateOrConnectWithoutIncreasedStatInput: ["where", "create"],
  PokemonStatsUpsertWithWhereUniqueWithoutStatInput: ["where", "update", "create"],
  PokemonStatsUpdateWithWhereUniqueWithoutStatInput: ["where", "data"],
  MoveMetaStatChangesUpsertWithWhereUniqueWithoutStatInput: ["where", "update", "create"],
  MoveMetaStatChangesUpdateWithWhereUniqueWithoutStatInput: ["where", "data"],
  CharacteristicsUpsertWithWhereUniqueWithoutStatInput: ["where", "update", "create"],
  CharacteristicsUpdateWithWhereUniqueWithoutStatInput: ["where", "data"],
  CharacteristicsScalarWhereInput: ["AND", "OR", "NOT", "id", "stat_id", "gene_mod_5"],
  NaturesUpsertWithWhereUniqueWithoutDecreasedStatInput: ["where", "update", "create"],
  NaturesUpdateWithWhereUniqueWithoutDecreasedStatInput: ["where", "data"],
  NaturesUpsertWithWhereUniqueWithoutIncreasedStatInput: ["where", "update", "create"],
  NaturesUpdateWithWhereUniqueWithoutIncreasedStatInput: ["where", "data"],
  RegionsCreateWithoutGenerationsInput: ["id", "identifier", "locations", "pokedexes", "versionGroups"],
  RegionsCreateOrConnectWithoutGenerationsInput: ["where", "create"],
  PokemonSpeciesCreateWithoutGenerationInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutGenerationInput: ["where", "create"],
  MovesCreateWithoutGenerationInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutGenerationInput: ["where", "create"],
  TypesCreateWithoutGenerationInput: ["id", "identifier", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutGenerationInput: ["where", "create"],
  AbilitiesCreateWithoutGenerationInput: ["id", "identifier", "is_main_series", "pokemonAbilities"],
  AbilitiesCreateOrConnectWithoutGenerationInput: ["where", "create"],
  PokemonFormGenerationsCreateWithoutGenerationInput: ["game_index", "pokemonForm"],
  PokemonFormGenerationsCreateOrConnectWithoutGenerationInput: ["where", "create"],
  ItemGameIndicesCreateWithoutGenerationInput: ["game_index", "item"],
  ItemGameIndicesCreateOrConnectWithoutGenerationInput: ["where", "create"],
  TypeGameIndicesCreateWithoutGenerationInput: ["game_index", "type"],
  TypeGameIndicesCreateOrConnectWithoutGenerationInput: ["where", "create"],
  LocationGameIndicesCreateWithoutGenerationInput: ["game_index", "location"],
  LocationGameIndicesCreateOrConnectWithoutGenerationInput: ["where", "create"],
  VersionGroupsCreateWithoutGenerationInput: ["id", "identifier", "order", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsCreateOrConnectWithoutGenerationInput: ["where", "create"],
  RegionsUpsertWithoutGenerationsInput: ["update", "create", "where"],
  RegionsUpdateToOneWithWhereWithoutGenerationsInput: ["where", "data"],
  RegionsUpdateWithoutGenerationsInput: ["id", "identifier", "locations", "pokedexes", "versionGroups"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  MovesUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  MovesUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  TypesUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  TypesUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  AbilitiesUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  AbilitiesUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  AbilitiesScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "is_main_series"],
  PokemonFormGenerationsUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  PokemonFormGenerationsUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  ItemGameIndicesUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  ItemGameIndicesUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  TypeGameIndicesUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  TypeGameIndicesUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  LocationGameIndicesUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  LocationGameIndicesUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  LocationGameIndicesScalarWhereInput: ["AND", "OR", "NOT", "location_id", "generation_id", "game_index"],
  VersionGroupsUpsertWithWhereUniqueWithoutGenerationInput: ["where", "update", "create"],
  VersionGroupsUpdateWithWhereUniqueWithoutGenerationInput: ["where", "data"],
  VersionGroupsScalarWhereInput: ["AND", "OR", "NOT", "id", "identifier", "generation_id", "order"],
  GenerationsCreateWithoutVersionGroupsInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices"],
  GenerationsCreateOrConnectWithoutVersionGroupsInput: ["where", "create"],
  VersionsCreateWithoutVersionGroupInput: ["id", "identifier", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionsCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  EncounterSlotsCreateWithoutVersionGroupInput: ["id", "slot", "rarity", "encounterMethod", "encounters"],
  EncounterSlotsCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  MachinesCreateWithoutVersionGroupInput: ["machine_number", "item", "move"],
  MachinesCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  VersionGroupPokemonMoveMethodsCreateWithoutVersionGroupInput: ["moveMethod"],
  VersionGroupPokemonMoveMethodsCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  VersionGroupRegionsCreateWithoutVersionGroupInput: ["region"],
  VersionGroupRegionsCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  PokedexVersionGroupsCreateWithoutVersionGroupInput: ["pokedex"],
  PokedexVersionGroupsCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  PokemonMovesCreateWithoutVersionGroupInput: ["level", "order", "mastery", "pokemon", "move", "moveMethod"],
  PokemonMovesCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  PokemonFormsCreateWithoutVersionGroupInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "generations", "types"],
  PokemonFormsCreateOrConnectWithoutVersionGroupInput: ["where", "create"],
  GenerationsUpsertWithoutVersionGroupsInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutVersionGroupsInput: ["where", "data"],
  GenerationsUpdateWithoutVersionGroupsInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices"],
  VersionsUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  VersionsUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionsScalarWhereInput: ["AND", "OR", "NOT", "id", "version_group_id", "identifier"],
  EncounterSlotsUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  EncounterSlotsUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  EncounterSlotsScalarWhereInput: ["AND", "OR", "NOT", "id", "version_group_id", "encounter_method_id", "slot", "rarity"],
  MachinesUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  MachinesUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionGroupPokemonMoveMethodsUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  VersionGroupPokemonMoveMethodsUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionGroupPokemonMoveMethodsScalarWhereInput: ["AND", "OR", "NOT", "version_group_id", "pokemon_move_method_id"],
  VersionGroupRegionsUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  VersionGroupRegionsUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionGroupRegionsScalarWhereInput: ["AND", "OR", "NOT", "version_group_id", "region_id"],
  PokedexVersionGroupsUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  PokedexVersionGroupsUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  PokedexVersionGroupsScalarWhereInput: ["AND", "OR", "NOT", "pokedex_id", "version_group_id"],
  PokemonMovesUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  PokemonMovesUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  PokemonFormsUpsertWithWhereUniqueWithoutVersionGroupInput: ["where", "update", "create"],
  PokemonFormsUpdateWithWhereUniqueWithoutVersionGroupInput: ["where", "data"],
  VersionGroupsCreateWithoutVersionsInput: ["id", "identifier", "order", "generation", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsCreateOrConnectWithoutVersionsInput: ["where", "create"],
  EncountersCreateWithoutVersionInput: ["id", "min_level", "max_level", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  EncountersCreateOrConnectWithoutVersionInput: ["where", "create"],
  PokemonItemsCreateWithoutVersionInput: ["rarity", "pokemon", "item"],
  PokemonItemsCreateOrConnectWithoutVersionInput: ["where", "create"],
  PokemonGameIndicesCreateWithoutVersionInput: ["game_index", "pokemon"],
  PokemonGameIndicesCreateOrConnectWithoutVersionInput: ["where", "create"],
  LocationAreaEncounterRatesCreateWithoutVersionInput: ["rate", "locationArea", "encounterMethod"],
  LocationAreaEncounterRatesCreateOrConnectWithoutVersionInput: ["where", "create"],
  VersionGroupsUpsertWithoutVersionsInput: ["update", "create", "where"],
  VersionGroupsUpdateToOneWithWhereWithoutVersionsInput: ["where", "data"],
  VersionGroupsUpdateWithoutVersionsInput: ["id", "identifier", "order", "generation", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  EncountersUpsertWithWhereUniqueWithoutVersionInput: ["where", "update", "create"],
  EncountersUpdateWithWhereUniqueWithoutVersionInput: ["where", "data"],
  PokemonItemsUpsertWithWhereUniqueWithoutVersionInput: ["where", "update", "create"],
  PokemonItemsUpdateWithWhereUniqueWithoutVersionInput: ["where", "data"],
  PokemonGameIndicesUpsertWithWhereUniqueWithoutVersionInput: ["where", "update", "create"],
  PokemonGameIndicesUpdateWithWhereUniqueWithoutVersionInput: ["where", "data"],
  LocationAreaEncounterRatesUpsertWithWhereUniqueWithoutVersionInput: ["where", "update", "create"],
  LocationAreaEncounterRatesUpdateWithWhereUniqueWithoutVersionInput: ["where", "data"],
  LocationAreaEncounterRatesScalarWhereInput: ["AND", "OR", "NOT", "location_area_id", "encounter_method_id", "version_id", "rate"],
  GenerationsCreateWithoutRegionInput: ["id", "identifier", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutRegionInput: ["where", "create"],
  LocationsCreateWithoutRegionInput: ["id", "identifier", "areas", "gameIndices", "evolution"],
  LocationsCreateOrConnectWithoutRegionInput: ["where", "create"],
  PokedexesCreateWithoutRegionInput: ["id", "identifier", "is_main_series", "dexNumbers", "versionGroups"],
  PokedexesCreateOrConnectWithoutRegionInput: ["where", "create"],
  VersionGroupRegionsCreateWithoutRegionInput: ["versionGroup"],
  VersionGroupRegionsCreateOrConnectWithoutRegionInput: ["where", "create"],
  GenerationsUpsertWithWhereUniqueWithoutRegionInput: ["where", "update", "create"],
  GenerationsUpdateWithWhereUniqueWithoutRegionInput: ["where", "data"],
  GenerationsScalarWhereInput: ["AND", "OR", "NOT", "id", "main_region_id", "identifier"],
  LocationsUpsertWithWhereUniqueWithoutRegionInput: ["where", "update", "create"],
  LocationsUpdateWithWhereUniqueWithoutRegionInput: ["where", "data"],
  LocationsScalarWhereInput: ["AND", "OR", "NOT", "id", "region_id", "identifier"],
  PokedexesUpsertWithWhereUniqueWithoutRegionInput: ["where", "update", "create"],
  PokedexesUpdateWithWhereUniqueWithoutRegionInput: ["where", "data"],
  PokedexesScalarWhereInput: ["AND", "OR", "NOT", "id", "region_id", "identifier", "is_main_series"],
  VersionGroupRegionsUpsertWithWhereUniqueWithoutRegionInput: ["where", "update", "create"],
  VersionGroupRegionsUpdateWithWhereUniqueWithoutRegionInput: ["where", "data"],
  RegionsCreateWithoutLocationsInput: ["id", "identifier", "generations", "pokedexes", "versionGroups"],
  RegionsCreateOrConnectWithoutLocationsInput: ["where", "create"],
  LocationAreasCreateWithoutLocationInput: ["id", "game_index", "identifier", "encounters", "encounterRates"],
  LocationAreasCreateOrConnectWithoutLocationInput: ["where", "create"],
  LocationGameIndicesCreateWithoutLocationInput: ["game_index", "generation"],
  LocationGameIndicesCreateOrConnectWithoutLocationInput: ["where", "create"],
  PokemonEvolutionCreateWithoutLocationInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutLocationInput: ["where", "create"],
  RegionsUpsertWithoutLocationsInput: ["update", "create", "where"],
  RegionsUpdateToOneWithWhereWithoutLocationsInput: ["where", "data"],
  RegionsUpdateWithoutLocationsInput: ["id", "identifier", "generations", "pokedexes", "versionGroups"],
  LocationAreasUpsertWithWhereUniqueWithoutLocationInput: ["where", "update", "create"],
  LocationAreasUpdateWithWhereUniqueWithoutLocationInput: ["where", "data"],
  LocationAreasScalarWhereInput: ["AND", "OR", "NOT", "id", "location_id", "game_index", "identifier"],
  LocationGameIndicesUpsertWithWhereUniqueWithoutLocationInput: ["where", "update", "create"],
  LocationGameIndicesUpdateWithWhereUniqueWithoutLocationInput: ["where", "data"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutLocationInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutLocationInput: ["where", "data"],
  LocationsCreateWithoutAreasInput: ["id", "identifier", "region", "gameIndices", "evolution"],
  LocationsCreateOrConnectWithoutAreasInput: ["where", "create"],
  EncountersCreateWithoutLocationAreaInput: ["id", "min_level", "max_level", "version", "encounterSlot", "pokemon", "conditionValueMap"],
  EncountersCreateOrConnectWithoutLocationAreaInput: ["where", "create"],
  LocationAreaEncounterRatesCreateWithoutLocationAreaInput: ["rate", "encounterMethod", "version"],
  LocationAreaEncounterRatesCreateOrConnectWithoutLocationAreaInput: ["where", "create"],
  LocationsUpsertWithoutAreasInput: ["update", "create", "where"],
  LocationsUpdateToOneWithWhereWithoutAreasInput: ["where", "data"],
  LocationsUpdateWithoutAreasInput: ["id", "identifier", "region", "gameIndices", "evolution"],
  EncountersUpsertWithWhereUniqueWithoutLocationAreaInput: ["where", "update", "create"],
  EncountersUpdateWithWhereUniqueWithoutLocationAreaInput: ["where", "data"],
  LocationAreaEncounterRatesUpsertWithWhereUniqueWithoutLocationAreaInput: ["where", "update", "create"],
  LocationAreaEncounterRatesUpdateWithWhereUniqueWithoutLocationAreaInput: ["where", "data"],
  RegionsCreateWithoutPokedexesInput: ["id", "identifier", "generations", "locations", "versionGroups"],
  RegionsCreateOrConnectWithoutPokedexesInput: ["where", "create"],
  PokemonDexNumbersCreateWithoutPokedexInput: ["pokedex_number", "species"],
  PokemonDexNumbersCreateOrConnectWithoutPokedexInput: ["where", "create"],
  PokedexVersionGroupsCreateWithoutPokedexInput: ["versionGroup"],
  PokedexVersionGroupsCreateOrConnectWithoutPokedexInput: ["where", "create"],
  RegionsUpsertWithoutPokedexesInput: ["update", "create", "where"],
  RegionsUpdateToOneWithWhereWithoutPokedexesInput: ["where", "data"],
  RegionsUpdateWithoutPokedexesInput: ["id", "identifier", "generations", "locations", "versionGroups"],
  PokemonDexNumbersUpsertWithWhereUniqueWithoutPokedexInput: ["where", "update", "create"],
  PokemonDexNumbersUpdateWithWhereUniqueWithoutPokedexInput: ["where", "data"],
  PokedexVersionGroupsUpsertWithWhereUniqueWithoutPokedexInput: ["where", "update", "create"],
  PokedexVersionGroupsUpdateWithWhereUniqueWithoutPokedexInput: ["where", "data"],
  ItemsCreateWithoutBabyTriggerItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "triggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutBabyTriggerItemsInput: ["where", "create"],
  PokemonSpeciesCreateWithoutEvolutionChainInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEvolutionChainInput: ["where", "create"],
  ItemsUpsertWithoutBabyTriggerItemsInput: ["update", "create", "where"],
  ItemsUpdateToOneWithWhereWithoutBabyTriggerItemsInput: ["where", "data"],
  ItemsUpdateWithoutBabyTriggerItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "triggerItems", "heldItems"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutEvolutionChainInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutEvolutionChainInput: ["where", "data"],
  PokemonEvolutionCreateWithoutEvolutionTriggerInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutEvolutionTriggerInput: ["where", "create"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutEvolutionTriggerInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutEvolutionTriggerInput: ["where", "data"],
  PokemonSpeciesCreateWithoutEvolutionInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEvolutionInput: ["where", "create"],
  EvolutionTriggersCreateWithoutEvolutionInput: ["id", "identifier"],
  EvolutionTriggersCreateOrConnectWithoutEvolutionInput: ["where", "create"],
  ItemsCreateWithoutTriggerItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutTriggerItemsInput: ["where", "create"],
  GendersCreateWithoutEvolutionInput: ["id", "identifier"],
  GendersCreateOrConnectWithoutEvolutionInput: ["where", "create"],
  LocationsCreateWithoutEvolutionInput: ["id", "identifier", "region", "areas", "gameIndices"],
  LocationsCreateOrConnectWithoutEvolutionInput: ["where", "create"],
  ItemsCreateWithoutHeldItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems"],
  ItemsCreateOrConnectWithoutHeldItemsInput: ["where", "create"],
  MovesCreateWithoutKnownMovesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond"],
  MovesCreateOrConnectWithoutKnownMovesInput: ["where", "create"],
  TypesCreateWithoutKnownMoveTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutKnownMoveTypesInput: ["where", "create"],
  PokemonSpeciesCreateWithoutPartySpeciesInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutPartySpeciesInput: ["where", "create"],
  TypesCreateWithoutPartyTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutPartyTypesInput: ["where", "create"],
  PokemonSpeciesCreateWithoutTradeSpeciesInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies"],
  PokemonSpeciesCreateOrConnectWithoutTradeSpeciesInput: ["where", "create"],
  PokemonSpeciesUpsertWithoutEvolutionInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutEvolutionInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutEvolutionInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "partySpecies", "tradeSpecies"],
  EvolutionTriggersUpsertWithoutEvolutionInput: ["update", "create", "where"],
  EvolutionTriggersUpdateToOneWithWhereWithoutEvolutionInput: ["where", "data"],
  EvolutionTriggersUpdateWithoutEvolutionInput: ["id", "identifier"],
  ItemsUpsertWithoutTriggerItemsInput: ["update", "create", "where"],
  ItemsUpdateToOneWithWhereWithoutTriggerItemsInput: ["where", "data"],
  ItemsUpdateWithoutTriggerItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "heldItems"],
  GendersUpsertWithoutEvolutionInput: ["update", "create", "where"],
  GendersUpdateToOneWithWhereWithoutEvolutionInput: ["where", "data"],
  GendersUpdateWithoutEvolutionInput: ["id", "identifier"],
  LocationsUpsertWithoutEvolutionInput: ["update", "create", "where"],
  LocationsUpdateToOneWithWhereWithoutEvolutionInput: ["where", "data"],
  LocationsUpdateWithoutEvolutionInput: ["id", "identifier", "region", "areas", "gameIndices"],
  ItemsUpsertWithoutHeldItemsInput: ["update", "create", "where"],
  ItemsUpdateToOneWithWhereWithoutHeldItemsInput: ["where", "data"],
  ItemsUpdateWithoutHeldItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems"],
  MovesUpsertWithoutKnownMovesInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutKnownMovesInput: ["where", "data"],
  MovesUpdateWithoutKnownMovesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond"],
  TypesUpsertWithoutKnownMoveTypesInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutKnownMoveTypesInput: ["where", "data"],
  TypesUpdateWithoutKnownMoveTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "partyTypes", "naturalGiftTypes"],
  PokemonSpeciesUpsertWithoutPartySpeciesInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutPartySpeciesInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutPartySpeciesInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "tradeSpecies"],
  TypesUpsertWithoutPartyTypesInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutPartyTypesInput: ["where", "data"],
  TypesUpdateWithoutPartyTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "naturalGiftTypes"],
  PokemonSpeciesUpsertWithoutTradeSpeciesInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutTradeSpeciesInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutTradeSpeciesInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies"],
  PokemonSpeciesCreateWithoutGrowthRateInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutGrowthRateInput: ["where", "create"],
  ExperienceCreateWithoutGrowthRateInput: ["level", "experience"],
  ExperienceCreateOrConnectWithoutGrowthRateInput: ["where", "create"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutGrowthRateInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutGrowthRateInput: ["where", "data"],
  ExperienceUpsertWithWhereUniqueWithoutGrowthRateInput: ["where", "update", "create"],
  ExperienceUpdateWithWhereUniqueWithoutGrowthRateInput: ["where", "data"],
  ExperienceScalarWhereInput: ["AND", "OR", "NOT", "growth_rate_id", "level", "experience"],
  GrowthRatesCreateWithoutExperienceInput: ["id", "identifier", "formula", "species"],
  GrowthRatesCreateOrConnectWithoutExperienceInput: ["where", "create"],
  GrowthRatesUpsertWithoutExperienceInput: ["update", "create", "where"],
  GrowthRatesUpdateToOneWithWhereWithoutExperienceInput: ["where", "data"],
  GrowthRatesUpdateWithoutExperienceInput: ["id", "identifier", "formula", "species"],
  PokemonEvolutionCreateWithoutGenderInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionCreateOrConnectWithoutGenderInput: ["where", "create"],
  PokemonEvolutionUpsertWithWhereUniqueWithoutGenderInput: ["where", "update", "create"],
  PokemonEvolutionUpdateWithWhereUniqueWithoutGenderInput: ["where", "data"],
  PokemonEggGroupsCreateWithoutEggGroupInput: ["species"],
  PokemonEggGroupsCreateOrConnectWithoutEggGroupInput: ["where", "create"],
  PokemonEggGroupsUpsertWithWhereUniqueWithoutEggGroupInput: ["where", "update", "create"],
  PokemonEggGroupsUpdateWithWhereUniqueWithoutEggGroupInput: ["where", "data"],
  StatsCreateWithoutNaturesInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "naturesIncreased"],
  StatsCreateOrConnectWithoutNaturesInput: ["where", "create"],
  StatsCreateWithoutNaturesIncreasedInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures"],
  StatsCreateOrConnectWithoutNaturesIncreasedInput: ["where", "create"],
  NatureBattleStylePreferencesCreateWithoutNatureInput: ["low_hp_preference", "high_hp_preference", "battleStyle"],
  NatureBattleStylePreferencesCreateOrConnectWithoutNatureInput: ["where", "create"],
  TypesCreateWithoutNaturesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutNaturesInput: ["where", "create"],
  TypesCreateWithoutNaturesIncreasedInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutNaturesIncreasedInput: ["where", "create"],
  StatsUpsertWithoutNaturesInput: ["update", "create", "where"],
  StatsUpdateToOneWithWhereWithoutNaturesInput: ["where", "data"],
  StatsUpdateWithoutNaturesInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "naturesIncreased"],
  StatsUpsertWithoutNaturesIncreasedInput: ["update", "create", "where"],
  StatsUpdateToOneWithWhereWithoutNaturesIncreasedInput: ["where", "data"],
  StatsUpdateWithoutNaturesIncreasedInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "characteristics", "natures"],
  NatureBattleStylePreferencesUpsertWithWhereUniqueWithoutNatureInput: ["where", "update", "create"],
  NatureBattleStylePreferencesUpdateWithWhereUniqueWithoutNatureInput: ["where", "data"],
  NatureBattleStylePreferencesScalarWhereInput: ["AND", "OR", "NOT", "nature_id", "move_battle_style_id", "low_hp_preference", "high_hp_preference"],
  TypesUpsertWithWhereUniqueWithoutNaturesInput: ["where", "update", "create"],
  TypesUpdateWithWhereUniqueWithoutNaturesInput: ["where", "data"],
  TypesUpsertWithWhereUniqueWithoutNaturesIncreasedInput: ["where", "update", "create"],
  TypesUpdateWithWhereUniqueWithoutNaturesIncreasedInput: ["where", "data"],
  MovesCreateWithoutContestTypeInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutContestTypeInput: ["where", "create"],
  BerryFlavorsCreateWithoutContestTypeInput: ["flavor", "berry", "type"],
  BerryFlavorsCreateOrConnectWithoutContestTypeInput: ["where", "create"],
  MovesUpsertWithWhereUniqueWithoutContestTypeInput: ["where", "update", "create"],
  MovesUpdateWithWhereUniqueWithoutContestTypeInput: ["where", "data"],
  BerryFlavorsUpsertWithWhereUniqueWithoutContestTypeInput: ["where", "update", "create"],
  BerryFlavorsUpdateWithWhereUniqueWithoutContestTypeInput: ["where", "data"],
  MovesCreateWithoutContestEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutContestEffectInput: ["where", "create"],
  MovesUpsertWithWhereUniqueWithoutContestEffectInput: ["where", "update", "create"],
  MovesUpdateWithWhereUniqueWithoutContestEffectInput: ["where", "data"],
  MovesCreateWithoutSuperContestEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutSuperContestEffectInput: ["where", "create"],
  MovesUpsertWithWhereUniqueWithoutSuperContestEffectInput: ["where", "update", "create"],
  MovesUpdateWithWhereUniqueWithoutSuperContestEffectInput: ["where", "data"],
  VersionGroupsCreateWithoutMachinesInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsCreateOrConnectWithoutMachinesInput: ["where", "create"],
  ItemsCreateWithoutMachinesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutMachinesInput: ["where", "create"],
  MovesCreateWithoutMachinesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutMachinesInput: ["where", "create"],
  VersionGroupsUpsertWithoutMachinesInput: ["update", "create", "where"],
  VersionGroupsUpdateToOneWithWhereWithoutMachinesInput: ["where", "data"],
  VersionGroupsUpdateWithoutMachinesInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  ItemsUpsertWithoutMachinesInput: ["update", "create", "where"],
  ItemsUpdateToOneWithWhereWithoutMachinesInput: ["where", "data"],
  ItemsUpdateWithoutMachinesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  MovesUpsertWithoutMachinesInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutMachinesInput: ["where", "data"],
  MovesUpdateWithoutMachinesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  EncounterSlotsCreateWithoutEncounterMethodInput: ["id", "slot", "rarity", "versionGroup", "encounters"],
  EncounterSlotsCreateOrConnectWithoutEncounterMethodInput: ["where", "create"],
  LocationAreaEncounterRatesCreateWithoutEncounterMethodInput: ["rate", "locationArea", "version"],
  LocationAreaEncounterRatesCreateOrConnectWithoutEncounterMethodInput: ["where", "create"],
  EncounterSlotsUpsertWithWhereUniqueWithoutEncounterMethodInput: ["where", "update", "create"],
  EncounterSlotsUpdateWithWhereUniqueWithoutEncounterMethodInput: ["where", "data"],
  LocationAreaEncounterRatesUpsertWithWhereUniqueWithoutEncounterMethodInput: ["where", "update", "create"],
  LocationAreaEncounterRatesUpdateWithWhereUniqueWithoutEncounterMethodInput: ["where", "data"],
  VersionGroupsCreateWithoutEncounterSlotsInput: ["id", "identifier", "order", "generation", "versions", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsCreateOrConnectWithoutEncounterSlotsInput: ["where", "create"],
  EncounterMethodsCreateWithoutSlotsInput: ["id", "identifier", "order", "encounterRates"],
  EncounterMethodsCreateOrConnectWithoutSlotsInput: ["where", "create"],
  EncountersCreateWithoutEncounterSlotInput: ["id", "min_level", "max_level", "version", "locationArea", "pokemon", "conditionValueMap"],
  EncountersCreateOrConnectWithoutEncounterSlotInput: ["where", "create"],
  VersionGroupsUpsertWithoutEncounterSlotsInput: ["update", "create", "where"],
  VersionGroupsUpdateToOneWithWhereWithoutEncounterSlotsInput: ["where", "data"],
  VersionGroupsUpdateWithoutEncounterSlotsInput: ["id", "identifier", "order", "generation", "versions", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  EncounterMethodsUpsertWithoutSlotsInput: ["update", "create", "where"],
  EncounterMethodsUpdateToOneWithWhereWithoutSlotsInput: ["where", "data"],
  EncounterMethodsUpdateWithoutSlotsInput: ["id", "identifier", "order", "encounterRates"],
  EncountersUpsertWithWhereUniqueWithoutEncounterSlotInput: ["where", "update", "create"],
  EncountersUpdateWithWhereUniqueWithoutEncounterSlotInput: ["where", "data"],
  VersionsCreateWithoutEncountersInput: ["id", "identifier", "versionGroup", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionsCreateOrConnectWithoutEncountersInput: ["where", "create"],
  LocationAreasCreateWithoutEncountersInput: ["id", "game_index", "identifier", "location", "encounterRates"],
  LocationAreasCreateOrConnectWithoutEncountersInput: ["where", "create"],
  EncounterSlotsCreateWithoutEncountersInput: ["id", "slot", "rarity", "versionGroup", "encounterMethod"],
  EncounterSlotsCreateOrConnectWithoutEncountersInput: ["where", "create"],
  PokemonCreateWithoutEncountersInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices"],
  PokemonCreateOrConnectWithoutEncountersInput: ["where", "create"],
  EncounterConditionValueMapCreateWithoutEncounterInput: ["conditionValue"],
  EncounterConditionValueMapCreateOrConnectWithoutEncounterInput: ["where", "create"],
  VersionsUpsertWithoutEncountersInput: ["update", "create", "where"],
  VersionsUpdateToOneWithWhereWithoutEncountersInput: ["where", "data"],
  VersionsUpdateWithoutEncountersInput: ["id", "identifier", "versionGroup", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  LocationAreasUpsertWithoutEncountersInput: ["update", "create", "where"],
  LocationAreasUpdateToOneWithWhereWithoutEncountersInput: ["where", "data"],
  LocationAreasUpdateWithoutEncountersInput: ["id", "game_index", "identifier", "location", "encounterRates"],
  EncounterSlotsUpsertWithoutEncountersInput: ["update", "create", "where"],
  EncounterSlotsUpdateToOneWithWhereWithoutEncountersInput: ["where", "data"],
  EncounterSlotsUpdateWithoutEncountersInput: ["id", "slot", "rarity", "versionGroup", "encounterMethod"],
  PokemonUpsertWithoutEncountersInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutEncountersInput: ["where", "data"],
  PokemonUpdateWithoutEncountersInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices"],
  EncounterConditionValueMapUpsertWithWhereUniqueWithoutEncounterInput: ["where", "update", "create"],
  EncounterConditionValueMapUpdateWithWhereUniqueWithoutEncounterInput: ["where", "data"],
  EncounterConditionValueMapScalarWhereInput: ["AND", "OR", "NOT", "encounter_id", "encounter_condition_value_id"],
  EncounterConditionValuesCreateWithoutConditionInput: ["id", "identifier", "is_default", "conditionValueMap"],
  EncounterConditionValuesCreateOrConnectWithoutConditionInput: ["where", "create"],
  EncounterConditionValuesUpsertWithWhereUniqueWithoutConditionInput: ["where", "update", "create"],
  EncounterConditionValuesUpdateWithWhereUniqueWithoutConditionInput: ["where", "data"],
  EncounterConditionValuesScalarWhereInput: ["AND", "OR", "NOT", "id", "encounter_condition_id", "identifier", "is_default"],
  EncounterConditionsCreateWithoutValuesInput: ["id", "identifier"],
  EncounterConditionsCreateOrConnectWithoutValuesInput: ["where", "create"],
  EncounterConditionValueMapCreateWithoutConditionValueInput: ["encounter"],
  EncounterConditionValueMapCreateOrConnectWithoutConditionValueInput: ["where", "create"],
  EncounterConditionsUpsertWithoutValuesInput: ["update", "create", "where"],
  EncounterConditionsUpdateToOneWithWhereWithoutValuesInput: ["where", "data"],
  EncounterConditionsUpdateWithoutValuesInput: ["id", "identifier"],
  EncounterConditionValueMapUpsertWithWhereUniqueWithoutConditionValueInput: ["where", "update", "create"],
  EncounterConditionValueMapUpdateWithWhereUniqueWithoutConditionValueInput: ["where", "data"],
  EncountersCreateWithoutConditionValueMapInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon"],
  EncountersCreateOrConnectWithoutConditionValueMapInput: ["where", "create"],
  EncounterConditionValuesCreateWithoutConditionValueMapInput: ["id", "identifier", "is_default", "condition"],
  EncounterConditionValuesCreateOrConnectWithoutConditionValueMapInput: ["where", "create"],
  EncountersUpsertWithoutConditionValueMapInput: ["update", "create", "where"],
  EncountersUpdateToOneWithWhereWithoutConditionValueMapInput: ["where", "data"],
  EncountersUpdateWithoutConditionValueMapInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "pokemon"],
  EncounterConditionValuesUpsertWithoutConditionValueMapInput: ["update", "create", "where"],
  EncounterConditionValuesUpdateToOneWithWhereWithoutConditionValueMapInput: ["where", "data"],
  EncounterConditionValuesUpdateWithoutConditionValueMapInput: ["id", "identifier", "is_default", "condition"],
  MoveMetaCreateWithoutMetaCategoryInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaAilment", "statChanges"],
  MoveMetaCreateOrConnectWithoutMetaCategoryInput: ["where", "create"],
  MoveMetaUpsertWithWhereUniqueWithoutMetaCategoryInput: ["where", "update", "create"],
  MoveMetaUpdateWithWhereUniqueWithoutMetaCategoryInput: ["where", "data"],
  MoveMetaCreateWithoutMetaAilmentInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "statChanges"],
  MoveMetaCreateOrConnectWithoutMetaAilmentInput: ["where", "create"],
  MoveMetaUpsertWithWhereUniqueWithoutMetaAilmentInput: ["where", "update", "create"],
  MoveMetaUpdateWithWhereUniqueWithoutMetaAilmentInput: ["where", "data"],
  MovesCreateWithoutMetaInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutMetaInput: ["where", "create"],
  MoveMetaCategoriesCreateWithoutMetaInput: ["id", "identifier"],
  MoveMetaCategoriesCreateOrConnectWithoutMetaInput: ["where", "create"],
  MoveMetaAilmentsCreateWithoutMetaInput: ["id", "identifier"],
  MoveMetaAilmentsCreateOrConnectWithoutMetaInput: ["where", "create"],
  MoveMetaStatChangesCreateWithoutMetaInput: ["change", "move", "stat"],
  MoveMetaStatChangesCreateOrConnectWithoutMetaInput: ["where", "create"],
  MovesUpsertWithoutMetaInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutMetaInput: ["where", "data"],
  MovesUpdateWithoutMetaInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveMetaCategoriesUpsertWithoutMetaInput: ["update", "create", "where"],
  MoveMetaCategoriesUpdateToOneWithWhereWithoutMetaInput: ["where", "data"],
  MoveMetaCategoriesUpdateWithoutMetaInput: ["id", "identifier"],
  MoveMetaAilmentsUpsertWithoutMetaInput: ["update", "create", "where"],
  MoveMetaAilmentsUpdateToOneWithWhereWithoutMetaInput: ["where", "data"],
  MoveMetaAilmentsUpdateWithoutMetaInput: ["id", "identifier"],
  MoveMetaStatChangesUpsertWithWhereUniqueWithoutMetaInput: ["where", "update", "create"],
  MoveMetaStatChangesUpdateWithWhereUniqueWithoutMetaInput: ["where", "data"],
  MovesCreateWithoutMetaStatChangesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutMetaStatChangesInput: ["where", "create"],
  StatsCreateWithoutMoveMetaStatChangesInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "characteristics", "natures", "naturesIncreased"],
  StatsCreateOrConnectWithoutMoveMetaStatChangesInput: ["where", "create"],
  MoveMetaCreateWithoutStatChangesInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment"],
  MoveMetaCreateOrConnectWithoutStatChangesInput: ["where", "create"],
  MovesUpsertWithoutMetaStatChangesInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutMetaStatChangesInput: ["where", "data"],
  MovesUpdateWithoutMetaStatChangesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  StatsUpsertWithoutMoveMetaStatChangesInput: ["update", "create", "where"],
  StatsUpdateToOneWithWhereWithoutMoveMetaStatChangesInput: ["where", "data"],
  StatsUpdateWithoutMoveMetaStatChangesInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "characteristics", "natures", "naturesIncreased"],
  MoveMetaUpsertWithoutStatChangesInput: ["update", "create", "where"],
  MoveMetaUpdateToOneWithWhereWithoutStatChangesInput: ["where", "data"],
  MoveMetaUpdateWithoutStatChangesInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "metaAilment"],
  MoveFlagMapCreateWithoutFlagInput: ["move"],
  MoveFlagMapCreateOrConnectWithoutFlagInput: ["where", "create"],
  MoveFlagMapUpsertWithWhereUniqueWithoutFlagInput: ["where", "update", "create"],
  MoveFlagMapUpdateWithWhereUniqueWithoutFlagInput: ["where", "data"],
  MovesCreateWithoutFlagMapInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutFlagMapInput: ["where", "create"],
  MoveFlagsCreateWithoutFlagMapInput: ["id", "identifier"],
  MoveFlagsCreateOrConnectWithoutFlagMapInput: ["where", "create"],
  MovesUpsertWithoutFlagMapInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutFlagMapInput: ["where", "data"],
  MovesUpdateWithoutFlagMapInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MoveFlagsUpsertWithoutFlagMapInput: ["update", "create", "where"],
  MoveFlagsUpdateToOneWithWhereWithoutFlagMapInput: ["where", "data"],
  MoveFlagsUpdateWithoutFlagMapInput: ["id", "identifier"],
  NatureBattleStylePreferencesCreateWithoutBattleStyleInput: ["low_hp_preference", "high_hp_preference", "nature"],
  NatureBattleStylePreferencesCreateOrConnectWithoutBattleStyleInput: ["where", "create"],
  NatureBattleStylePreferencesUpsertWithWhereUniqueWithoutBattleStyleInput: ["where", "update", "create"],
  NatureBattleStylePreferencesUpdateWithWhereUniqueWithoutBattleStyleInput: ["where", "data"],
  ItemFlagMapCreateWithoutFlagInput: ["item"],
  ItemFlagMapCreateOrConnectWithoutFlagInput: ["where", "create"],
  ItemFlagMapUpsertWithWhereUniqueWithoutFlagInput: ["where", "update", "create"],
  ItemFlagMapUpdateWithWhereUniqueWithoutFlagInput: ["where", "data"],
  ItemsCreateWithoutFlagMapInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutFlagMapInput: ["where", "create"],
  ItemFlagsCreateWithoutFlagMapInput: ["id", "identifier"],
  ItemFlagsCreateOrConnectWithoutFlagMapInput: ["where", "create"],
  ItemsUpsertWithoutFlagMapInput: ["update", "create", "where"],
  ItemsUpdateToOneWithWhereWithoutFlagMapInput: ["where", "data"],
  ItemsUpdateWithoutFlagMapInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemFlagsUpsertWithoutFlagMapInput: ["update", "create", "where"],
  ItemFlagsUpdateToOneWithWhereWithoutFlagMapInput: ["where", "data"],
  ItemFlagsUpdateWithoutFlagMapInput: ["id", "identifier"],
  ItemsCreateWithoutFlingEffectInput: ["id", "identifier", "cost", "fling_power", "category", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutFlingEffectInput: ["where", "create"],
  ItemsUpsertWithWhereUniqueWithoutFlingEffectInput: ["where", "update", "create"],
  ItemsUpdateWithWhereUniqueWithoutFlingEffectInput: ["where", "data"],
  ItemsCreateWithoutBerriesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutBerriesInput: ["where", "create"],
  BerryFirmnessCreateWithoutBerriesInput: ["id", "identifier"],
  BerryFirmnessCreateOrConnectWithoutBerriesInput: ["where", "create"],
  TypesCreateWithoutNaturalGiftTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes"],
  TypesCreateOrConnectWithoutNaturalGiftTypesInput: ["where", "create"],
  BerryFlavorsCreateWithoutBerryInput: ["flavor", "contestType", "type"],
  BerryFlavorsCreateOrConnectWithoutBerryInput: ["where", "create"],
  ItemsUpsertWithoutBerriesInput: ["update", "create", "where"],
  ItemsUpdateToOneWithWhereWithoutBerriesInput: ["where", "data"],
  ItemsUpdateWithoutBerriesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  BerryFirmnessUpsertWithoutBerriesInput: ["update", "create", "where"],
  BerryFirmnessUpdateToOneWithWhereWithoutBerriesInput: ["where", "data"],
  BerryFirmnessUpdateWithoutBerriesInput: ["id", "identifier"],
  TypesUpsertWithoutNaturalGiftTypesInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutNaturalGiftTypesInput: ["where", "data"],
  TypesUpdateWithoutNaturalGiftTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes"],
  BerryFlavorsUpsertWithWhereUniqueWithoutBerryInput: ["where", "update", "create"],
  BerryFlavorsUpdateWithWhereUniqueWithoutBerryInput: ["where", "data"],
  BerriesCreateWithoutFirmnessInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "naturalGiftType", "flavors"],
  BerriesCreateOrConnectWithoutFirmnessInput: ["where", "create"],
  BerriesUpsertWithWhereUniqueWithoutFirmnessInput: ["where", "update", "create"],
  BerriesUpdateWithWhereUniqueWithoutFirmnessInput: ["where", "data"],
  BerriesCreateWithoutFlavorsInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType"],
  BerriesCreateOrConnectWithoutFlavorsInput: ["where", "create"],
  ContestTypesCreateWithoutBerryFlavorsInput: ["id", "identifier", "moves"],
  ContestTypesCreateOrConnectWithoutBerryFlavorsInput: ["where", "create"],
  TypesCreateWithoutBerryFlavorsInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutBerryFlavorsInput: ["where", "create"],
  BerriesUpsertWithoutFlavorsInput: ["update", "create", "where"],
  BerriesUpdateToOneWithWhereWithoutFlavorsInput: ["where", "data"],
  BerriesUpdateWithoutFlavorsInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "naturalGiftType"],
  ContestTypesUpsertWithoutBerryFlavorsInput: ["update", "create", "where"],
  ContestTypesUpdateToOneWithWhereWithoutBerryFlavorsInput: ["where", "data"],
  ContestTypesUpdateWithoutBerryFlavorsInput: ["id", "identifier", "moves"],
  TypesUpsertWithoutBerryFlavorsInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutBerryFlavorsInput: ["where", "data"],
  TypesUpdateWithoutBerryFlavorsInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  StatsCreateWithoutCharacteristicsInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "natures", "naturesIncreased"],
  StatsCreateOrConnectWithoutCharacteristicsInput: ["where", "create"],
  StatsUpsertWithoutCharacteristicsInput: ["update", "create", "where"],
  StatsUpdateToOneWithWhereWithoutCharacteristicsInput: ["where", "data"],
  StatsUpdateWithoutCharacteristicsInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "pokemonStats", "moveMetaStatChanges", "natures", "naturesIncreased"],
  MovesCreateWithoutContestCombosInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutContestCombosInput: ["where", "create"],
  MovesCreateWithoutContestCombosSecondInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutContestCombosSecondInput: ["where", "create"],
  MovesUpsertWithoutContestCombosInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutContestCombosInput: ["where", "data"],
  MovesUpdateWithoutContestCombosInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesUpsertWithoutContestCombosSecondInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutContestCombosSecondInput: ["where", "data"],
  MovesUpdateWithoutContestCombosSecondInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateWithoutSuperContestCombosInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutSuperContestCombosInput: ["where", "create"],
  MovesCreateWithoutSuperContestCombosSecondInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "knownMoves"],
  MovesCreateOrConnectWithoutSuperContestCombosSecondInput: ["where", "create"],
  MovesUpsertWithoutSuperContestCombosInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutSuperContestCombosInput: ["where", "data"],
  MovesUpdateWithoutSuperContestCombosInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombosSecond", "knownMoves"],
  MovesUpsertWithoutSuperContestCombosSecondInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutSuperContestCombosSecondInput: ["where", "data"],
  MovesUpdateWithoutSuperContestCombosSecondInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "knownMoves"],
  PokemonMovesCreateWithoutMoveMethodInput: ["level", "order", "mastery", "pokemon", "versionGroup", "move"],
  PokemonMovesCreateOrConnectWithoutMoveMethodInput: ["where", "create"],
  VersionGroupPokemonMoveMethodsCreateWithoutMoveMethodInput: ["versionGroup"],
  VersionGroupPokemonMoveMethodsCreateOrConnectWithoutMoveMethodInput: ["where", "create"],
  PokemonMovesUpsertWithWhereUniqueWithoutMoveMethodInput: ["where", "update", "create"],
  PokemonMovesUpdateWithWhereUniqueWithoutMoveMethodInput: ["where", "data"],
  VersionGroupPokemonMoveMethodsUpsertWithWhereUniqueWithoutMoveMethodInput: ["where", "update", "create"],
  VersionGroupPokemonMoveMethodsUpdateWithWhereUniqueWithoutMoveMethodInput: ["where", "data"],
  VersionGroupsCreateWithoutVersionGroupPokemonMoveMethodsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsCreateOrConnectWithoutVersionGroupPokemonMoveMethodsInput: ["where", "create"],
  PokemonMoveMethodsCreateWithoutVersionGroupsInput: ["id", "identifier", "pokemonMoves"],
  PokemonMoveMethodsCreateOrConnectWithoutVersionGroupsInput: ["where", "create"],
  VersionGroupsUpsertWithoutVersionGroupPokemonMoveMethodsInput: ["update", "create", "where"],
  VersionGroupsUpdateToOneWithWhereWithoutVersionGroupPokemonMoveMethodsInput: ["where", "data"],
  VersionGroupsUpdateWithoutVersionGroupPokemonMoveMethodsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  PokemonMoveMethodsUpsertWithoutVersionGroupsInput: ["update", "create", "where"],
  PokemonMoveMethodsUpdateToOneWithWhereWithoutVersionGroupsInput: ["where", "data"],
  PokemonMoveMethodsUpdateWithoutVersionGroupsInput: ["id", "identifier", "pokemonMoves"],
  PokemonSpeciesCreateWithoutShapeInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutShapeInput: ["where", "create"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutShapeInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutShapeInput: ["where", "data"],
  PokemonSpeciesCreateWithoutColorInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutColorInput: ["where", "create"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutColorInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutColorInput: ["where", "data"],
  PokemonSpeciesCreateWithoutHabitatInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutHabitatInput: ["where", "create"],
  PokemonSpeciesUpsertWithWhereUniqueWithoutHabitatInput: ["where", "update", "create"],
  PokemonSpeciesUpdateWithWhereUniqueWithoutHabitatInput: ["where", "data"],
  TypesCreateWithoutEfficacyInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutEfficacyInput: ["where", "create"],
  TypesCreateWithoutEfficacyTargetInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutEfficacyTargetInput: ["where", "create"],
  TypesUpsertWithoutEfficacyInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutEfficacyInput: ["where", "data"],
  TypesUpdateWithoutEfficacyInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesUpsertWithoutEfficacyTargetInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutEfficacyTargetInput: ["where", "data"],
  TypesUpdateWithoutEfficacyTargetInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  VersionGroupsCreateWithoutVersionGroupRegionsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionGroupsCreateOrConnectWithoutVersionGroupRegionsInput: ["where", "create"],
  RegionsCreateWithoutVersionGroupsInput: ["id", "identifier", "generations", "locations", "pokedexes"],
  RegionsCreateOrConnectWithoutVersionGroupsInput: ["where", "create"],
  VersionGroupsUpsertWithoutVersionGroupRegionsInput: ["update", "create", "where"],
  VersionGroupsUpdateToOneWithWhereWithoutVersionGroupRegionsInput: ["where", "data"],
  VersionGroupsUpdateWithoutVersionGroupRegionsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  RegionsUpsertWithoutVersionGroupsInput: ["update", "create", "where"],
  RegionsUpdateToOneWithWhereWithoutVersionGroupsInput: ["where", "data"],
  RegionsUpdateWithoutVersionGroupsInput: ["id", "identifier", "generations", "locations", "pokedexes"],
  PokedexesCreateWithoutVersionGroupsInput: ["id", "identifier", "is_main_series", "region", "dexNumbers"],
  PokedexesCreateOrConnectWithoutVersionGroupsInput: ["where", "create"],
  VersionGroupsCreateWithoutPokedexVersionGroupsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokemonMoves", "pokemonForms"],
  VersionGroupsCreateOrConnectWithoutPokedexVersionGroupsInput: ["where", "create"],
  PokedexesUpsertWithoutVersionGroupsInput: ["update", "create", "where"],
  PokedexesUpdateToOneWithWhereWithoutVersionGroupsInput: ["where", "data"],
  PokedexesUpdateWithoutVersionGroupsInput: ["id", "identifier", "is_main_series", "region", "dexNumbers"],
  VersionGroupsUpsertWithoutPokedexVersionGroupsInput: ["update", "create", "where"],
  VersionGroupsUpdateToOneWithWhereWithoutPokedexVersionGroupsInput: ["where", "data"],
  VersionGroupsUpdateWithoutPokedexVersionGroupsInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokemonMoves", "pokemonForms"],
  PokemonCreateWithoutAbilitiesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutAbilitiesInput: ["where", "create"],
  AbilitiesCreateWithoutPokemonAbilitiesInput: ["id", "identifier", "is_main_series", "generation"],
  AbilitiesCreateOrConnectWithoutPokemonAbilitiesInput: ["where", "create"],
  PokemonUpsertWithoutAbilitiesInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutAbilitiesInput: ["where", "data"],
  PokemonUpdateWithoutAbilitiesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  AbilitiesUpsertWithoutPokemonAbilitiesInput: ["update", "create", "where"],
  AbilitiesUpdateToOneWithWhereWithoutPokemonAbilitiesInput: ["where", "data"],
  AbilitiesUpdateWithoutPokemonAbilitiesInput: ["id", "identifier", "is_main_series", "generation"],
  PokemonCreateWithoutMovesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutMovesInput: ["where", "create"],
  VersionGroupsCreateWithoutPokemonMovesInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonForms"],
  VersionGroupsCreateOrConnectWithoutPokemonMovesInput: ["where", "create"],
  MovesCreateWithoutPokemonMovesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesCreateOrConnectWithoutPokemonMovesInput: ["where", "create"],
  PokemonMoveMethodsCreateWithoutPokemonMovesInput: ["id", "identifier", "versionGroups"],
  PokemonMoveMethodsCreateOrConnectWithoutPokemonMovesInput: ["where", "create"],
  PokemonUpsertWithoutMovesInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutMovesInput: ["where", "data"],
  PokemonUpdateWithoutMovesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "stats", "types", "items", "gameIndices", "encounters"],
  VersionGroupsUpsertWithoutPokemonMovesInput: ["update", "create", "where"],
  VersionGroupsUpdateToOneWithWhereWithoutPokemonMovesInput: ["where", "data"],
  VersionGroupsUpdateWithoutPokemonMovesInput: ["id", "identifier", "order", "generation", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonForms"],
  MovesUpsertWithoutPokemonMovesInput: ["update", "create", "where"],
  MovesUpdateToOneWithWhereWithoutPokemonMovesInput: ["where", "data"],
  MovesUpdateWithoutPokemonMovesInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  PokemonMoveMethodsUpsertWithoutPokemonMovesInput: ["update", "create", "where"],
  PokemonMoveMethodsUpdateToOneWithWhereWithoutPokemonMovesInput: ["where", "data"],
  PokemonMoveMethodsUpdateWithoutPokemonMovesInput: ["id", "identifier", "versionGroups"],
  PokemonCreateWithoutStatsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "types", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutStatsInput: ["where", "create"],
  StatsCreateWithoutPokemonStatsInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  StatsCreateOrConnectWithoutPokemonStatsInput: ["where", "create"],
  PokemonUpsertWithoutStatsInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutStatsInput: ["where", "data"],
  PokemonUpdateWithoutStatsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "types", "items", "gameIndices", "encounters"],
  StatsUpsertWithoutPokemonStatsInput: ["update", "create", "where"],
  StatsUpdateToOneWithWhereWithoutPokemonStatsInput: ["where", "data"],
  StatsUpdateWithoutPokemonStatsInput: ["id", "damage_class_id", "identifier", "is_battle_only", "game_index", "moveMetaStatChanges", "characteristics", "natures", "naturesIncreased"],
  PokemonCreateWithoutTypesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "items", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutTypesInput: ["where", "create"],
  TypesCreateWithoutPokemonTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutPokemonTypesInput: ["where", "create"],
  PokemonUpsertWithoutTypesInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutTypesInput: ["where", "data"],
  PokemonUpdateWithoutTypesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "items", "gameIndices", "encounters"],
  TypesUpsertWithoutPokemonTypesInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutPokemonTypesInput: ["where", "data"],
  TypesUpdateWithoutPokemonTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  PokemonSpeciesCreateWithoutEggGroupsInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutEggGroupsInput: ["where", "create"],
  EggGroupsCreateWithoutSpeciesInput: ["id", "identifier"],
  EggGroupsCreateOrConnectWithoutSpeciesInput: ["where", "create"],
  PokemonSpeciesUpsertWithoutEggGroupsInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutEggGroupsInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutEggGroupsInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  EggGroupsUpsertWithoutSpeciesInput: ["update", "create", "where"],
  EggGroupsUpdateToOneWithWhereWithoutSpeciesInput: ["where", "data"],
  EggGroupsUpdateWithoutSpeciesInput: ["id", "identifier"],
  PokemonCreateWithoutItemsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "gameIndices", "encounters"],
  PokemonCreateOrConnectWithoutItemsInput: ["where", "create"],
  VersionsCreateWithoutPokemonItemsInput: ["id", "identifier", "versionGroup", "encounters", "pokemonGameIndices", "locationAreaEncounterRates"],
  VersionsCreateOrConnectWithoutPokemonItemsInput: ["where", "create"],
  ItemsCreateWithoutPokemonItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutPokemonItemsInput: ["where", "create"],
  PokemonUpsertWithoutItemsInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutItemsInput: ["where", "data"],
  PokemonUpdateWithoutItemsInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "gameIndices", "encounters"],
  VersionsUpsertWithoutPokemonItemsInput: ["update", "create", "where"],
  VersionsUpdateToOneWithWhereWithoutPokemonItemsInput: ["where", "data"],
  VersionsUpdateWithoutPokemonItemsInput: ["id", "identifier", "versionGroup", "encounters", "pokemonGameIndices", "locationAreaEncounterRates"],
  ItemsUpsertWithoutPokemonItemsInput: ["update", "create", "where"],
  ItemsUpdateToOneWithWhereWithoutPokemonItemsInput: ["where", "data"],
  ItemsUpdateWithoutPokemonItemsInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  PokemonCreateWithoutGameIndicesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "encounters"],
  PokemonCreateOrConnectWithoutGameIndicesInput: ["where", "create"],
  VersionsCreateWithoutPokemonGameIndicesInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "locationAreaEncounterRates"],
  VersionsCreateOrConnectWithoutPokemonGameIndicesInput: ["where", "create"],
  PokemonUpsertWithoutGameIndicesInput: ["update", "create", "where"],
  PokemonUpdateToOneWithWhereWithoutGameIndicesInput: ["where", "data"],
  PokemonUpdateWithoutGameIndicesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "species", "forms", "abilities", "moves", "stats", "types", "items", "encounters"],
  VersionsUpsertWithoutPokemonGameIndicesInput: ["update", "create", "where"],
  VersionsUpdateToOneWithWhereWithoutPokemonGameIndicesInput: ["where", "data"],
  VersionsUpdateWithoutPokemonGameIndicesInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "locationAreaEncounterRates"],
  PokemonSpeciesCreateWithoutDexNumbersInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesCreateOrConnectWithoutDexNumbersInput: ["where", "create"],
  PokedexesCreateWithoutDexNumbersInput: ["id", "identifier", "is_main_series", "region", "versionGroups"],
  PokedexesCreateOrConnectWithoutDexNumbersInput: ["where", "create"],
  PokemonSpeciesUpsertWithoutDexNumbersInput: ["update", "create", "where"],
  PokemonSpeciesUpdateToOneWithWhereWithoutDexNumbersInput: ["where", "data"],
  PokemonSpeciesUpdateWithoutDexNumbersInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "evolution", "partySpecies", "tradeSpecies"],
  PokedexesUpsertWithoutDexNumbersInput: ["update", "create", "where"],
  PokedexesUpdateToOneWithWhereWithoutDexNumbersInput: ["where", "data"],
  PokedexesUpdateWithoutDexNumbersInput: ["id", "identifier", "is_main_series", "region", "versionGroups"],
  PokemonFormsCreateWithoutGenerationsInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "types"],
  PokemonFormsCreateOrConnectWithoutGenerationsInput: ["where", "create"],
  GenerationsCreateWithoutPokemonFormGenerationsInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutPokemonFormGenerationsInput: ["where", "create"],
  PokemonFormsUpsertWithoutGenerationsInput: ["update", "create", "where"],
  PokemonFormsUpdateToOneWithWhereWithoutGenerationsInput: ["where", "data"],
  PokemonFormsUpdateWithoutGenerationsInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "types"],
  GenerationsUpsertWithoutPokemonFormGenerationsInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutPokemonFormGenerationsInput: ["where", "data"],
  GenerationsUpdateWithoutPokemonFormGenerationsInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  PokemonFormsCreateWithoutTypesInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations"],
  PokemonFormsCreateOrConnectWithoutTypesInput: ["where", "create"],
  TypesCreateWithoutFormTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutFormTypesInput: ["where", "create"],
  PokemonFormsUpsertWithoutTypesInput: ["update", "create", "where"],
  PokemonFormsUpdateToOneWithWhereWithoutTypesInput: ["where", "data"],
  PokemonFormsUpdateWithoutTypesInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "versionGroup", "generations"],
  TypesUpsertWithoutFormTypesInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutFormTypesInput: ["where", "data"],
  TypesUpdateWithoutFormTypesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateWithoutGameIndicesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesCreateOrConnectWithoutGameIndicesInput: ["where", "create"],
  GenerationsCreateWithoutTypeGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutTypeGameIndicesInput: ["where", "create"],
  TypesUpsertWithoutGameIndicesInput: ["update", "create", "where"],
  TypesUpdateToOneWithWhereWithoutGameIndicesInput: ["where", "data"],
  TypesUpdateWithoutGameIndicesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  GenerationsUpsertWithoutTypeGameIndicesInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutTypeGameIndicesInput: ["where", "data"],
  GenerationsUpdateWithoutTypeGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "locationGameIndices", "versionGroups"],
  ItemsCreateWithoutGameIndicesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemsCreateOrConnectWithoutGameIndicesInput: ["where", "create"],
  GenerationsCreateWithoutItemGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "typeGameIndices", "locationGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutItemGameIndicesInput: ["where", "create"],
  ItemsUpsertWithoutGameIndicesInput: ["update", "create", "where"],
  ItemsUpdateToOneWithWhereWithoutGameIndicesInput: ["where", "data"],
  ItemsUpdateWithoutGameIndicesInput: ["id", "identifier", "cost", "fling_power", "category", "flingEffect", "pokemonItems", "machines", "berries", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  GenerationsUpsertWithoutItemGameIndicesInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutItemGameIndicesInput: ["where", "data"],
  GenerationsUpdateWithoutItemGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "typeGameIndices", "locationGameIndices", "versionGroups"],
  LocationsCreateWithoutGameIndicesInput: ["id", "identifier", "region", "areas", "evolution"],
  LocationsCreateOrConnectWithoutGameIndicesInput: ["where", "create"],
  GenerationsCreateWithoutLocationGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "versionGroups"],
  GenerationsCreateOrConnectWithoutLocationGameIndicesInput: ["where", "create"],
  LocationsUpsertWithoutGameIndicesInput: ["update", "create", "where"],
  LocationsUpdateToOneWithWhereWithoutGameIndicesInput: ["where", "data"],
  LocationsUpdateWithoutGameIndicesInput: ["id", "identifier", "region", "areas", "evolution"],
  GenerationsUpsertWithoutLocationGameIndicesInput: ["update", "create", "where"],
  GenerationsUpdateToOneWithWhereWithoutLocationGameIndicesInput: ["where", "data"],
  GenerationsUpdateWithoutLocationGameIndicesInput: ["id", "identifier", "region", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "versionGroups"],
  LocationAreasCreateWithoutEncounterRatesInput: ["id", "game_index", "identifier", "location", "encounters"],
  LocationAreasCreateOrConnectWithoutEncounterRatesInput: ["where", "create"],
  EncounterMethodsCreateWithoutEncounterRatesInput: ["id", "identifier", "order", "slots"],
  EncounterMethodsCreateOrConnectWithoutEncounterRatesInput: ["where", "create"],
  VersionsCreateWithoutLocationAreaEncounterRatesInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices"],
  VersionsCreateOrConnectWithoutLocationAreaEncounterRatesInput: ["where", "create"],
  LocationAreasUpsertWithoutEncounterRatesInput: ["update", "create", "where"],
  LocationAreasUpdateToOneWithWhereWithoutEncounterRatesInput: ["where", "data"],
  LocationAreasUpdateWithoutEncounterRatesInput: ["id", "game_index", "identifier", "location", "encounters"],
  EncounterMethodsUpsertWithoutEncounterRatesInput: ["update", "create", "where"],
  EncounterMethodsUpdateToOneWithWhereWithoutEncounterRatesInput: ["where", "data"],
  EncounterMethodsUpdateWithoutEncounterRatesInput: ["id", "identifier", "order", "slots"],
  VersionsUpsertWithoutLocationAreaEncounterRatesInput: ["update", "create", "where"],
  VersionsUpdateToOneWithWhereWithoutLocationAreaEncounterRatesInput: ["where", "data"],
  VersionsUpdateWithoutLocationAreaEncounterRatesInput: ["id", "identifier", "versionGroup", "encounters", "pokemonItems", "pokemonGameIndices"],
  NaturesCreateWithoutBattleStylePreferencesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "decreasedStatTypes", "increasedStatTypes"],
  NaturesCreateOrConnectWithoutBattleStylePreferencesInput: ["where", "create"],
  MoveBattleStylesCreateWithoutNaturePreferencesInput: ["id", "identifier"],
  MoveBattleStylesCreateOrConnectWithoutNaturePreferencesInput: ["where", "create"],
  NaturesUpsertWithoutBattleStylePreferencesInput: ["update", "create", "where"],
  NaturesUpdateToOneWithWhereWithoutBattleStylePreferencesInput: ["where", "data"],
  NaturesUpdateWithoutBattleStylePreferencesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "decreasedStatTypes", "increasedStatTypes"],
  MoveBattleStylesUpsertWithoutNaturePreferencesInput: ["update", "create", "where"],
  MoveBattleStylesUpdateToOneWithWhereWithoutNaturePreferencesInput: ["where", "data"],
  MoveBattleStylesUpdateWithoutNaturePreferencesInput: ["id", "identifier"],
  PokemonFormsUpdateWithoutPokemonInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "versionGroup", "generations", "types"],
  PokemonAbilitiesUpdateWithoutPokemonInput: ["is_hidden", "slot", "ability"],
  PokemonMovesUpdateWithoutPokemonInput: ["level", "order", "mastery", "versionGroup", "move", "moveMethod"],
  PokemonStatsUpdateWithoutPokemonInput: ["base_stat", "effort", "stat"],
  PokemonTypesUpdateWithoutPokemonInput: ["slot", "type"],
  PokemonItemsUpdateWithoutPokemonInput: ["rarity", "version", "item"],
  PokemonGameIndicesUpdateWithoutPokemonInput: ["game_index", "version"],
  EncountersUpdateWithoutPokemonInput: ["id", "min_level", "max_level", "version", "locationArea", "encounterSlot", "conditionValueMap"],
  PokemonSpeciesUpdateWithoutEvolvesFromInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonUpdateWithoutSpeciesInput: ["id", "identifier", "height", "weight", "base_experience", "order", "is_default", "forms", "abilities", "moves", "stats", "types", "items", "gameIndices", "encounters"],
  PokemonEggGroupsUpdateWithoutSpeciesInput: ["eggGroup"],
  PokemonDexNumbersUpdateWithoutSpeciesInput: ["pokedex_number", "pokedex"],
  PokemonEvolutionUpdateWithoutEvolvedSpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutPartySpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutTradeSpeciesInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType"],
  PokemonFormGenerationsUpdateWithoutPokemonFormInput: ["game_index", "generation"],
  PokemonFormTypesUpdateWithoutPokemonFormInput: ["slot", "type"],
  PokemonMovesUpdateWithoutMoveInput: ["level", "order", "mastery", "pokemon", "versionGroup", "moveMethod"],
  MachinesUpdateWithoutMoveInput: ["machine_number", "versionGroup", "item"],
  MoveMetaUpdateWithoutMoveInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "metaCategory", "metaAilment", "statChanges"],
  MoveMetaStatChangesUpdateWithoutMoveInput: ["change", "stat", "meta"],
  MoveFlagMapUpdateWithoutMoveInput: ["flag"],
  ContestCombosUpdateWithoutFirstMoveInput: ["secondMove"],
  ContestCombosUpdateWithoutSecondMoveInput: ["firstMove"],
  SuperContestCombosUpdateWithoutFirstMoveInput: ["secondMove"],
  SuperContestCombosUpdateWithoutSecondMoveInput: ["firstMove"],
  PokemonEvolutionUpdateWithoutKnownMoveInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  MovesUpdateWithoutEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesUpdateWithoutTargetInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesUpdateWithoutDamageClassInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  TypesUpdateWithoutDamageClassInput: ["id", "identifier", "generation", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  MovesUpdateWithoutTypeInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  PokemonTypesUpdateWithoutTypeInput: ["slot", "pokemon"],
  PokemonFormTypesUpdateWithoutTypeInput: ["slot", "pokemonForm"],
  TypeGameIndicesUpdateWithoutTypeInput: ["game_index", "generation"],
  TypeEfficacyUpdateWithoutDamageTypeInput: ["damage_factor", "targetType"],
  TypeEfficacyUpdateWithoutTargetTypeInput: ["damage_factor", "damageType"],
  BerryFlavorsUpdateWithoutTypeInput: ["flavor", "berry", "contestType"],
  NaturesUpdateWithoutDecreasedStatTypesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "increasedStatTypes"],
  NaturesUpdateWithoutIncreasedStatTypesInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "increasedStat", "battleStylePreferences", "decreasedStatTypes"],
  PokemonEvolutionUpdateWithoutKnownMoveTypeInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutPartyTypeInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "tradeSpecies"],
  BerriesUpdateWithoutNaturalGiftTypeInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "firmness", "flavors"],
  PokemonAbilitiesUpdateWithoutAbilityInput: ["is_hidden", "slot", "pokemon"],
  PokemonItemsUpdateWithoutItemInput: ["rarity", "pokemon", "version"],
  MachinesUpdateWithoutItemInput: ["machine_number", "versionGroup", "move"],
  BerriesUpdateWithoutItemInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "firmness", "naturalGiftType", "flavors"],
  ItemGameIndicesUpdateWithoutItemInput: ["game_index", "generation"],
  ItemFlagMapUpdateWithoutItemInput: ["flag"],
  EvolutionChainsUpdateWithoutBabyTriggerItemInput: ["id", "species"],
  PokemonEvolutionUpdateWithoutTriggerItemInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutHeldItemInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "location", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  ItemsUpdateWithoutCategoryInput: ["id", "identifier", "cost", "fling_power", "flingEffect", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  ItemCategoriesUpdateWithoutPocketInput: ["id", "identifier", "items"],
  PokemonStatsUpdateWithoutStatInput: ["base_stat", "effort", "pokemon"],
  MoveMetaStatChangesUpdateWithoutStatInput: ["change", "move", "meta"],
  CharacteristicsUpdateWithoutStatInput: ["id", "gene_mod_5"],
  NaturesUpdateWithoutDecreasedStatInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "increasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  NaturesUpdateWithoutIncreasedStatInput: ["id", "identifier", "hates_flavor_id", "likes_flavor_id", "game_index", "decreasedStat", "battleStylePreferences", "decreasedStatTypes", "increasedStatTypes"],
  PokemonSpeciesUpdateWithoutGenerationInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  MovesUpdateWithoutGenerationInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  TypesUpdateWithoutGenerationInput: ["id", "identifier", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  AbilitiesUpdateWithoutGenerationInput: ["id", "identifier", "is_main_series", "pokemonAbilities"],
  PokemonFormGenerationsUpdateWithoutGenerationInput: ["game_index", "pokemonForm"],
  ItemGameIndicesUpdateWithoutGenerationInput: ["game_index", "item"],
  TypeGameIndicesUpdateWithoutGenerationInput: ["game_index", "type"],
  LocationGameIndicesUpdateWithoutGenerationInput: ["game_index", "location"],
  VersionGroupsUpdateWithoutGenerationInput: ["id", "identifier", "order", "versions", "encounterSlots", "machines", "versionGroupPokemonMoveMethods", "versionGroupRegions", "pokedexVersionGroups", "pokemonMoves", "pokemonForms"],
  VersionsUpdateWithoutVersionGroupInput: ["id", "identifier", "encounters", "pokemonItems", "pokemonGameIndices", "locationAreaEncounterRates"],
  EncounterSlotsUpdateWithoutVersionGroupInput: ["id", "slot", "rarity", "encounterMethod", "encounters"],
  MachinesUpdateWithoutVersionGroupInput: ["machine_number", "item", "move"],
  VersionGroupPokemonMoveMethodsUpdateWithoutVersionGroupInput: ["moveMethod"],
  VersionGroupRegionsUpdateWithoutVersionGroupInput: ["region"],
  PokedexVersionGroupsUpdateWithoutVersionGroupInput: ["pokedex"],
  PokemonMovesUpdateWithoutVersionGroupInput: ["level", "order", "mastery", "pokemon", "move", "moveMethod"],
  PokemonFormsUpdateWithoutVersionGroupInput: ["id", "identifier", "form_identifier", "is_default", "is_battle_only", "is_mega", "form_order", "order", "pokemon", "generations", "types"],
  EncountersUpdateWithoutVersionInput: ["id", "min_level", "max_level", "locationArea", "encounterSlot", "pokemon", "conditionValueMap"],
  PokemonItemsUpdateWithoutVersionInput: ["rarity", "pokemon", "item"],
  PokemonGameIndicesUpdateWithoutVersionInput: ["game_index", "pokemon"],
  LocationAreaEncounterRatesUpdateWithoutVersionInput: ["rate", "locationArea", "encounterMethod"],
  GenerationsUpdateWithoutRegionInput: ["id", "identifier", "pokemonSpecies", "moves", "types", "abilities", "pokemonFormGenerations", "itemGameIndices", "typeGameIndices", "locationGameIndices", "versionGroups"],
  LocationsUpdateWithoutRegionInput: ["id", "identifier", "areas", "gameIndices", "evolution"],
  PokedexesUpdateWithoutRegionInput: ["id", "identifier", "is_main_series", "dexNumbers", "versionGroups"],
  VersionGroupRegionsUpdateWithoutRegionInput: ["versionGroup"],
  LocationAreasUpdateWithoutLocationInput: ["id", "game_index", "identifier", "encounters", "encounterRates"],
  LocationGameIndicesUpdateWithoutLocationInput: ["game_index", "generation"],
  PokemonEvolutionUpdateWithoutLocationInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "gender", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  EncountersUpdateWithoutLocationAreaInput: ["id", "min_level", "max_level", "version", "encounterSlot", "pokemon", "conditionValueMap"],
  LocationAreaEncounterRatesUpdateWithoutLocationAreaInput: ["rate", "encounterMethod", "version"],
  PokemonDexNumbersUpdateWithoutPokedexInput: ["pokedex_number", "species"],
  PokedexVersionGroupsUpdateWithoutPokedexInput: ["versionGroup"],
  PokemonSpeciesUpdateWithoutEvolutionChainInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "color", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonEvolutionUpdateWithoutEvolutionTriggerInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "triggerItem", "gender", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonSpeciesUpdateWithoutGrowthRateInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "habitat", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  ExperienceUpdateWithoutGrowthRateInput: ["level", "experience"],
  PokemonEvolutionUpdateWithoutGenderInput: ["id", "minimum_level", "time_of_day", "minimum_happiness", "minimum_beauty", "minimum_affection", "relative_physical_stats", "needs_overworld_rain", "turn_upside_down", "evolvedSpecies", "evolutionTrigger", "triggerItem", "location", "heldItem", "knownMove", "knownMoveType", "partySpecies", "partyType", "tradeSpecies"],
  PokemonEggGroupsUpdateWithoutEggGroupInput: ["species"],
  NatureBattleStylePreferencesUpdateWithoutNatureInput: ["low_hp_preference", "high_hp_preference", "battleStyle"],
  TypesUpdateWithoutNaturesInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "naturesIncreased", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  TypesUpdateWithoutNaturesIncreasedInput: ["id", "identifier", "generation", "damageClass", "moves", "pokemonTypes", "formTypes", "gameIndices", "efficacy", "efficacyTarget", "berryFlavors", "natures", "knownMoveTypes", "partyTypes", "naturalGiftTypes"],
  MovesUpdateWithoutContestTypeInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestEffect", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  BerryFlavorsUpdateWithoutContestTypeInput: ["flavor", "berry", "type"],
  MovesUpdateWithoutContestEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "superContestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  MovesUpdateWithoutSuperContestEffectInput: ["id", "identifier", "power", "pp", "accuracy", "priority", "effect_chance", "generation", "type", "target", "damageClass", "effect", "contestType", "contestEffect", "pokemonMoves", "machines", "meta", "metaStatChanges", "flagMap", "contestCombos", "contestCombosSecond", "superContestCombos", "superContestCombosSecond", "knownMoves"],
  EncounterSlotsUpdateWithoutEncounterMethodInput: ["id", "slot", "rarity", "versionGroup", "encounters"],
  LocationAreaEncounterRatesUpdateWithoutEncounterMethodInput: ["rate", "locationArea", "version"],
  EncountersUpdateWithoutEncounterSlotInput: ["id", "min_level", "max_level", "version", "locationArea", "pokemon", "conditionValueMap"],
  EncounterConditionValueMapUpdateWithoutEncounterInput: ["conditionValue"],
  EncounterConditionValuesUpdateWithoutConditionInput: ["id", "identifier", "is_default", "conditionValueMap"],
  EncounterConditionValueMapUpdateWithoutConditionValueInput: ["encounter"],
  MoveMetaUpdateWithoutMetaCategoryInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaAilment", "statChanges"],
  MoveMetaUpdateWithoutMetaAilmentInput: ["min_hits", "max_hits", "min_turns", "max_turns", "drain", "healing", "crit_rate", "ailment_chance", "flinch_chance", "stat_chance", "move", "metaCategory", "statChanges"],
  MoveMetaStatChangesUpdateWithoutMetaInput: ["change", "move", "stat"],
  MoveFlagMapUpdateWithoutFlagInput: ["move"],
  NatureBattleStylePreferencesUpdateWithoutBattleStyleInput: ["low_hp_preference", "high_hp_preference", "nature"],
  ItemFlagMapUpdateWithoutFlagInput: ["item"],
  ItemsUpdateWithoutFlingEffectInput: ["id", "identifier", "cost", "fling_power", "category", "pokemonItems", "machines", "berries", "gameIndices", "flagMap", "babyTriggerItems", "triggerItems", "heldItems"],
  BerryFlavorsUpdateWithoutBerryInput: ["flavor", "contestType", "type"],
  BerriesUpdateWithoutFirmnessInput: ["id", "natural_gift_power", "size", "max_harvest", "growth_time", "soil_dryness", "smoothness", "item", "naturalGiftType", "flavors"],
  PokemonMovesUpdateWithoutMoveMethodInput: ["level", "order", "mastery", "pokemon", "versionGroup", "move"],
  VersionGroupPokemonMoveMethodsUpdateWithoutMoveMethodInput: ["versionGroup"],
  PokemonSpeciesUpdateWithoutShapeInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesUpdateWithoutColorInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "shape", "habitat", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"],
  PokemonSpeciesUpdateWithoutHabitatInput: ["id", "identifier", "gender_rate", "capture_rate", "base_happiness", "is_baby", "hatch_counter", "has_gender_differences", "forms_switchable", "is_legendary", "is_mythical", "order", "conquest_order", "generation", "evolvesFrom", "evolvesTo", "evolutionChain", "color", "shape", "growthRate", "pokemon", "eggGroups", "dexNumbers", "evolution", "partySpecies", "tradeSpecies"]
};

type InputTypesNames = keyof typeof inputTypes;

type InputTypeFieldNames<TInput extends InputTypesNames> = Exclude<
  keyof typeof inputTypes[TInput]["prototype"],
  number | symbol
>;

type InputTypeFieldsConfig<
  TInput extends InputTypesNames
> = FieldsConfig<InputTypeFieldNames<TInput>>;

export type InputTypeConfig<TInput extends InputTypesNames> = {
  class?: ClassDecorator[];
  fields?: InputTypeFieldsConfig<TInput>;
};

export type InputTypesEnhanceMap = {
  [TInput in InputTypesNames]?: InputTypeConfig<TInput>;
};

export function applyInputTypesEnhanceMap(
  inputTypesEnhanceMap: InputTypesEnhanceMap,
) {
  for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
    const inputTypeName = inputTypeEnhanceMapKey as keyof typeof inputTypesEnhanceMap;
    const typeConfig = inputTypesEnhanceMap[inputTypeName]!;
    const typeClass = inputTypes[inputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      inputsInfo[inputTypeName as keyof typeof inputsInfo],
    );
  }
}

